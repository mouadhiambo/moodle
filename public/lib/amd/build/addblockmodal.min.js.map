{"version":3,"file":"addblockmodal.min.js","sources":["../src/addblockmodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Show an add block modal instead of doing it on a separate page.\r\n *\r\n * @module     core/addblockmodal\r\n * @deprecated since Moodle 4.2 - please use core_block/add_modal instead.\r\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport CancelModal from './modal_cancel';\r\nimport Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\nimport Ajax from 'core/ajax';\r\n\r\nconst SELECTORS = {\r\n    ADD_BLOCK: '[data-key=\"addblock\"]'\r\n};\r\n\r\n// Ensure we only add our listeners once.\r\nlet listenerEventsRegistered = false;\r\n\r\n/**\r\n * Register related event listeners.\r\n *\r\n * @method registerListenerEvents\r\n * @param {String} pageType The type of the page\r\n * @param {String} pageLayout The layout of the page\r\n * @param {String|null} addBlockUrl The add block URL\r\n * @param {String} subPage The subpage identifier\r\n */\r\nconst registerListenerEvents = (pageType, pageLayout, addBlockUrl, subPage) => {\r\n    document.addEventListener('click', e => {\r\n\r\n        const addBlock = e.target.closest(SELECTORS.ADD_BLOCK);\r\n        if (addBlock) {\r\n            e.preventDefault();\r\n\r\n            let addBlockModal = null;\r\n            let addBlockModalUrl = addBlockUrl ?? addBlock.dataset.url;\r\n\r\n            buildAddBlockModal()\r\n                .then(modal => {\r\n                    addBlockModal = modal;\r\n                    const modalBody = renderBlocks(addBlockModalUrl, pageType, pageLayout, subPage);\r\n                    modal.setBody(modalBody);\r\n                    modal.show();\r\n\r\n                    return modalBody;\r\n                })\r\n                .catch(() => {\r\n                    addBlockModal.destroy();\r\n                });\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Method that creates the 'add block' modal.\r\n *\r\n * @method buildAddBlockModal\r\n * @returns {Promise} The modal promise (modal's body will be rendered later).\r\n */\r\nconst buildAddBlockModal = () => {\r\n    return CancelModal.create({\r\n        title: getString('addblock')\r\n    });\r\n};\r\n\r\n/**\r\n * Method that renders the list of available blocks.\r\n *\r\n * @method renderBlocks\r\n * @param {String} addBlockUrl The add block URL\r\n * @param {String} pageType The type of the page\r\n * @param {String} pageLayout The layout of the page\r\n * @param {String} subPage The subpage identifier\r\n * @return {Promise}\r\n */\r\nconst renderBlocks = async(addBlockUrl, pageType, pageLayout, subPage) => {\r\n    // Fetch all addable blocks in the given page.\r\n    const blocks = await getAddableBlocks(pageType, pageLayout, subPage);\r\n\r\n    return Templates.render('core/add_block_body', {\r\n        blocks: blocks,\r\n        url: addBlockUrl\r\n    });\r\n};\r\n\r\n/**\r\n * Method that fetches all addable blocks in a given page.\r\n *\r\n * @method getAddableBlocks\r\n * @param {String} pageType The type of the page\r\n * @param {String} pageLayout The layout of the page\r\n * @param {String} subPage The subpage identifier\r\n * @return {Promise}\r\n */\r\nconst getAddableBlocks = async(pageType, pageLayout, subPage) => {\r\n    const request = {\r\n        methodname: 'core_block_fetch_addable_blocks',\r\n        args: {\r\n            pagecontextid: M.cfg.contextid,\r\n            pagetype: pageType,\r\n            pagelayout: pageLayout,\r\n            subpage: subPage,\r\n        },\r\n    };\r\n\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Set up the actions.\r\n *\r\n * @method init\r\n * @param {String} pageType The type of the page\r\n * @param {String} pageLayout The layout of the page\r\n * @param {String|null} addBlockUrl The add block URL\r\n * @param {String} subPage The subpage identifier\r\n */\r\nexport const init = (pageType, pageLayout, addBlockUrl = null, subPage = '') => {\r\n    if (!listenerEventsRegistered) {\r\n        registerListenerEvents(pageType, pageLayout, addBlockUrl, subPage);\r\n        listenerEventsRegistered = true;\r\n    }\r\n};\r\n"],"names":["SELECTORS","listenerEventsRegistered","registerListenerEvents","pageType","pageLayout","addBlockUrl","subPage","document","addEventListener","e","addBlock","target","closest","preventDefault","addBlockModal","addBlockModalUrl","dataset","url","buildAddBlockModal","then","modal","modalBody","renderBlocks","setBody","show","catch","destroy","CancelModal","create","title","async","blocks","getAddableBlocks","Templates","render","request","methodname","args","pagecontextid","M","cfg","contextid","pagetype","pagelayout","subpage","Ajax","call"],"mappings":";;;;;;;;8NA6BMA,oBACS,4BAIXC,0BAA2B,QAWzBC,uBAAyB,CAACC,SAAUC,WAAYC,YAAaC,WAC/DC,SAASC,iBAAiB,SAASC,UAEzBC,SAAWD,EAAEE,OAAOC,QAAQZ,wBAC9BU,SAAU,CACVD,EAAEI,qBAEEC,cAAgB,KAChBC,iBAAmBV,MAAAA,YAAAA,YAAeK,SAASM,QAAQC,IAEvDC,qBACKC,MAAKC,QACFN,cAAgBM,YACVC,UAAYC,aAAaP,iBAAkBZ,SAAUC,WAAYE,gBACvEc,MAAMG,QAAQF,WACdD,MAAMI,OAECH,aAEVI,OAAM,KACHX,cAAcY,kBAY5BR,mBAAqB,IAChBS,sBAAYC,OAAO,CACtBC,OAAO,kBAAU,cAcnBP,aAAeQ,MAAMzB,YAAaF,SAAUC,WAAYE,iBAEpDyB,aAAeC,iBAAiB7B,SAAUC,WAAYE,gBAErD2B,mBAAUC,OAAO,sBAAuB,CAC3CH,OAAQA,OACRd,IAAKZ,eAaP2B,iBAAmBF,MAAM3B,SAAUC,WAAYE,iBAC3C6B,QAAU,CACZC,WAAY,kCACZC,KAAM,CACFC,cAAeC,EAAEC,IAAIC,UACrBC,SAAUvC,SACVwC,WAAYvC,WACZwC,QAAStC,iBAIVuC,cAAKC,KAAK,CAACX,UAAU,kBAYZ,SAAChC,SAAUC,gBAAYC,mEAAc,KAAMC,+DAAU,GAChEL,2BACDC,uBAAuBC,SAAUC,WAAYC,YAAaC,SAC1DL,0BAA2B"}