{"version":3,"file":"icon_system.min.js","sources":["../src/icon_system.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Icon System base module.\r\n *\r\n * @module core/icon_system\r\n * @copyright  2017 Damyon Wiese\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport config from 'core/config';\r\n\r\n/**\r\n * Icon System abstract class.\r\n *\r\n * Any icon system needs to define a module extending this one and return this module name from the php icon_system class.\r\n *\r\n * @class core/icon_system\r\n */\r\nexport default class IconSystem {\r\n    /**\r\n     * A Promise which resolves to the Icon System instance.\r\n     *\r\n     * @private\r\n     * @var {Promise<IconSystem>}\r\n     */\r\n    static iconSystemInstance = null;\r\n\r\n    /**\r\n     * Factory method to fetch the Icon System currently in use.\r\n     *\r\n     * @returns {Promise<IconSystem>}\r\n     */\r\n    static async instance() {\r\n        if (this.iconSystemInstance) {\r\n            return await this.iconSystemInstance;\r\n        }\r\n\r\n        this.iconSystemInstance = (async () => {\r\n            const SystemClass = await import(config.iconsystemmodule);\r\n            const instance = new SystemClass();\r\n            if (!(instance instanceof IconSystem)) {\r\n                window.console.error('Class is not an IconSystem', SystemClass);\r\n                throw Error(`Invalid icon system specified ${config.iconsystemmodule}. Class is not an IconSystem.`);\r\n            }\r\n\r\n            return await instance.init();\r\n        })();\r\n\r\n        return await this.iconSystemInstance;\r\n    }\r\n\r\n    /**\r\n     * Initialise the icon system.\r\n     *\r\n     * @return {Promise<IconSystem>}\r\n     */\r\n    init() {\r\n        return Promise.resolve(this);\r\n    }\r\n\r\n    /**\r\n     * Render an icon.\r\n     *\r\n     * The key, component and title come from either the pix mustache helper tag, or the call to templates.renderIcon.\r\n     * The template is the pre-loaded template string matching the template from getTemplateName() in this class.\r\n     * This function must return a string (not a promise) because it is used during the internal rendering of the mustache\r\n     * template (which is unfortunately synchronous). To render the mustache template in this function call\r\n     * core/mustache.render() directly and do not use any partials, blocks or helper functions in the template.\r\n     *\r\n     * @param {string} key\r\n     * @param {string} component\r\n     * @param {string} title\r\n     * @param {string} template\r\n     * @returns {string}\r\n     * @method renderIcon\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    renderIcon(key, component, title, template) {\r\n        throw new Error('Abstract function not implemented.');\r\n    }\r\n\r\n    /**\r\n     * Get the name of the template.\r\n     *\r\n     * @returns {string}\r\n     * @method getTemplateName\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    getTemplateName() {\r\n        throw new Error('Abstract function not implemented.');\r\n    }\r\n}\r\n"],"names":["IconSystem","this","iconSystemInstance","SystemClass","config","iconsystemmodule","instance","window","console","error","Error","init","Promise","resolve","renderIcon","key","component","title","template","getTemplateName"],"mappings":"wXAgCqBA,0CAeTC,KAAKC,0BAIJA,mBAAqB,iBAChBC,kOAA2BC,gBAAOC,4SAAPD,gBAAb,4EAAaA,gBAAOC,oBAClCC,SAAW,IAAIH,iBACfG,oBAAoBN,kBACtBO,OAAOC,QAAQC,MAAM,6BAA8BN,aAC7CO,8CAAuCN,gBAAOC,gEAG3CC,SAASK,QARA,UAHTV,KAAKC,mBAsB1BS,cACWC,QAAQC,QAAQZ,MAoB3Ba,WAAWC,IAAKC,UAAWC,MAAOC,gBACxB,IAAIR,MAAM,sCAUpBS,wBACU,IAAIT,MAAM,oNAvEHV,gCAOW"}