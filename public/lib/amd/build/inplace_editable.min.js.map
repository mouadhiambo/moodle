{"version":3,"file":"inplace_editable.min.js","sources":["../src/inplace_editable.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * AJAX helper for the inline editing a value.\r\n *\r\n * This script is automatically included from template core/inplace_editable\r\n * It registers a click-listener on [data-inplaceeditablelink] link (the \"inplace edit\" icon),\r\n * then replaces the displayed value with an input field. On \"Enter\" it sends a request\r\n * to web service core_update_inplace_editable, which invokes the specified callback.\r\n * Any exception thrown by the web service (or callback) is displayed as an error popup.\r\n *\r\n * @module     core/inplace_editable\r\n * @copyright  2016 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine(\r\n    ['jquery',\r\n        'core/ajax',\r\n        'core/templates',\r\n        'core/notification',\r\n        'core/str',\r\n        'core/config',\r\n        'core/url',\r\n        'core/form-autocomplete',\r\n        'core/loadingicon',\r\n        'core/pending',\r\n        'core/local/inplace_editable/events',\r\n    ],\r\n    function($, ajax, templates, notification, str, cfg, url, autocomplete, LoadingIcon, Pending, Events) {\r\n\r\n        const removeSpinner = function(element) {\r\n            element.find('.loading-icon').hide();\r\n        };\r\n\r\n        /**\r\n         * Update an inplace editable value.\r\n         *\r\n         * @param {Jquery} mainelement the element to update\r\n         * @param {string} value the new value\r\n         * @param {bool} silent if true the change won't alter the current page focus\r\n         * @fires event:core/inplace_editable:updated\r\n         * @fires event:core/inplace_editable:updateFailed\r\n         */\r\n        const updateValue = function(mainelement, value, silent) {\r\n            var pendingId = [\r\n                mainelement.attr('data-itemid'),\r\n                mainelement.attr('data-component'),\r\n                mainelement.attr('data-itemtype'),\r\n            ].join('-');\r\n\r\n            var pendingPromise = new Pending(pendingId);\r\n            LoadingIcon.addIconToContainerRemoveOnCompletion(mainelement, pendingPromise);\r\n\r\n            ajax.call([{\r\n                methodname: 'core_update_inplace_editable',\r\n                args: {\r\n                    itemid: mainelement.attr('data-itemid'),\r\n                    component: mainelement.attr('data-component'),\r\n                    itemtype: mainelement.attr('data-itemtype'),\r\n                    value: value,\r\n                },\r\n            }])[0]\r\n                .then(function(data) {\r\n                    return templates.render('core/inplace_editable', data)\r\n                        .then(function(html, js) {\r\n                            var oldvalue = mainelement.attr('data-value');\r\n                            var newelement = $(html);\r\n                            templates.replaceNode(mainelement, newelement, js);\r\n                            if (!silent) {\r\n                                newelement.find('[data-inplaceeditablelink]').focus();\r\n                            }\r\n\r\n                            // Trigger updated event on the DOM element.\r\n                            Events.notifyElementUpdated(newelement.get(0), data, oldvalue);\r\n\r\n                            return;\r\n                        });\r\n                })\r\n                .then(function() {\r\n                    return pendingPromise.resolve();\r\n                })\r\n                .fail(function(ex) {\r\n                    removeSpinner(mainelement);\r\n                    M.util.js_complete(pendingId);\r\n\r\n                    // Trigger update failed event on the DOM element.\r\n                    let updateFailedEvent = Events.notifyElementUpdateFailed(mainelement.get(0), ex, value);\r\n                    if (!updateFailedEvent.defaultPrevented) {\r\n                        notification.exception(ex);\r\n                    }\r\n                });\r\n        };\r\n\r\n        $('body').on('click keypress', '[data-inplaceeditable] [data-inplaceeditablelink]', function(e) {\r\n            if (e.type === 'keypress' && e.keyCode !== 13) {\r\n                return;\r\n            }\r\n            var editingEnabledPromise = new Pending('autocomplete-start-editing');\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n            var target = $(this),\r\n                mainelement = target.closest('[data-inplaceeditable]');\r\n\r\n            var turnEditingOff = function(el) {\r\n                el.find('input').off();\r\n                el.find('select').off();\r\n                el.html(el.attr('data-oldcontent'));\r\n                el.removeAttr('data-oldcontent');\r\n                el.removeClass('inplaceeditingon');\r\n                el.find('[data-inplaceeditablelink]').focus();\r\n\r\n                // Re-enable any parent draggable attribute.\r\n                el.parents(`[data-inplace-in-draggable=\"true\"]`)\r\n                    .attr('draggable', true)\r\n                    .attr('data-inplace-in-draggable', false);\r\n            };\r\n\r\n            var turnEditingOffEverywhere = function() {\r\n                // Re-enable any disabled draggable attribute.\r\n                $(`[data-inplace-in-draggable=\"true\"]`)\r\n                    .attr('draggable', true)\r\n                    .attr('data-inplace-in-draggable', false);\r\n\r\n                $('span.inplaceeditable.inplaceeditingon').each(function() {\r\n                    turnEditingOff($(this));\r\n                });\r\n            };\r\n\r\n            var uniqueId = function(prefix, idlength) {\r\n                var uniqid = prefix,\r\n                    i;\r\n                for (i = 0; i < idlength; i++) {\r\n                    uniqid += String(Math.floor(Math.random() * 10));\r\n                }\r\n                // Make sure this ID is not already taken by an existing element.\r\n                if ($(\"#\" + uniqid).length === 0) {\r\n                    return uniqid;\r\n                }\r\n                return uniqueId(prefix, idlength);\r\n            };\r\n\r\n            var turnEditingOnText = function(el) {\r\n                str.get_string('edittitleinstructions').done(function(s) {\r\n                    var instr = $('<span class=\"editinstructions\">' + s + '</span>').\r\n                        attr('id', uniqueId('id_editinstructions_', 20)),\r\n                        inputelement = $('<input type=\"text\"/>').\r\n                            attr('id', uniqueId('id_inplacevalue_', 20)).\r\n                            attr('value', el.attr('data-value')).\r\n                            attr('aria-describedby', instr.attr('id')).\r\n                            addClass('ignoredirty').\r\n                            addClass('form-control'),\r\n                        lbl = $('<label class=\"accesshide\">' + mainelement.attr('data-editlabel') + '</label>').\r\n                            attr('for', inputelement.attr('id'));\r\n                    el.html('').append(instr).append(lbl).append(inputelement);\r\n\r\n                    inputelement.focus();\r\n                    inputelement.select();\r\n                    inputelement.on('keyup keypress focusout', function(e) {\r\n                        if (cfg.behatsiterunning && e.type === 'focusout') {\r\n                            // Behat triggers focusout too often.\r\n                            return;\r\n                        }\r\n                        if (e.type === 'keypress' && e.keyCode === 13) {\r\n                            // We need 'keypress' event for Enter because keyup/keydown would catch Enter that was\r\n                            // pressed in other fields.\r\n                            var val = inputelement.val();\r\n                            turnEditingOff(el);\r\n                            updateValue(el, val);\r\n                        }\r\n                        if ((e.type === 'keyup' && e.keyCode === 27) || e.type === 'focusout') {\r\n                            // We need 'keyup' event for Escape because keypress does not work with Escape.\r\n                            turnEditingOff(el);\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n\r\n            var turnEditingOnToggle = function(el, newvalue) {\r\n                turnEditingOff(el);\r\n                updateValue(el, newvalue);\r\n            };\r\n\r\n            var turnEditingOnSelect = function(el, options) {\r\n                var i,\r\n                    inputelement = $('<select></select>').\r\n                        attr('id', uniqueId('id_inplacevalue_', 20)).\r\n                        addClass('form-select'),\r\n                    lbl = $('<label class=\"accesshide\">' + mainelement.attr('data-editlabel') + '</label>')\r\n                        .attr('for', inputelement.attr('id'));\r\n                for (i in options) {\r\n                    inputelement\r\n                        .append($('<option>')\r\n                            .attr('value', options[i].key)\r\n                            .html(options[i].value));\r\n                }\r\n                inputelement.val(el.attr('data-value'));\r\n\r\n                el.html('')\r\n                    .append(lbl)\r\n                    .append(inputelement);\r\n\r\n                inputelement.focus();\r\n                inputelement.select();\r\n                inputelement.on('keyup change focusout', function(e) {\r\n                    if (cfg.behatsiterunning && e.type === 'focusout') {\r\n                        // Behat triggers focusout too often.\r\n                        return;\r\n                    }\r\n                    if (e.type === 'change') {\r\n                        var val = inputelement.val();\r\n                        turnEditingOff(el);\r\n                        updateValue(el, val);\r\n                    }\r\n                    if ((e.type === 'keyup' && e.keyCode === 27) || e.type === 'focusout') {\r\n                        // We need 'keyup' event for Escape because keypress does not work with Escape.\r\n                        turnEditingOff(el);\r\n                    }\r\n                });\r\n            };\r\n\r\n            var turnEditingOnAutocomplete = function(el, args) {\r\n                var i,\r\n                    inputelement = $('<select></select>').\r\n                        attr('id', uniqueId('id_inplacevalue_', 20)).\r\n                        addClass('form-autocomplete-original-select').\r\n                        addClass('form-select'),\r\n                    lbl = $('<label class=\"accesshide\">' + mainelement.attr('data-editlabel') + '</label>')\r\n                        .attr('for', inputelement.attr('id')),\r\n                    options = args.options,\r\n                    attributes = args.attributes,\r\n                    saveelement = $('<a href=\"#\"></a>'),\r\n                    cancelelement = $('<a href=\"#\"></a>');\r\n\r\n                for (i in options) {\r\n                    inputelement\r\n                        .append($('<option>')\r\n                            .attr('value', options[i].key)\r\n                            .html(options[i].value));\r\n                }\r\n                if (attributes.multiple) {\r\n                    inputelement.attr('multiple', 'true');\r\n                }\r\n                inputelement.val(JSON.parse(el.attr('data-value')));\r\n\r\n                str.get_string('savechanges', 'core').then(function(s) {\r\n                    return templates.renderPix('e/save', 'core', s);\r\n                }).then(function(html) {\r\n                    saveelement.append(html);\r\n                    return;\r\n                }).fail(notification.exception);\r\n\r\n                str.get_string('cancel', 'core').then(function(s) {\r\n                    return templates.renderPix('e/cancel', 'core', s);\r\n                }).then(function(html) {\r\n                    cancelelement.append(html);\r\n                    return;\r\n                }).fail(notification.exception);\r\n\r\n                el.html('')\r\n                    .append(lbl)\r\n                    .append(inputelement)\r\n                    .append(saveelement)\r\n                    .append(cancelelement);\r\n\r\n                inputelement.focus();\r\n                inputelement.select();\r\n                autocomplete.enhance(inputelement,\r\n                    attributes.tags,\r\n                    attributes.ajax,\r\n                    attributes.placeholder,\r\n                    attributes.caseSensitive,\r\n                    attributes.showSuggestions,\r\n                    attributes.noSelectionString)\r\n                    .then(function() {\r\n                        // Focus on the enhanced combobox.\r\n                        el.find('[role=combobox]').focus();\r\n                        // Stop eslint nagging.\r\n                        return;\r\n                    }).fail(notification.exception);\r\n\r\n                inputelement.on('keyup', function(e) {\r\n                    if ((e.type === 'keyup' && e.keyCode === 27) || e.type === 'focusout') {\r\n                        // We need 'keyup' event for Escape because keypress does not work with Escape.\r\n                        turnEditingOff(el);\r\n                    }\r\n                });\r\n                saveelement.on('click', function(e) {\r\n                    var val = JSON.stringify(inputelement.val());\r\n                    // We need to empty the node to destroy all event handlers etc.\r\n                    inputelement.empty();\r\n                    turnEditingOff(el);\r\n                    updateValue(el, val);\r\n                    e.preventDefault();\r\n                });\r\n                cancelelement.on('click', function(e) {\r\n                    // We need to empty the node to destroy all event handlers etc.\r\n                    inputelement.empty();\r\n                    turnEditingOff(el);\r\n                    e.preventDefault();\r\n                });\r\n            };\r\n\r\n            var turnEditingOn = function(el) {\r\n                el.addClass('inplaceeditingon');\r\n                el.attr('data-oldcontent', el.html());\r\n\r\n                var type = el.attr('data-type');\r\n                var options = el.attr('data-options');\r\n\r\n                // Input text inside draggable elements disable text selection in some browsers.\r\n                // To prevent this we temporally disable any parent draggables.\r\n                el.parents('[draggable=\"true\"]')\r\n                    .attr('data-inplace-in-draggable', true)\r\n                    .attr('draggable', false);\r\n\r\n                if (type === 'toggle') {\r\n                    turnEditingOnToggle(el, options);\r\n                } else if (type === 'select') {\r\n                    turnEditingOnSelect(el, $.parseJSON(options));\r\n                } else if (type === 'autocomplete') {\r\n                    turnEditingOnAutocomplete(el, $.parseJSON(options));\r\n                } else {\r\n                    turnEditingOnText(el);\r\n                }\r\n            };\r\n\r\n            // Turn editing on for the current element and register handler for Enter/Esc keys.\r\n            turnEditingOffEverywhere();\r\n            turnEditingOn(mainelement);\r\n            editingEnabledPromise.resolve();\r\n\r\n        });\r\n\r\n\r\n        return {\r\n            /**\r\n             * Return an object to interact with the current inplace editables at a frontend level.\r\n             *\r\n             * @param {Element} parent the parent element containing a inplace editable\r\n             * @returns {Object|undefined} an object to interact with the inplace element, or undefined\r\n             *                             if no inplace editable is found.\r\n             */\r\n            getInplaceEditable: function(parent) {\r\n                const element = parent.querySelector(`[data-inplaceeditable]`);\r\n                if (!element) {\r\n                    return undefined;\r\n                }\r\n                // Return an object to interact with the inplace editable.\r\n                return {\r\n                    element,\r\n                    /**\r\n                     * Get the value from the inplace editable.\r\n                     *\r\n                     * @returns {string} the current inplace value\r\n                     */\r\n                    getValue: function() {\r\n                        return this.element.dataset.value;\r\n                    },\r\n                    /**\r\n                     * Force a value change.\r\n                     *\r\n                     * @param {string} newvalue the new value\r\n                     * @fires event:core/inplace_editable:updated\r\n                     * @fires event:core/inplace_editable:updateFailed\r\n                     */\r\n                    setValue: function(newvalue) {\r\n                        updateValue($(this.element), newvalue, true);\r\n                    },\r\n                    /**\r\n                     * Return the inplace editable itemid.\r\n                     *\r\n                     * @returns {string} the current itemid\r\n                     */\r\n                    getItemId: function() {\r\n                        return this.element.dataset.itemid;\r\n                    },\r\n                };\r\n            }\r\n        };\r\n    });\r\n"],"names":["define","$","ajax","templates","notification","str","cfg","url","autocomplete","LoadingIcon","Pending","Events","updateValue","mainelement","value","silent","pendingId","attr","join","pendingPromise","addIconToContainerRemoveOnCompletion","call","methodname","args","itemid","component","itemtype","then","data","render","html","js","oldvalue","newelement","replaceNode","find","focus","notifyElementUpdated","get","resolve","fail","ex","hide","M","util","js_complete","notifyElementUpdateFailed","defaultPrevented","exception","on","e","type","keyCode","editingEnabledPromise","stopImmediatePropagation","preventDefault","this","closest","turnEditingOff","el","off","removeAttr","removeClass","parents","uniqueId","prefix","idlength","i","uniqid","String","Math","floor","random","length","each","addClass","options","newvalue","turnEditingOnToggle","inputelement","lbl","append","key","val","select","behatsiterunning","turnEditingOnSelect","parseJSON","attributes","saveelement","cancelelement","multiple","JSON","parse","get_string","s","renderPix","enhance","tags","placeholder","caseSensitive","showSuggestions","noSelectionString","stringify","empty","turnEditingOnAutocomplete","done","instr","turnEditingOnText","turnEditingOn","getInplaceEditable","parent","element","querySelector","getValue","dataset","setValue","getItemId"],"mappings":"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"}