{"version":3,"file":"chart_pie.min.js","sources":["../src/chart_pie.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Chart pie.\r\n *\r\n * @copyright  2016 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @module     core/chart_pie\r\n */\r\ndefine(['core/chart_base'], function(Base) {\r\n\r\n    /**\r\n     * Pie chart.\r\n     *\r\n     * @class\r\n     * @extends {module:core/chart_base}\r\n     */\r\n    function Pie() {\r\n        Base.prototype.constructor.apply(this, arguments);\r\n    }\r\n    Pie.prototype = Object.create(Base.prototype);\r\n\r\n    /** @override */\r\n    Pie.prototype.TYPE = 'pie';\r\n\r\n    /**\r\n     * Whether the chart should be displayed as doughnut or not.\r\n     *\r\n     * @type {Bool}\r\n     * @protected\r\n     */\r\n    Pie.prototype._doughnut = null;\r\n\r\n    /** @override */\r\n    Pie.prototype.create = function(Klass, data) {\r\n        var chart = Base.prototype.create.apply(this, arguments);\r\n        chart.setDoughnut(data.doughnut);\r\n        return chart;\r\n    };\r\n\r\n    /**\r\n     * Overridden to add appropriate colors to the series.\r\n     *\r\n     * @override\r\n     */\r\n    Pie.prototype.addSeries = function(series) {\r\n        if (series.getColor() === null) {\r\n            var colors = [];\r\n            var configColorSet = this.getConfigColorSet() || Base.prototype.COLORSET;\r\n            for (var i = 0; i < series.getCount(); i++) {\r\n                colors.push(configColorSet[i % configColorSet.length]);\r\n            }\r\n            series.setColors(colors);\r\n        }\r\n        return Base.prototype.addSeries.apply(this, arguments);\r\n    };\r\n\r\n    /**\r\n     * Get whether the chart should be displayed as doughnut or not.\r\n     *\r\n     * @method getDoughnut\r\n     * @returns {Bool}\r\n     */\r\n    Pie.prototype.getDoughnut = function() {\r\n        return this._doughnut;\r\n    };\r\n\r\n    /**\r\n     * Set whether the chart should be displayed as doughnut or not.\r\n     *\r\n     * @method setDoughnut\r\n     * @param {Bool} doughnut True for doughnut type, false for pie.\r\n     */\r\n    Pie.prototype.setDoughnut = function(doughnut) {\r\n        this._doughnut = Boolean(doughnut);\r\n    };\r\n\r\n    /**\r\n     * Validate a series.\r\n     *\r\n     * Overrides parent implementation to validate that there is only\r\n     * one series per chart instance.\r\n     *\r\n     * @override\r\n     */\r\n    Pie.prototype._validateSeries = function() {\r\n        if (this._series.length >= 1) {\r\n            throw new Error('Pie charts only support one serie.');\r\n        }\r\n        return Base.prototype._validateSeries.apply(this, arguments);\r\n    };\r\n\r\n    return Pie;\r\n\r\n});\r\n"],"names":["define","Base","Pie","prototype","constructor","apply","this","arguments","Object","create","TYPE","_doughnut","Klass","data","chart","setDoughnut","doughnut","addSeries","series","getColor","colors","configColorSet","getConfigColorSet","COLORSET","i","getCount","push","length","setColors","getDoughnut","Boolean","_validateSeries","_series","Error"],"mappings":";;;;;;;AAsBAA,wBAAO,CAAC,oBAAoB,SAASC,eAQxBC,MACLD,KAAKE,UAAUC,YAAYC,MAAMC,KAAMC,kBAE3CL,IAAIC,UAAYK,OAAOC,OAAOR,KAAKE,WAGnCD,IAAIC,UAAUO,KAAO,MAQrBR,IAAIC,UAAUQ,UAAY,KAG1BT,IAAIC,UAAUM,OAAS,SAASG,MAAOC,UAC/BC,MAAQb,KAAKE,UAAUM,OAAOJ,MAAMC,KAAMC,kBAC9CO,MAAMC,YAAYF,KAAKG,UAChBF,OAQXZ,IAAIC,UAAUc,UAAY,SAASC,WACL,OAAtBA,OAAOC,WAAqB,SACxBC,OAAS,GACTC,eAAiBf,KAAKgB,qBAAuBrB,KAAKE,UAAUoB,SACvDC,EAAI,EAAGA,EAAIN,OAAOO,WAAYD,IACnCJ,OAAOM,KAAKL,eAAeG,EAAIH,eAAeM,SAElDT,OAAOU,UAAUR,eAEdnB,KAAKE,UAAUc,UAAUZ,MAAMC,KAAMC,YAShDL,IAAIC,UAAU0B,YAAc,kBACjBvB,KAAKK,WAShBT,IAAIC,UAAUY,YAAc,SAASC,eAC5BL,UAAYmB,QAAQd,WAW7Bd,IAAIC,UAAU4B,gBAAkB,cACxBzB,KAAK0B,QAAQL,QAAU,QACjB,IAAIM,MAAM,6CAEbhC,KAAKE,UAAU4B,gBAAgB1B,MAAMC,KAAMC,YAG/CL"}