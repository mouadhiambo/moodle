{"version":3,"file":"modal_save_cancel.min.js","sources":["../src/modal_save_cancel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Contain the logic for the save/cancel modal.\r\n *\r\n * @module     core/modal_save_cancel\r\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Modal from 'core/modal';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * The Save/Cancel Modal.\r\n *\r\n * @class\r\n * @extends module:core/modal\r\n */\r\nexport default class ModalSaveCancel extends Modal {\r\n    static TYPE = 'SAVE_CANCEL';\r\n    static TEMPLATE = 'core/modal_save_cancel';\r\n\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        if (!this.getFooter().find(this.getActionSelector('save')).length) {\r\n            Notification.exception({message: 'No save button found'});\r\n        }\r\n\r\n        if (!this.getFooter().find(this.getActionSelector('cancel')).length) {\r\n            Notification.exception({message: 'No cancel button found'});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Register all event listeners.\r\n     */\r\n    registerEventListeners() {\r\n        // Call the parent registration.\r\n        super.registerEventListeners();\r\n\r\n        // Register to close on save/cancel.\r\n        this.registerCloseOnSave();\r\n        this.registerCloseOnCancel();\r\n    }\r\n\r\n    /**\r\n     * Override parent implementation to prevent changing the footer content.\r\n     */\r\n    setFooter() {\r\n        Notification.exception({message: 'Can not change the footer of a save cancel modal'});\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Set the title of the save button.\r\n     *\r\n     * @param {String|Promise} value The button text, or a Promise which will resolve it\r\n     * @returns{Promise}\r\n     */\r\n    setSaveButtonText(value) {\r\n        return this.setButtonText('save', value);\r\n    }\r\n}\r\n\r\nModalSaveCancel.registerModalType();\r\n"],"names":["ModalSaveCancel","Modal","constructor","root","this","getFooter","find","getActionSelector","length","exception","message","registerEventListeners","registerCloseOnSave","registerCloseOnCancel","setFooter","setSaveButtonText","value","setButtonText","registerModalType"],"mappings":"4hBAgCqBA,wBAAwBC,eAIzCC,YAAYC,YACFA,MAEDC,KAAKC,YAAYC,KAAKF,KAAKG,kBAAkB,SAASC,8BAC1CC,UAAU,CAACC,QAAS,yBAGhCN,KAAKC,YAAYC,KAAKF,KAAKG,kBAAkB,WAAWC,8BAC5CC,UAAU,CAACC,QAAS,2BAOzCC,+BAEUA,8BAGDC,2BACAC,wBAMTC,kCACiBL,UAAU,CAACC,QAAS,qDAUrCK,kBAAkBC,cACPZ,KAAKa,cAAc,OAAQD,gEA3CrBhB,uBACH,+BADGA,2BAEC,0BA6CtBA,gBAAgBkB"}