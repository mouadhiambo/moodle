{"version":3,"file":"events.min.js","sources":["../../../src/local/collapsable_section/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The collapsable section events.\r\n *\r\n * This module wraps the standard bootstrap collapsable events, but for collapsable sections.\r\n *\r\n * @module     core/local/collapsable_section/events\r\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n *\r\n * @example <caption>Example of listening to a collapsable section events.</caption>\r\n * import {eventTypes as collapsableSectionEventTypes} from 'core/local/collapsable_section/events';\r\n *\r\n * document.addEventListener(collapsableSectionEventTypes.shown, event => {\r\n *     window.console.log(event.target); // The HTMLElement relating to the block whose content was updated.\r\n * });\r\n */\r\n\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\n\r\n/**\r\n * Events for `core_block`.\r\n *\r\n * @constant\r\n * @property {String} blockContentUpdated See {@link event:blockContentUpdated}\r\n */\r\nexport const eventTypes = {\r\n    /**\r\n     * An event triggered when the content of a block has changed.\r\n     *\r\n     * @event blockContentUpdated\r\n     * @type {CustomEvent}\r\n     * @property {HTMLElement} target The block element that was updated\r\n     * @property {object} detail\r\n     * @property {number} detail.instanceId The block instance id\r\n     */\r\n    shown: 'core_collapsable_section_shown',\r\n    hidden: 'core_collapsable_section_hidden',\r\n    // All Bootstrap 4 jQuery events are wrapped while MDL-71979 is not integrated.\r\n    hideBsCollapse: 'hide.bs.collapse',\r\n    hiddenBsCollapse: 'hidden.bs.collapse',\r\n    showBsCollapse: 'show.bs.collapse',\r\n    shownBsCollapse: 'shown.bs.collapse',\r\n};\r\n\r\n/**\r\n * Trigger an event to indicate that the content of a block was updated.\r\n *\r\n * @method notifyBlockContentUpdated\r\n * @param {HTMLElement} element The HTMLElement containing the updated block.\r\n * @returns {CustomEvent}\r\n * @fires blockContentUpdated\r\n */\r\nexport const notifyCollapsableSectionShown = element => dispatchEvent(\r\n    eventTypes.shown,\r\n    {},\r\n    element\r\n);\r\n\r\n/**\r\n * Trigger an event to indicate that the content of a block was updated.\r\n *\r\n * @method notifyBlockContentUpdated\r\n * @param {HTMLElement} element The HTMLElement containing the updated block.\r\n * @returns {CustomEvent}\r\n * @fires blockContentUpdated\r\n */\r\nexport const notifyCollapsableSectionHidden = element => dispatchEvent(\r\n    eventTypes.hidden,\r\n    {},\r\n    element\r\n);\r\n"],"names":["eventTypes","shown","hidden","hideBsCollapse","hiddenBsCollapse","showBsCollapse","shownBsCollapse","element"],"mappings":";;;;;;;;;;;;;;;;;MAwCaA,WAAa,CAUtBC,MAAO,iCACPC,OAAQ,kCAERC,eAAgB,mBAChBC,iBAAkB,qBAClBC,eAAgB,mBAChBC,gBAAiB,2FAWwBC,UAAW,mCACpDP,WAAWC,MACX,GACAM,iDAW0CA,UAAW,mCACrDP,WAAWE,OACX,GACAK"}