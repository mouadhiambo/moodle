{"version":3,"file":"monitor.min.js","sources":["../../../src/local/process_monitor/monitor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The file upload monitor component.\r\n *\r\n * @module     core/local/process_monitor/monitor\r\n * @class      core/local/process_monitor/monitor\r\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Templates from 'core/templates';\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {manager} from 'core/local/process_monitor/manager';\r\n\r\nexport default class extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'process_monitor';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            QUEUELIST: `[data-for=\"process-list\"]`,\r\n            CLOSE: `[data-action=\"hide\"]`,\r\n        };\r\n        // Default classes to toggle on refresh.\r\n        this.classes = {\r\n            SHOW: 'show',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance form the mustache template.\r\n     *\r\n     * @param {string} query the DOM main element query selector\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {this}\r\n     */\r\n    static init(query, selectors) {\r\n        return new this({\r\n            element: document.querySelector(query),\r\n            reactive: manager,\r\n            selectors,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the initial state\r\n     */\r\n    stateReady(state) {\r\n        this._updateMonitor({state, element: state.display});\r\n        this.addEventListener(this.getElement(this.selectors.CLOSE), 'click', this._closeMonitor);\r\n        state.queue.forEach((element) => {\r\n            this._createListItem({state, element});\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Return the component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            // State changes that require to reload some course modules.\r\n            {watch: `queue:created`, handler: this._createListItem},\r\n            {watch: `display:updated`, handler: this._updateMonitor},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Create a monitor item.\r\n     *\r\n     * @param {object} args the watcher arguments\r\n     * @param {object} args.element the item state data\r\n     */\r\n    async _createListItem({element}) {\r\n        const {html, js} = await Templates.renderForPromise(\r\n            'core/local/process_monitor/process',\r\n            {...element}\r\n        );\r\n        const target = this.getElement(this.selectors.QUEUELIST);\r\n        Templates.appendNodeContents(target, html, js);\r\n    }\r\n\r\n    /**\r\n     * Create a monitor item.\r\n     *\r\n     * @param {object} args the watcher arguments\r\n     * @param {object} args.element the display state data\r\n     */\r\n    _updateMonitor({element}) {\r\n        this.element.classList.toggle(this.classes.SHOW, element.show === true);\r\n    }\r\n\r\n    /**\r\n     * Close the monitor.\r\n     */\r\n    _closeMonitor() {\r\n        this.reactive.dispatch('setShow', false);\r\n    }\r\n}\r\n"],"names":["BaseComponent","create","name","selectors","QUEUELIST","CLOSE","classes","SHOW","query","this","element","document","querySelector","reactive","manager","stateReady","state","_updateMonitor","display","addEventListener","getElement","_closeMonitor","queue","forEach","_createListItem","getWatchers","watch","handler","html","js","Templates","renderForPromise","target","appendNodeContents","classList","toggle","show","dispatch"],"mappings":";;;;;;;;0KA4B6BA,wBAKzBC,cAESC,KAAO,uBAEPC,UAAY,CACbC,sCACAC,mCAGCC,QAAU,CACXC,KAAM,oBAWFC,MAAOL,kBACR,IAAIM,KAAK,CACZC,QAASC,SAASC,cAAcJ,OAChCK,SAAUC,iBACVX,UAAAA,YASRY,WAAWC,YACFC,eAAe,CAACD,MAAAA,MAAON,QAASM,MAAME,eACtCC,iBAAiBV,KAAKW,WAAWX,KAAKN,UAAUE,OAAQ,QAASI,KAAKY,eAC3EL,MAAMM,MAAMC,SAASb,eACZc,gBAAgB,CAACR,MAAAA,MAAON,QAAAA,aASrCe,oBACW,CAEH,CAACC,sBAAwBC,QAASlB,KAAKe,iBACvC,CAACE,wBAA0BC,QAASlB,KAAKQ,iDAU3BP,QAACA,oBACbkB,KAACA,KAADC,GAAOA,UAAYC,mBAAUC,iBAC/B,qCACA,IAAIrB,UAEFsB,OAASvB,KAAKW,WAAWX,KAAKN,UAAUC,8BACpC6B,mBAAmBD,OAAQJ,KAAMC,IAS/CZ,0BAAeP,QAACA,oBACPA,QAAQwB,UAAUC,OAAO1B,KAAKH,QAAQC,MAAuB,IAAjBG,QAAQ0B,MAM7Df,qBACSR,SAASwB,SAAS,WAAW"}