{"version":3,"file":"oauth2callback.min.js","sources":["../../src/moodlenet/oauth2callback.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A module to handle the OAuth2 callback for MoodleNet.\r\n *\r\n * @module     core/moodlenet/oauth2callback\r\n * @copyright  2023 Huong Nguyen <huongnv13@gmail.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      4.2\r\n */\r\n\r\nimport Prefetch from \"core/prefetch\";\r\nimport {alert} from 'core/notification';\r\nimport {getString} from 'core/str';\r\n\r\n/**\r\n * Handle the OAuth2 callback for MoodleNet.\r\n *\r\n * @param {String} error Error\r\n * @param {String} errorDescription Error description\r\n */\r\nconst handleCallback = (error, errorDescription) => {\r\n    if (window.opener) {\r\n        // Call the MoodleNet Authorization again in the opener window.\r\n        window.opener.moodleNetAuthorize(error, errorDescription);\r\n        // Close the authorization popup.\r\n        // We need to use setTimeout here because the Behat 'I press \"x\" and switch to main window' step expects the popup to still\r\n        // be visible after clicking the button. Otherwise, it will throw a webdriver error.\r\n        setTimeout(() => {\r\n            // Close the authorization popup.\r\n            window.close();\r\n        }, 300);\r\n    } else {\r\n        alert(getString('error', 'moodle'), getString('moodlenet:sharefailtitle', 'moodle'));\r\n    }\r\n};\r\n\r\n/**\r\n * Initialize.\r\n *\r\n * @param {String} error Error\r\n * @param {String} errorDescription Error description\r\n */\r\nexport const init = (error, errorDescription) => {\r\n    Prefetch.prefetchStrings('moodle', ['moodlenet:sharefailtitle', 'error']);\r\n    handleCallback(error, errorDescription);\r\n};\r\n"],"names":["error","errorDescription","prefetchStrings","window","opener","moodleNetAuthorize","setTimeout","close","handleCallback"],"mappings":";;;;;;;;4JAwDoB,CAACA,MAAOC,sCACfC,gBAAgB,SAAU,CAAC,2BAA4B,UAvB7C,EAACF,MAAOC,oBACvBE,OAAOC,QAEPD,OAAOC,OAAOC,mBAAmBL,MAAOC,kBAIxCK,YAAW,KAEPH,OAAOI,UACR,+BAEG,kBAAU,QAAS,WAAW,kBAAU,2BAA4B,YAY9EC,CAAeR,MAAOC"}