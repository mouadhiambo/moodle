{"version":3,"file":"storagewrapper.min.js","sources":["../src/storagewrapper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Wrap an instance of the browser's local or session storage to handle\r\n * cache expiry, key namespacing and other helpful things.\r\n *\r\n * @module     core/storagewrapper\r\n * @copyright  2017 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['core/config'], function(config) {\r\n\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param {object} storage window.localStorage or window.sessionStorage\r\n     */\r\n    var Wrapper = function(storage) {\r\n        this.storage = storage;\r\n        this.supported = this.detectSupport();\r\n        this.hashSource = config.wwwroot + '/' + config.jsrev;\r\n        this.hash = this.hashString(this.hashSource);\r\n        this.prefix = this.hash + '/';\r\n        this.jsrevPrefix = this.hashString(config.wwwroot) + '/jsrev';\r\n        this.validateCache();\r\n    };\r\n\r\n    /**\r\n     * Check if the browser supports the type of storage.\r\n     *\r\n     * @method detectSupport\r\n     * @return {boolean} True if the browser supports storage.\r\n     */\r\n    Wrapper.prototype.detectSupport = function() {\r\n        if (config.jsrev == -1) {\r\n            // Disable cache if debugging.\r\n            return false;\r\n        }\r\n        if (typeof (this.storage) === \"undefined\") {\r\n            return false;\r\n        }\r\n        var testKey = 'test';\r\n        try {\r\n            if (this.storage === null) {\r\n                return false;\r\n            }\r\n            // MDL-51461 - Some browsers misreport availability of the storage\r\n            // so check it is actually usable.\r\n            this.storage.setItem(testKey, '1');\r\n            this.storage.removeItem(testKey);\r\n            return true;\r\n        } catch (ex) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add a unique prefix to all keys so multiple moodle sites do not share caches.\r\n     *\r\n     * @method prefixKey\r\n     * @param {string} key The cache key to prefix.\r\n     * @return {string} The new key\r\n     */\r\n    Wrapper.prototype.prefixKey = function(key) {\r\n        return this.prefix + key;\r\n    };\r\n\r\n    /**\r\n     * Check the current jsrev version and clear the cache if it has been bumped.\r\n     *\r\n     * @method validateCache\r\n     */\r\n    Wrapper.prototype.validateCache = function() {\r\n        if (!this.supported) {\r\n            return;\r\n        }\r\n        var cacheVersion = this.storage.getItem(this.jsrevPrefix);\r\n        if (cacheVersion === null) {\r\n            this.storage.setItem(this.jsrevPrefix, config.jsrev);\r\n            return;\r\n        }\r\n\r\n        var moodleVersion = config.jsrev;\r\n        if (moodleVersion != cacheVersion) {\r\n            this.storage.clear();\r\n            this.storage.setItem(this.jsrevPrefix, config.jsrev);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Hash a string, used to make shorter key prefixes.\r\n     *\r\n     * @method hashString\r\n     * @param {String} source The string to hash\r\n     * @return {Number}\r\n     */\r\n    Wrapper.prototype.hashString = function(source) {\r\n        // From http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery.\r\n        /* jshint bitwise: false */\r\n        /* eslint no-bitwise: \"off\" */\r\n        var hash = 0;\r\n        var i, chr, len;\r\n        if (source.length === 0) {\r\n            return hash;\r\n        }\r\n        for (i = 0, len = source.length; i < len; i++) {\r\n            chr = source.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n\r\n    /**\r\n     * Get a value from local storage. Remember - all values must be strings.\r\n     *\r\n     * @method get\r\n     * @param {string} key The cache key to check.\r\n     * @return {boolean|string} False if the value is not in the cache, or some other error - a string otherwise.\r\n     */\r\n    Wrapper.prototype.get = function(key) {\r\n        if (!this.supported) {\r\n            return false;\r\n        }\r\n        key = this.prefixKey(key);\r\n\r\n        return this.storage.getItem(key);\r\n    };\r\n\r\n    /**\r\n     * Set a value to local storage. Remember - all values must be strings.\r\n     *\r\n     * @method set\r\n     * @param {string} key The cache key to set.\r\n     * @param {string} value The value to set.\r\n     * @return {boolean} False if the value can't be saved in the cache, or some other error - true otherwise.\r\n     */\r\n    Wrapper.prototype.set = function(key, value) {\r\n        if (!this.supported) {\r\n            return false;\r\n        }\r\n        key = this.prefixKey(key);\r\n        // This can throw exceptions when the storage limit is reached.\r\n        try {\r\n            this.storage.setItem(key, value);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Clean local storage.\r\n     *\r\n     * @method clean\r\n     */\r\n    Wrapper.prototype.clean = function() {\r\n        this.storage.clear();\r\n    };\r\n\r\n    return Wrapper;\r\n});\r\n"],"names":["define","config","Wrapper","storage","supported","this","detectSupport","hashSource","wwwroot","jsrev","hash","hashString","prefix","jsrevPrefix","validateCache","prototype","setItem","removeItem","ex","prefixKey","key","cacheVersion","getItem","clear","source","i","len","length","charCodeAt","get","set","value","e","clean"],"mappings":";;;;;;;;AAuBAA,6BAAO,CAAC,gBAAgB,SAASC,YAOzBC,QAAU,SAASC,cACdA,QAAUA,aACVC,UAAYC,KAAKC,qBACjBC,WAAaN,OAAOO,QAAU,IAAMP,OAAOQ,WAC3CC,KAAOL,KAAKM,WAAWN,KAAKE,iBAC5BK,OAASP,KAAKK,KAAO,SACrBG,YAAcR,KAAKM,WAAWV,OAAOO,SAAW,cAChDM,wBASTZ,QAAQa,UAAUT,cAAgB,eACT,GAAjBL,OAAOQ,aAEA,UAEmB,IAAlBJ,KAAKF,eACN,aAIc,OAAjBE,KAAKF,eAKJA,QAAQa,QAPH,OAOoB,UACzBb,QAAQc,WARH,SASH,GACT,MAAOC,WACE,IAWfhB,QAAQa,UAAUI,UAAY,SAASC,YAC5Bf,KAAKO,OAASQ,KAQzBlB,QAAQa,UAAUD,cAAgB,cACzBT,KAAKD,eAGNiB,aAAehB,KAAKF,QAAQmB,QAAQjB,KAAKQ,gBACxB,OAAjBQ,aAKgBpB,OAAOQ,OACNY,oBACZlB,QAAQoB,aACRpB,QAAQa,QAAQX,KAAKQ,YAAaZ,OAAOQ,kBAPzCN,QAAQa,QAAQX,KAAKQ,YAAaZ,OAAOQ,SAkBtDP,QAAQa,UAAUJ,WAAa,SAASa,YAKhCC,EAAQC,IADRhB,KAAO,KAEW,IAAlBc,OAAOG,cACAjB,SAENe,EAAI,EAAGC,IAAMF,OAAOG,OAAQF,EAAIC,IAAKD,IAEtCf,MAASA,MAAQ,GAAKA,KADhBc,OAAOI,WAAWH,GAExBf,MAAQ,SAELA,MAUXR,QAAQa,UAAUc,IAAM,SAAST,aACxBf,KAAKD,YAGVgB,IAAMf,KAAKc,UAAUC,KAEdf,KAAKF,QAAQmB,QAAQF,OAWhClB,QAAQa,UAAUe,IAAM,SAASV,IAAKW,WAC7B1B,KAAKD,iBACC,EAEXgB,IAAMf,KAAKc,UAAUC,cAGZjB,QAAQa,QAAQI,IAAKW,OAC5B,MAAOC,UACE,SAEJ,GAQX9B,QAAQa,UAAUkB,MAAQ,gBACjB9B,QAAQoB,SAGVrB"}