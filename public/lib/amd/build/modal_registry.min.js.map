{"version":3,"file":"modal_registry.min.js","sources":["../src/modal_registry.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A registry for the different types of modal.\r\n *\r\n * @module     core/modal_registry\r\n * @class      modal_registry\r\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport * as Notification from 'core/notification';\r\nimport * as Prefetch from 'core/prefetch';\r\n\r\n// A singleton registry for all modules to access. Allows types to be\r\n// added at runtime.\r\nconst registry = new Map();\r\n\r\n/**\r\n * Get a registered type of modal.\r\n *\r\n * @method get\r\n * @param {string} type The type of modal to get\r\n * @return {object} The registered config for the modal\r\n */\r\nexport const get = (type) => registry.get(type);\r\n\r\n/**\r\n * Register a modal with the registry.\r\n *\r\n * @method register\r\n * @param {string} type The type of modal (must be unique)\r\n * @param {function} module The modal module (must be a constructor function of type core/modal)\r\n * @param {string} template The template name of the modal\r\n */\r\nexport const register = (type, module, template) => {\r\n    const existing = get(type);\r\n    if (existing && existing.module !== module) {\r\n        Notification.exception({\r\n            message: `Modal of  type '${type}' is already registered`,\r\n        });\r\n    }\r\n\r\n    if (!module || typeof module !== 'function') {\r\n        Notification.exception({message: \"You must provide a modal module\"});\r\n    }\r\n\r\n    if (!template) {\r\n        Notification.exception({message: \"You must provide a modal template\"});\r\n    }\r\n\r\n    registry.set(type, {module, template});\r\n\r\n    // Prefetch the template.\r\n    Prefetch.prefetchTemplate(template);\r\n};\r\n\r\nexport default {\r\n    register,\r\n    get,\r\n};\r\n"],"names":["registry","Map","get","type","register","module","template","existing","Notification","exception","message","set","Prefetch","prefetchTemplate"],"mappings":";;;;;;;;wNA4BMA,SAAW,IAAIC,IASRC,IAAOC,MAASH,SAASE,IAAIC,6BAU7BC,SAAW,CAACD,KAAME,OAAQC,kBAC7BC,SAAWL,IAAIC,MACjBI,UAAYA,SAASF,SAAWA,QAChCG,aAAaC,UAAU,CACnBC,kCAA4BP,kCAI/BE,QAA4B,mBAAXA,QAClBG,aAAaC,UAAU,CAACC,QAAS,oCAGhCJ,UACDE,aAAaC,UAAU,CAACC,QAAS,sCAGrCV,SAASW,IAAIR,KAAM,CAACE,OAAAA,OAAQC,SAAAA,WAG5BM,SAASC,iBAAiBP,mDAGf,CACXF,SAAAA,SACAF,IAAAA"}