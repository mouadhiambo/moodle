{"version":3,"file":"pubsub.min.js","sources":["../src/pubsub.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A simple Javascript PubSub implementation.\r\n *\r\n * @module     core/pubsub\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport Pending from 'core/pending';\r\n\r\nconst events = {};\r\n\r\n/**\r\n * Subscribe to an event.\r\n *\r\n * @param {string} eventName The name of the event to subscribe to.\r\n * @param {function} callback The callback function to run when eventName occurs.\r\n */\r\nexport const subscribe = function(eventName, callback) {\r\n    events[eventName] = events[eventName] || [];\r\n    events[eventName].push(callback);\r\n};\r\n\r\n/**\r\n * Unsubscribe from an event.\r\n *\r\n * @param {string} eventName The name of the event to unsubscribe from.\r\n * @param {function} callback The callback to unsubscribe.\r\n */\r\nexport const unsubscribe = function(eventName, callback) {\r\n    if (events[eventName]) {\r\n        for (var i = 0; i < events[eventName].length; i++) {\r\n            if (events[eventName][i] === callback) {\r\n                events[eventName].splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Publish an event to all subscribers.\r\n *\r\n * @param {string} eventName The name of the event to publish.\r\n * @param {any} data The data to provide to the subscribed callbacks.\r\n */\r\nexport const publish = function(eventName, data) {\r\n    const pendingPromise = new Pending(\"Publishing \" + eventName);\r\n    if (events[eventName]) {\r\n        events[eventName].forEach(function(callback) {\r\n            callback(data);\r\n        });\r\n    }\r\n    pendingPromise.resolve();\r\n};\r\n"],"names":["events","eventName","callback","push","i","length","splice","data","pendingPromise","Pending","forEach","resolve"],"mappings":";;;;;;;6LAwBMA,OAAS,sBAQU,SAASC,UAAWC,UACzCF,OAAOC,WAAaD,OAAOC,YAAc,GACzCD,OAAOC,WAAWE,KAAKD,gCASA,SAASD,UAAWC,aACvCF,OAAOC,eACF,IAAIG,EAAI,EAAGA,EAAIJ,OAAOC,WAAWI,OAAQD,OACtCJ,OAAOC,WAAWG,KAAOF,SAAU,CACnCF,OAAOC,WAAWK,OAAOF,EAAG,4BAarB,SAASH,UAAWM,YACjCC,eAAiB,IAAIC,iBAAQ,cAAgBR,WAC/CD,OAAOC,YACPD,OAAOC,WAAWS,SAAQ,SAASR,UAC/BA,SAASK,SAGjBC,eAAeG"}