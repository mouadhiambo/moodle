{"version":3,"file":"dragdrop.min.js","sources":["../src/dragdrop.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * JavaScript to handle drag operations, including automatic scrolling.\r\n *\r\n * Note: this module is defined statically. It is a singleton. You\r\n * can only have one use of it active at any time. However, you\r\n * can only drag one thing at a time, this is not a problem in practice.\r\n *\r\n * @module     core/dragdrop\r\n * @copyright  2016 The Open University\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.6\r\n */\r\ndefine(['jquery', 'core/autoscroll'], function($, autoScroll) {\r\n    var dragdrop = {\r\n        /**\r\n         * A boolean or options argument depending on whether browser supports passive events.\r\n         * @private\r\n         */\r\n        eventCaptureOptions: {passive: false, capture: true},\r\n\r\n        /**\r\n         * Drag proxy if any.\r\n         * @private\r\n         */\r\n        dragProxy: null,\r\n\r\n        /**\r\n         * Function called on move.\r\n         * @private\r\n         */\r\n        onMove: null,\r\n\r\n        /**\r\n         * Function called on drop.\r\n         * @private\r\n         */\r\n        onDrop: null,\r\n\r\n        /**\r\n         * Initial position of proxy at drag start.\r\n         */\r\n        initialPosition: null,\r\n\r\n        /**\r\n         * Initial page X of cursor at drag start.\r\n         */\r\n        initialX: null,\r\n\r\n        /**\r\n         * Initial page Y of cursor at drag start.\r\n         */\r\n        initialY: null,\r\n\r\n        /**\r\n         * If touch event is in progress, this will be the id, otherwise null\r\n         */\r\n        touching: null,\r\n\r\n        /**\r\n         * Prepares to begin a drag operation - call with a mousedown or touchstart event.\r\n         *\r\n         * If the returned object has 'start' true, then you can set up a drag proxy, and call\r\n         * start. This function will call preventDefault automatically regardless of whether\r\n         * starting or not.\r\n         *\r\n         * @public\r\n         * @param {Object} event Event (should be either mousedown or touchstart)\r\n         * @return {Object} Object with start (boolean flag) and x, y (only if flag true) values\r\n         */\r\n        prepare: function(event) {\r\n            event.preventDefault();\r\n            var start;\r\n            if (event.type === 'touchstart') {\r\n                // For touch, start if there's at least one touch and we are not currently doing\r\n                // a touch event.\r\n                start = (dragdrop.touching === null) && event.changedTouches.length > 0;\r\n            } else {\r\n                // For mousedown, start if it's the left button.\r\n                start = event.which === 1;\r\n            }\r\n            if (start) {\r\n                var details = dragdrop.getEventXY(event);\r\n                details.start = true;\r\n                return details;\r\n            } else {\r\n                return {start: false};\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Call to start a drag operation, in response to a mouse down or touch start event.\r\n         * Normally call this after calling prepare and receiving start true (you can probably\r\n         * skip prepare if only supporting drag not touch).\r\n         *\r\n         * Note: The caller is responsible for creating a 'drag proxy' which is the\r\n         * thing that actually gets dragged. At present, this doesn't really work\r\n         * properly unless it is added directly within the body tag.\r\n         *\r\n         * You also need to ensure that there is CSS so the proxy is absolutely positioned,\r\n         * and styled to look like it is floating.\r\n         *\r\n         * You also need to absolutely position the proxy where you want it to start.\r\n         *\r\n         * @public\r\n         * @param {Object} event Event (should be either mousedown or touchstart)\r\n         * @param {jQuery} dragProxy An absolute-positioned element for dragging\r\n         * @param {Object} onMove Function that receives X and Y page locations for a move\r\n         * @param {Object} onDrop Function that receives X and Y page locations when dropped\r\n         */\r\n        start: function(event, dragProxy, onMove, onDrop) {\r\n            var xy = dragdrop.getEventXY(event);\r\n            dragdrop.initialX = xy.x;\r\n            dragdrop.initialY = xy.y;\r\n            dragdrop.initialPosition = dragProxy.offset();\r\n            dragdrop.dragProxy = dragProxy;\r\n            dragdrop.onMove = onMove;\r\n            dragdrop.onDrop = onDrop;\r\n\r\n            switch (event.type) {\r\n                case 'mousedown':\r\n                    // Cannot use jQuery 'on' because events need to not be passive.\r\n                    dragdrop.addEventSpecial('mousemove', dragdrop.mouseMove);\r\n                    dragdrop.addEventSpecial('mouseup', dragdrop.mouseUp);\r\n                    break;\r\n                case 'touchstart':\r\n                    dragdrop.addEventSpecial('touchend', dragdrop.touchEnd);\r\n                    dragdrop.addEventSpecial('touchcancel', dragdrop.touchEnd);\r\n                    dragdrop.addEventSpecial('touchmove', dragdrop.touchMove);\r\n                    dragdrop.touching = event.changedTouches[0].identifier;\r\n                    break;\r\n                default:\r\n                    throw new Error('Unexpected event type: ' + event.type);\r\n            }\r\n            autoScroll.start(dragdrop.scroll);\r\n        },\r\n\r\n        /**\r\n         * Adds an event listener with special event capture options (capture, not passive). If the\r\n         * browser does not support passive events, it will fall back to the boolean for capture.\r\n         *\r\n         * @private\r\n         * @param {Object} event Event type string\r\n         * @param {Object} handler Handler function\r\n         */\r\n        addEventSpecial: function(event, handler) {\r\n            try {\r\n                window.addEventListener(event, handler, dragdrop.eventCaptureOptions);\r\n            } catch (ex) {\r\n                dragdrop.eventCaptureOptions = true;\r\n                window.addEventListener(event, handler, dragdrop.eventCaptureOptions);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets X/Y co-ordinates of an event, which can be either touchstart or mousedown.\r\n         *\r\n         * @private\r\n         * @param {Object} event Event (should be either mousedown or touchstart)\r\n         * @return {Object} X/Y co-ordinates\r\n         */\r\n        getEventXY: function(event) {\r\n            switch (event.type) {\r\n                case 'touchstart':\r\n                    return {x: event.changedTouches[0].pageX,\r\n                            y: event.changedTouches[0].pageY};\r\n                case 'mousedown':\r\n                    return {x: event.pageX, y: event.pageY};\r\n                default:\r\n                    throw new Error('Unexpected event type: ' + event.type);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for touch move.\r\n         *\r\n         * @private\r\n         * @param {Object} e Event\r\n         */\r\n        touchMove: function(e) {\r\n            e.preventDefault();\r\n            for (var i = 0; i < e.changedTouches.length; i++) {\r\n                if (e.changedTouches[i].identifier === dragdrop.touching) {\r\n                    dragdrop.handleMove(e.changedTouches[i].pageX, e.changedTouches[i].pageY);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for mouse move.\r\n         *\r\n         * @private\r\n         * @param {Object} e Event\r\n         */\r\n        mouseMove: function(e) {\r\n            dragdrop.handleMove(e.pageX, e.pageY);\r\n        },\r\n\r\n        /**\r\n         * Shared handler for move event (mouse or touch).\r\n         *\r\n         * @private\r\n         * @param {number} pageX X co-ordinate\r\n         * @param {number} pageY Y co-ordinate\r\n         */\r\n        handleMove: function(pageX, pageY) {\r\n            // Move the drag proxy, not letting you move it out of screen or window bounds.\r\n            var current = dragdrop.dragProxy.offset();\r\n            var topOffset = current.top - parseInt(dragdrop.dragProxy.css('top'));\r\n            var leftOffset = current.left - parseInt(dragdrop.dragProxy.css('left'));\r\n            var maxY = $(document).height() - dragdrop.dragProxy.outerHeight() - topOffset;\r\n            var maxX = $(document).width() - dragdrop.dragProxy.outerWidth() - leftOffset;\r\n            var minY = -topOffset;\r\n            var minX = -leftOffset;\r\n            var initial = dragdrop.initialPosition;\r\n            var position = {\r\n                top: Math.max(minY, Math.min(maxY, initial.top + (pageY - dragdrop.initialY) - topOffset)),\r\n                left: Math.max(minX, Math.min(maxX, initial.left + (pageX - dragdrop.initialX) - leftOffset))\r\n            };\r\n            dragdrop.dragProxy.css(position);\r\n\r\n            // Trigger move handler.\r\n            dragdrop.onMove(pageX, pageY, dragdrop.dragProxy);\r\n        },\r\n\r\n        /**\r\n         * Event handler for touch end.\r\n         *\r\n         * @private\r\n         * @param {Object} e Event\r\n         */\r\n        touchEnd: function(e) {\r\n            e.preventDefault();\r\n            for (var i = 0; i < e.changedTouches.length; i++) {\r\n                if (e.changedTouches[i].identifier === dragdrop.touching) {\r\n                    dragdrop.handleEnd(e.changedTouches[i].pageX, e.changedTouches[i].pageY);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for mouse up.\r\n         *\r\n         * @private\r\n         * @param {Object} e Event\r\n         */\r\n        mouseUp: function(e) {\r\n            dragdrop.handleEnd(e.pageX, e.pageY);\r\n        },\r\n\r\n        /**\r\n         * Shared handler for end drag (mouse or touch).\r\n         *\r\n         * @private\r\n         * @param {number} pageX X\r\n         * @param {number} pageY Y\r\n         */\r\n        handleEnd: function(pageX, pageY) {\r\n            if (dragdrop.touching !== null) {\r\n                window.removeEventListener('touchend', dragdrop.touchEnd, dragdrop.eventCaptureOptions);\r\n                window.removeEventListener('touchcancel', dragdrop.touchEnd, dragdrop.eventCaptureOptions);\r\n                window.removeEventListener('touchmove', dragdrop.touchMove, dragdrop.eventCaptureOptions);\r\n                dragdrop.touching = null;\r\n            } else {\r\n                window.removeEventListener('mousemove', dragdrop.mouseMove, dragdrop.eventCaptureOptions);\r\n                window.removeEventListener('mouseup', dragdrop.mouseUp, dragdrop.eventCaptureOptions);\r\n            }\r\n            autoScroll.stop();\r\n            dragdrop.onDrop(pageX, pageY, dragdrop.dragProxy);\r\n        },\r\n\r\n        /**\r\n         * Called when the page scrolls.\r\n         *\r\n         * @private\r\n         * @param {number} offset Amount of scroll\r\n         */\r\n        scroll: function(offset) {\r\n            // Move the proxy to match.\r\n            var maxY = $(document).height() - dragdrop.dragProxy.outerHeight();\r\n            var currentPosition = dragdrop.dragProxy.offset();\r\n            currentPosition.top = Math.min(maxY, currentPosition.top + offset);\r\n            dragdrop.dragProxy.css(currentPosition);\r\n        }\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Prepares to begin a drag operation - call with a mousedown or touchstart event.\r\n         *\r\n         * If the returned object has 'start' true, then you can set up a drag proxy, and call\r\n         * start. This function will call preventDefault automatically regardless of whether\r\n         * starting or not.\r\n         *\r\n         * @param {Object} event Event (should be either mousedown or touchstart)\r\n         * @return {Object} Object with start (boolean flag) and x, y (only if flag true) values\r\n         */\r\n        prepare: dragdrop.prepare,\r\n\r\n        /**\r\n         * Call to start a drag operation, in response to a mouse down or touch start event.\r\n         * Normally call this after calling prepare and receiving start true (you can probably\r\n         * skip prepare if only supporting drag not touch).\r\n         *\r\n         * Note: The caller is responsible for creating a 'drag proxy' which is the\r\n         * thing that actually gets dragged. At present, this doesn't really work\r\n         * properly unless it is added directly within the body tag.\r\n         *\r\n         * You also need to ensure that there is CSS so the proxy is absolutely positioned,\r\n         * and styled to look like it is floating.\r\n         *\r\n         * You also need to absolutely position the proxy where you want it to start.\r\n         *\r\n         * @param {Object} event Event (should be either mousedown or touchstart)\r\n         * @param {jQuery} dragProxy An absolute-positioned element for dragging\r\n         * @param {Object} onMove Function that receives X and Y page locations for a move\r\n         * @param {Object} onDrop Function that receives X and Y page locations when dropped\r\n         */\r\n        start: dragdrop.start\r\n    };\r\n});\r\n"],"names":["define","$","autoScroll","dragdrop","eventCaptureOptions","passive","capture","dragProxy","onMove","onDrop","initialPosition","initialX","initialY","touching","prepare","event","preventDefault","type","changedTouches","length","which","details","getEventXY","start","xy","x","y","offset","addEventSpecial","mouseMove","mouseUp","touchEnd","touchMove","identifier","Error","scroll","handler","window","addEventListener","ex","pageX","pageY","e","i","handleMove","current","topOffset","top","parseInt","css","leftOffset","left","maxY","document","height","outerHeight","maxX","width","outerWidth","minY","minX","initial","position","Math","max","min","handleEnd","removeEventListener","stop","currentPosition"],"mappings":"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"}