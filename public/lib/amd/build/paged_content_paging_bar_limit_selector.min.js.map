{"version":3,"file":"paged_content_paging_bar_limit_selector.min.js","sources":["../src/paged_content_paging_bar_limit_selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript for dynamically changing the page limits.\r\n *\r\n * @module     core/paged_content_paging_bar_limit_selector\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n[\r\n    'jquery',\r\n    'core/custom_interaction_events',\r\n    'core/paged_content_events',\r\n    'core/pubsub'\r\n],\r\nfunction(\r\n    $,\r\n    CustomEvents,\r\n    PagedContentEvents,\r\n    PubSub\r\n) {\r\n\r\n    var SELECTORS = {\r\n        ROOT: '[data-region=\"paging-control-limit-container\"]',\r\n        LIMIT_OPTION: '[data-limit]',\r\n        LIMIT_TOGGLE: '[data-action=\"limit-toggle\"]',\r\n    };\r\n\r\n    /**\r\n     * Trigger the SET_ITEMS_PER_PAGE_LIMIT event when the page limit option\r\n     * is modified.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {string} id A unique id for this instance.\r\n     */\r\n    var init = function(root, id) {\r\n        root = $(root);\r\n\r\n        CustomEvents.define(root, [\r\n            CustomEvents.events.activate\r\n        ]);\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.LIMIT_OPTION, function(e, data) {\r\n            var optionElement = $(e.target).closest(SELECTORS.LIMIT_OPTION);\r\n\r\n            if (optionElement.hasClass('active')) {\r\n                // Don't do anything if it was the active option selected.\r\n                return;\r\n            }\r\n\r\n            var limit = parseInt(optionElement.attr('data-limit'), 10);\r\n            // Tell the rest of the pagination components that the limit has changed.\r\n            PubSub.publish(id + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT, limit);\r\n\r\n            data.originalEvent.preventDefault();\r\n        });\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n        rootSelector: SELECTORS.ROOT\r\n    };\r\n});\r\n"],"names":["define","$","CustomEvents","PagedContentEvents","PubSub","SELECTORS","init","root","id","events","activate","on","e","data","optionElement","target","closest","hasClass","limit","parseInt","attr","publish","SET_ITEMS_PER_PAGE_LIMIT","originalEvent","preventDefault","rootSelector"],"mappings":";;;;;;;AAsBAA,sDACA,CACI,SACA,iCACA,4BACA,gBAEJ,SACIC,EACAC,aACAC,mBACAC,YAGIC,uBAEc,qBAkCX,CACHC,KAxBO,SAASC,KAAMC,IACtBD,KAAON,EAAEM,MAETL,aAAaF,OAAOO,KAAM,CACtBL,aAAaO,OAAOC,WAGxBH,KAAKI,GAAGT,aAAaO,OAAOC,SAAUL,wBAAwB,SAASO,EAAGC,UAClEC,cAAgBb,EAAEW,EAAEG,QAAQC,QAAQX,4BAEpCS,cAAcG,SAAS,eAKvBC,MAAQC,SAASL,cAAcM,KAAK,cAAe,IAEvDhB,OAAOiB,QAAQb,GAAKL,mBAAmBmB,yBAA0BJ,OAEjEL,KAAKU,cAAcC,sBAMvBC,aArCM"}