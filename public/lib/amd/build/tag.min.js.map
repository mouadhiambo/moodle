{"version":3,"file":"tag.min.js","sources":["../src/tag.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * AJAX helper for the tag management page.\r\n *\r\n * @module     core/tag\r\n * @copyright  2015 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.0\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport {call as fetchMany} from 'core/ajax';\r\nimport * as Notification from 'core/notification';\r\nimport * as Templates from 'core/templates';\r\nimport {getString} from 'core/str';\r\nimport * as ModalEvents from 'core/modal_events';\r\nimport Pending from 'core/pending';\r\nimport SaveCancelModal from 'core/modal_save_cancel';\r\nimport Config from 'core/config';\r\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\n\r\nconst getTagIndex = (tagindex) => fetchMany([{\r\n    methodname: 'core_tag_get_tagindex',\r\n    args: {tagindex}\r\n}])[0];\r\n\r\nconst getCheckedTags = (root) => root.querySelectorAll('[data-togglegroup=\"report-select-all\"][data-toggle=\"target\"]:checked');\r\n\r\nconst handleCombineRequest = async(tagManagementCombine) => {\r\n    const pendingPromise = new Pending('core/tag:tag-management-combine');\r\n    const form = tagManagementCombine.closest('form');\r\n\r\n    const reportElement = document.querySelector(reportSelectors.regions.report);\r\n    const checkedTags = getCheckedTags(reportElement);\r\n\r\n    if (checkedTags.length <= 1) {\r\n        // We need at least 2 tags to combine them.\r\n        Notification.alert(\r\n            getString('combineselected', 'tag'),\r\n            getString('selectmultipletags', 'tag'),\r\n            getString('ok'),\r\n        );\r\n\r\n        return;\r\n    }\r\n\r\n    const tags = Array.from(checkedTags.values()).map((tag) => {\r\n        const namedElement = document.querySelector(`.inplaceeditable[data-itemtype=tagname][data-itemid=\"${tag.value}\"]`);\r\n        return {\r\n            id: tag.value,\r\n            name: namedElement.dataset.value,\r\n        };\r\n    });\r\n\r\n    const modal = await SaveCancelModal.create({\r\n        title: getString('combineselected', 'tag'),\r\n        buttons: {\r\n            save: getString('continue', 'core'),\r\n        },\r\n        body: Templates.render('core_tag/combine_tags', {tags}),\r\n        show: true,\r\n        removeOnClose: true,\r\n    });\r\n\r\n    // Handle save event.\r\n    modal.getRoot().on(ModalEvents.save, (e) => {\r\n        e.preventDefault();\r\n\r\n        // Append this temp element in the form in the tags list, not the form in the modal. Confusing, right?!?\r\n        const tempElement = document.createElement('input');\r\n        tempElement.hidden = true;\r\n        tempElement.name = tagManagementCombine.name;\r\n        form.append(tempElement);\r\n\r\n        // Append selected tags element.\r\n        const tagsElement = document.createElement('input');\r\n        tagsElement.hidden = true;\r\n        tagsElement.name = 'tagschecked';\r\n        tagsElement.value = [...checkedTags].map(check => check.value).join(',');\r\n        form.append(tagsElement);\r\n\r\n        // Get the selected tag from the modal.\r\n        var maintag = $('input[name=maintag]:checked', '#combinetags_form').val();\r\n        // Append this in the tags list form.\r\n        $(\"<input type='hidden'/>\").attr('name', 'maintag').attr('value', maintag).appendTo(form);\r\n        // Submit the tags list form.\r\n        form.submit();\r\n    });\r\n\r\n    await modal.getBodyPromise();\r\n    // Tick the first option.\r\n    const firstOption = document.querySelector('#combinetags_form input[type=radio]');\r\n    firstOption.focus();\r\n    firstOption.checked = true;\r\n\r\n    pendingPromise.resolve();\r\n\r\n    return;\r\n};\r\n\r\nconst addStandardTags = async() => {\r\n    var pendingPromise = new Pending('core/tag:addstandardtag');\r\n\r\n    const modal = await SaveCancelModal.create({\r\n        title: getString('addotags', 'tag'),\r\n        body: Templates.render('core_tag/add_tags', {\r\n            actionurl: window.location.href,\r\n            sesskey: M.cfg.sesskey,\r\n        }),\r\n        buttons: {\r\n            save: getString('continue', 'core'),\r\n        },\r\n        removeOnClose: true,\r\n        show: true,\r\n    });\r\n\r\n    // Handle save event.\r\n    modal.getRoot().on(ModalEvents.save, (e) => {\r\n        var tagsInput = $(e.currentTarget).find('#id_tagslist');\r\n        var name = tagsInput.val().trim();\r\n\r\n        // Set the text field's value to the trimmed value.\r\n        tagsInput.val(name);\r\n\r\n        // Add submit event listener to the form.\r\n        var tagsForm = $('#addtags_form');\r\n        tagsForm.on('submit', function(e) {\r\n            // Validate the form.\r\n            var form = $('#addtags_form');\r\n            if (form[0].checkValidity() === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            form.addClass('was-validated');\r\n\r\n            // BS2 compatibility.\r\n            $('[data-region=\"tagslistinput\"]').addClass('error');\r\n            var errorMessage = $('#id_tagslist_error_message');\r\n            errorMessage.removeAttr('hidden');\r\n            errorMessage.addClass('help-block');\r\n        });\r\n\r\n        // Try to submit the form.\r\n        tagsForm.submit();\r\n\r\n        return false;\r\n    });\r\n\r\n    await modal.getBodyPromise();\r\n    pendingPromise.resolve();\r\n};\r\n\r\nconst deleteSelectedTags = async(bulkActionDeleteButton) => {\r\n    const form = bulkActionDeleteButton.closest('form');\r\n\r\n    const reportElement = document.querySelector(reportSelectors.regions.report);\r\n    const checkedTags = getCheckedTags(reportElement);\r\n\r\n    if (!checkedTags.length) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await Notification.saveCancelPromise(\r\n            getString('delete'),\r\n            getString('confirmdeletetags', 'tag'),\r\n            getString('yes'),\r\n            getString('no'),\r\n        );\r\n\r\n        // Append this temp element in the form in the tags list, not the form in the modal. Confusing, right?!?\r\n        const tempElement = document.createElement('input');\r\n        tempElement.hidden = true;\r\n        tempElement.name = bulkActionDeleteButton.name;\r\n        form.append(tempElement);\r\n\r\n        // Append selected tags element.\r\n        const tagsElement = document.createElement('input');\r\n        tagsElement.hidden = true;\r\n        tagsElement.name = 'tagschecked';\r\n        tagsElement.value = [...checkedTags].map(check => check.value).join(',');\r\n        form.append(tagsElement);\r\n\r\n        form.submit();\r\n    } catch {\r\n        return;\r\n    }\r\n};\r\n\r\nconst deleteSelectedTag = async(button) => {\r\n    try {\r\n        await Notification.saveCancelPromise(\r\n            getString('delete'),\r\n            getString('confirmdeletetag', 'tag'),\r\n            getString('yes'),\r\n            getString('no'),\r\n        );\r\n\r\n        window.location.href = button.href;\r\n    } catch {\r\n        return;\r\n    }\r\n};\r\n\r\nconst deleteSelectedCollection = async(button) => {\r\n    try {\r\n        await Notification.saveCancelPromise(\r\n            getString('delete'),\r\n            getString('suredeletecoll', 'tag', button.dataset.collname),\r\n            getString('yes'),\r\n            getString('no'),\r\n        );\r\n\r\n        const redirectTarget = new URL(button.dataset.url);\r\n        redirectTarget.searchParams.set('sesskey', Config.sesskey);\r\n        window.location.href = redirectTarget;\r\n    } catch {\r\n        return;\r\n    }\r\n};\r\n\r\nconst addTagCollection = async(link) => {\r\n    const pendingPromise = new Pending('core/tag:initManageCollectionsPage-addtagcoll');\r\n    const href = link.dataset.url;\r\n\r\n    const modal = await SaveCancelModal.create({\r\n        title: getString('addtagcoll', 'tag'),\r\n        buttons: {\r\n            save: getString('create', 'core'),\r\n        },\r\n        body: Templates.render('core_tag/add_tag_collection', {\r\n            actionurl: href,\r\n            sesskey: M.cfg.sesskey,\r\n        }),\r\n        removeOnClose: true,\r\n        show: true,\r\n    });\r\n\r\n    // Handle save event.\r\n    modal.getRoot().on(ModalEvents.save, (e) => {\r\n        const collectionInput = $(e.currentTarget).find('#addtagcoll_name');\r\n        const name = collectionInput.val().trim();\r\n        // Set the text field's value to the trimmed value.\r\n        collectionInput.val(name);\r\n\r\n        // Add submit event listener to the form.\r\n        const form = $('#addtagcoll_form');\r\n        form.on('submit', function(e) {\r\n            // Validate the form.\r\n            if (form[0].checkValidity() === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            form.addClass('was-validated');\r\n\r\n            // BS2 compatibility.\r\n            $('[data-region=\"addtagcoll_nameinput\"]').addClass('error');\r\n            const errorMessage = $('#id_addtagcoll_name_error_message');\r\n            errorMessage.removeAttr('hidden');\r\n            errorMessage.addClass('help-block');\r\n        });\r\n\r\n        // Try to submit the form.\r\n        form.submit();\r\n\r\n        return false;\r\n    });\r\n\r\n    pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Initialises tag index page.\r\n *\r\n * @method initTagindexPage\r\n */\r\nexport const initTagindexPage = async() => {\r\n    document.addEventListener('click', async(e) => {\r\n        const targetArea = e.target.closest('a[data-quickload=\"1\"]');\r\n        if (!targetArea) {\r\n            return;\r\n        }\r\n        const tagArea = targetArea.closest('.tagarea[data-ta]');\r\n        if (!tagArea) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        const pendingPromise = new Pending('core/tag:initTagindexPage');\r\n\r\n        const query = targetArea.search.replace(/^\\?/, '');\r\n        const params = Object.fromEntries((new URLSearchParams(query)).entries());\r\n\r\n        try {\r\n            const data = await getTagIndex(params);\r\n            const {html, js} = await Templates.renderForPromise('core_tag/index', data);\r\n            Templates.replaceNode(tagArea, html, js);\r\n        } catch (error) {\r\n            Notification.exception(error);\r\n        }\r\n        pendingPromise.resolve();\r\n    });\r\n};\r\n\r\n/**\r\n * Initialises tag management page.\r\n *\r\n * @method initManagePage\r\n */\r\nexport const initManagePage = () => {\r\n    // Toggle row class when updating flag.\r\n    $('body').on(inplaceEditableEvents.elementUpdated, '[data-inplaceeditable][data-itemtype=tagflag]', function(e) {\r\n        var row = $(e.target).closest('tr');\r\n        row.toggleClass('table-warning', e.detail.ajaxreturn.value === '1');\r\n    });\r\n\r\n    // Confirmation for bulk tag combine button.\r\n    document.addEventListener('click', async(e) => {\r\n        const tagManagementCombine = e.target.closest('#tag-management-combine');\r\n        if (tagManagementCombine) {\r\n            e.preventDefault();\r\n            handleCombineRequest(tagManagementCombine);\r\n        }\r\n\r\n        if (e.target.closest('[data-action=\"addstandardtag\"]')) {\r\n            e.preventDefault();\r\n            addStandardTags();\r\n        }\r\n\r\n        const bulkActionDeleteButton = e.target.closest('#tag-management-delete');\r\n        if (bulkActionDeleteButton) {\r\n            e.preventDefault();\r\n            deleteSelectedTags(bulkActionDeleteButton);\r\n        }\r\n\r\n        const rowDeleteButton = e.target.closest('.tagdelete');\r\n        if (rowDeleteButton) {\r\n            e.preventDefault();\r\n            deleteSelectedTag(rowDeleteButton);\r\n        }\r\n    });\r\n\r\n    // When user changes tag name to some name that already exists suggest to combine the tags.\r\n    $('body').on(inplaceEditableEvents.elementUpdateFailed, '[data-inplaceeditable][data-itemtype=tagname]', async(e) => {\r\n        var exception = e.detail.exception; // The exception object returned by the callback.\r\n        var newvalue = e.detail.newvalue; // The value that user tried to udpated the element to.\r\n        var tagid = $(e.target).attr('data-itemid');\r\n        if (exception.errorcode !== 'namesalreadybeeingused') {\r\n            return;\r\n        }\r\n        e.preventDefault(); // This will prevent default error dialogue.\r\n\r\n        try {\r\n            await Notification.saveCancelPromise(\r\n                getString('confirm'),\r\n                getString('nameuseddocombine', 'tag'),\r\n                getString('yes'),\r\n                getString('cancel'),\r\n            );\r\n\r\n            // The Promise will resolve on 'Yes' button, and reject on 'Cancel' button.\r\n            const redirectTarget = new URL(window.location);\r\n            redirectTarget.searchParams.set('newname', newvalue);\r\n            redirectTarget.searchParams.set('tagid', tagid);\r\n            redirectTarget.searchParams.set('action', 'renamecombine');\r\n            redirectTarget.searchParams.set('sesskey', Config.sesskey);\r\n\r\n            window.location.href = redirectTarget;\r\n        } catch {\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Initialises tag collection management page.\r\n *\r\n * @method initManageCollectionsPage\r\n */\r\nexport const initManageCollectionsPage = () => {\r\n    $('body').on(inplaceEditableEvents.elementUpdated, '[data-inplaceeditable]', function(e) {\r\n        var pendingPromise = new Pending('core/tag:initManageCollectionsPage-updated');\r\n\r\n        var ajaxreturn = e.detail.ajaxreturn,\r\n            areaid, collid, isenabled;\r\n        if (ajaxreturn.component === 'core_tag' && ajaxreturn.itemtype === 'tagareaenable') {\r\n            areaid = $(this).attr('data-itemid');\r\n            $(\".tag-collections-table ul[data-collectionid] li[data-areaid=\" + areaid + \"]\").hide();\r\n            isenabled = ajaxreturn.value;\r\n            if (isenabled === '1') {\r\n                $(this).closest('tr').removeClass('dimmed_text');\r\n                collid = $(this).closest('tr').find('[data-itemtype=\"tagareacollection\"]').attr(\"data-value\");\r\n                $(\".tag-collections-table ul[data-collectionid=\" + collid + \"] li[data-areaid=\" + areaid + \"]\").show();\r\n            } else {\r\n                $(this).closest('tr').addClass('dimmed_text');\r\n            }\r\n        }\r\n        if (ajaxreturn.component === 'core_tag' && ajaxreturn.itemtype === 'tagareacollection') {\r\n            areaid = $(this).attr('data-itemid');\r\n            $(\".tag-collections-table ul[data-collectionid] li[data-areaid=\" + areaid + \"]\").hide();\r\n            collid = $(this).attr('data-value');\r\n            isenabled = $(this).closest('tr').find('[data-itemtype=\"tagareaenable\"]').attr(\"data-value\");\r\n            if (isenabled === \"1\") {\r\n                $(\".tag-collections-table ul[data-collectionid=\" + collid + \"] li[data-areaid=\" + areaid + \"]\").show();\r\n            }\r\n        }\r\n\r\n        pendingPromise.resolve();\r\n    });\r\n\r\n    document.addEventListener('click', async(e) => {\r\n        const addTagCollectionNode = e.target.closest('.addtagcoll > a');\r\n        if (addTagCollectionNode) {\r\n            e.preventDefault();\r\n            addTagCollection(addTagCollectionNode);\r\n            return;\r\n        }\r\n\r\n        const deleteCollectionButton = e.target.closest('.tag-collections-table .action_delete');\r\n        if (deleteCollectionButton) {\r\n            e.preventDefault();\r\n            deleteSelectedCollection(deleteCollectionButton);\r\n        }\r\n    });\r\n};\r\n"],"names":["getCheckedTags","root","querySelectorAll","async","document","addEventListener","targetArea","e","target","closest","tagArea","preventDefault","pendingPromise","Pending","query","search","replace","params","Object","fromEntries","URLSearchParams","entries","data","tagindex","methodname","args","html","js","Templates","renderForPromise","replaceNode","error","Notification","exception","resolve","on","inplaceEditableEvents","elementUpdated","toggleClass","detail","ajaxreturn","value","tagManagementCombine","form","reportElement","querySelector","reportSelectors","regions","report","checkedTags","length","alert","tags","Array","from","values","map","tag","namedElement","id","name","dataset","modal","SaveCancelModal","create","title","buttons","save","body","render","show","removeOnClose","getRoot","ModalEvents","tempElement","createElement","hidden","append","tagsElement","check","join","maintag","val","attr","appendTo","submit","getBodyPromise","firstOption","focus","checked","handleCombineRequest","actionurl","window","location","href","sesskey","M","cfg","tagsInput","currentTarget","find","trim","tagsForm","checkValidity","stopPropagation","addClass","errorMessage","removeAttr","addStandardTags","bulkActionDeleteButton","saveCancelPromise","deleteSelectedTags","rowDeleteButton","button","deleteSelectedTag","elementUpdateFailed","newvalue","tagid","errorcode","redirectTarget","URL","searchParams","set","Config","areaid","collid","component","itemtype","this","hide","removeClass","addTagCollectionNode","link","url","collectionInput","addTagCollection","deleteCollectionButton","collname","deleteSelectedCollection"],"mappings":"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"}