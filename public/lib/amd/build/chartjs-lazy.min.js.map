{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\r\n * Chart.js v4.5.0\r\n * https://www.chartjs.org\r\n * (c) 2024 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\n\r\n/**\r\n * Description of import into Moodle:\r\n *\r\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\r\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\r\n *   Chart.js will generate a new file dist/chart.umd.js with minified format, in order to avoid the minification\r\n *   we need to modify rollup.config.js, find below code in the file:\r\n *   ```\r\n *   1. // UMD build\r\n *   2. // dist/chart.umd.js\r\n *   3. {\r\n *   4.     input: 'src/index.umd.ts',\r\n *   5.     plugins: plugins(true),\r\n *   6.     output: {\r\n *   7.       ...\r\n *   8.     },\r\n *   9. },\r\n *   ```\r\n *\r\n *   Change line 5 into:\r\n *   ```\r\n *   plugins: plugins(),\r\n *   ```\r\n *\r\n *   Save the file and run build script again.\r\n *\r\n * - Copy /dist/chart.umd.js content to lib/amd/src/chartjs-lazy.js.\r\n * - Remove below line in the lib/amd/src/chartjs-lazy.js:\r\n *   ```\r\n *   //# sourceMappingURL=chart.umd.js.map\r\n *   ```\r\n * - Convert line endings to LF-Unix format.\r\n * - Change the version number and the copyright year at the file header block.\r\n * - Keep these instructions in the file.\r\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\r\n *\r\n */\r\n\r\n(function (global, factory) {\r\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\ntypeof define === 'function' && define.amd ? define(factory) :\r\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\r\n})(this, (function () { 'use strict';\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nget Colors () { return plugin_colors; },\r\nget Decimation () { return plugin_decimation; },\r\nget Filler () { return index; },\r\nget Legend () { return plugin_legend; },\r\nget SubTitle () { return plugin_subtitle; },\r\nget Title () { return plugin_title; },\r\nget Tooltip () { return plugin_tooltip; }\r\n});\r\n\r\n/**\r\n * @namespace Chart.helpers\r\n */ /**\r\n * An empty function that can be used, for example, for optional callback.\r\n */ function noop() {\r\n/* noop */ }\r\n/**\r\n * Returns a unique id, sequentially generated from a global variable.\r\n */ const uid = (()=>{\r\n    let id = 0;\r\n    return ()=>id++;\r\n})();\r\n/**\r\n * Returns true if `value` is neither null nor undefined, else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */ function isNullOrUndef(value) {\r\n    return value === null || value === undefined;\r\n}\r\n/**\r\n * Returns true if `value` is an array (including typed arrays), else returns false.\r\n * @param value - The value to test.\r\n * @function\r\n */ function isArray(value) {\r\n    if (Array.isArray && Array.isArray(value)) {\r\n        return true;\r\n    }\r\n    const type = Object.prototype.toString.call(value);\r\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns true if `value` is an object (excluding null), else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */ function isObject(value) {\r\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\n/**\r\n * Returns true if `value` is a finite number, else returns false\r\n * @param value  - The value to test.\r\n */ function isNumberFinite(value) {\r\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\n}\r\n/**\r\n * Returns `value` if finite, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is not finite.\r\n */ function finiteOrDefault(value, defaultValue) {\r\n    return isNumberFinite(value) ? value : defaultValue;\r\n}\r\n/**\r\n * Returns `value` if defined, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is undefined.\r\n */ function valueOrDefault(value, defaultValue) {\r\n    return typeof value === 'undefined' ? defaultValue : value;\r\n}\r\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\r\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\r\n/**\r\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n * @param fn - The function to call.\r\n * @param args - The arguments with which `fn` should be called.\r\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\r\n */ function callback(fn, args, thisArg) {\r\n    if (fn && typeof fn.call === 'function') {\r\n        return fn.apply(thisArg, args);\r\n    }\r\n}\r\nfunction each(loopable, fn, thisArg, reverse) {\r\n    let i, len, keys;\r\n    if (isArray(loopable)) {\r\n        len = loopable.length;\r\n        if (reverse) {\r\n            for(i = len - 1; i >= 0; i--){\r\n                fn.call(thisArg, loopable[i], i);\r\n            }\r\n        } else {\r\n            for(i = 0; i < len; i++){\r\n                fn.call(thisArg, loopable[i], i);\r\n            }\r\n        }\r\n    } else if (isObject(loopable)) {\r\n        keys = Object.keys(loopable);\r\n        len = keys.length;\r\n        for(i = 0; i < len; i++){\r\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n * @param a0 - The array to compare\r\n * @param a1 - The array to compare\r\n * @private\r\n */ function _elementsEqual(a0, a1) {\r\n    let i, ilen, v0, v1;\r\n    if (!a0 || !a1 || a0.length !== a1.length) {\r\n        return false;\r\n    }\r\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\r\n        v0 = a0[i];\r\n        v1 = a1[i];\r\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n * @param source - The value to clone.\r\n */ function clone$1(source) {\r\n    if (isArray(source)) {\r\n        return source.map(clone$1);\r\n    }\r\n    if (isObject(source)) {\r\n        const target = Object.create(null);\r\n        const keys = Object.keys(source);\r\n        const klen = keys.length;\r\n        let k = 0;\r\n        for(; k < klen; ++k){\r\n            target[keys[k]] = clone$1(source[keys[k]]);\r\n        }\r\n        return target;\r\n    }\r\n    return source;\r\n}\r\nfunction isValidKey(key) {\r\n    return [\r\n        '__proto__',\r\n        'prototype',\r\n        'constructor'\r\n    ].indexOf(key) === -1;\r\n}\r\n/**\r\n * The default merger when Chart.helpers.merge is called without merger option.\r\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\r\n * @private\r\n */ function _merger(key, target, source, options) {\r\n    if (!isValidKey(key)) {\r\n        return;\r\n    }\r\n    const tval = target[key];\r\n    const sval = source[key];\r\n    if (isObject(tval) && isObject(sval)) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        merge(tval, sval, options);\r\n    } else {\r\n        target[key] = clone$1(sval);\r\n    }\r\n}\r\nfunction merge(target, source, options) {\r\n    const sources = isArray(source) ? source : [\r\n        source\r\n    ];\r\n    const ilen = sources.length;\r\n    if (!isObject(target)) {\r\n        return target;\r\n    }\r\n    options = options || {};\r\n    const merger = options.merger || _merger;\r\n    let current;\r\n    for(let i = 0; i < ilen; ++i){\r\n        current = sources[i];\r\n        if (!isObject(current)) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(current);\r\n        for(let k = 0, klen = keys.length; k < klen; ++k){\r\n            merger(keys[k], target, current, options);\r\n        }\r\n    }\r\n    return target;\r\n}\r\nfunction mergeIf(target, source) {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    return merge(target, source, {\r\n        merger: _mergerIf\r\n    });\r\n}\r\n/**\r\n * Merges source[key] in target[key] only if target[key] is undefined.\r\n * @private\r\n */ function _mergerIf(key, target, source) {\r\n    if (!isValidKey(key)) {\r\n        return;\r\n    }\r\n    const tval = target[key];\r\n    const sval = source[key];\r\n    if (isObject(tval) && isObject(sval)) {\r\n        mergeIf(tval, sval);\r\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n        target[key] = clone$1(sval);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */ function _deprecated(scope, value, previous, current) {\r\n    if (value !== undefined) {\r\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\r\n    }\r\n}\r\n// resolveObjectKey resolver cache\r\nconst keyResolvers = {\r\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\r\n    '': (v)=>v,\r\n    // default resolvers\r\n    x: (o)=>o.x,\r\n    y: (o)=>o.y\r\n};\r\n/**\r\n * @private\r\n */ function _splitKey(key) {\r\n    const parts = key.split('.');\r\n    const keys = [];\r\n    let tmp = '';\r\n    for (const part of parts){\r\n        tmp += part;\r\n        if (tmp.endsWith('\\\\')) {\r\n            tmp = tmp.slice(0, -1) + '.';\r\n        } else {\r\n            keys.push(tmp);\r\n            tmp = '';\r\n        }\r\n    }\r\n    return keys;\r\n}\r\nfunction _getKeyResolver(key) {\r\n    const keys = _splitKey(key);\r\n    return (obj)=>{\r\n        for (const k of keys){\r\n            if (k === '') {\r\n                break;\r\n            }\r\n            obj = obj && obj[k];\r\n        }\r\n        return obj;\r\n    };\r\n}\r\nfunction resolveObjectKey(obj, key) {\r\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\r\n    return resolver(obj);\r\n}\r\n/**\r\n * @private\r\n */ function _capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\nconst defined = (value)=>typeof value !== 'undefined';\r\nconst isFunction = (value)=>typeof value === 'function';\r\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\r\nconst setsEqual = (a, b)=>{\r\n    if (a.size !== b.size) {\r\n        return false;\r\n    }\r\n    for (const item of a){\r\n        if (!b.has(item)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n/**\r\n * @param e - The event\r\n * @private\r\n */ function _isClickEvent(e) {\r\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\r\n}\r\n\r\n/**\r\n * @alias Chart.helpers.math\r\n * @namespace\r\n */ const PI = Math.PI;\r\nconst TAU = 2 * PI;\r\nconst PITAU = TAU + PI;\r\nconst INFINITY = Number.POSITIVE_INFINITY;\r\nconst RAD_PER_DEG = PI / 180;\r\nconst HALF_PI = PI / 2;\r\nconst QUARTER_PI = PI / 4;\r\nconst TWO_THIRDS_PI = PI * 2 / 3;\r\nconst log10 = Math.log10;\r\nconst sign = Math.sign;\r\nfunction almostEquals(x, y, epsilon) {\r\n    return Math.abs(x - y) < epsilon;\r\n}\r\n/**\r\n * Implementation of the nice number algorithm used in determining where axis labels will go\r\n */ function niceNum(range) {\r\n    const roundedRange = Math.round(range);\r\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\r\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n    const fraction = range / niceRange;\r\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n    return niceFraction * niceRange;\r\n}\r\n/**\r\n * Returns an array of factors sorted from 1 to sqrt(value)\r\n * @private\r\n */ function _factorize(value) {\r\n    const result = [];\r\n    const sqrt = Math.sqrt(value);\r\n    let i;\r\n    for(i = 1; i < sqrt; i++){\r\n        if (value % i === 0) {\r\n            result.push(i);\r\n            result.push(value / i);\r\n        }\r\n    }\r\n    if (sqrt === (sqrt | 0)) {\r\n        result.push(sqrt);\r\n    }\r\n    result.sort((a, b)=>a - b).pop();\r\n    return result;\r\n}\r\n/**\r\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\r\n */ function isNonPrimitive(n) {\r\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\r\n}\r\nfunction isNumber(n) {\r\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\nfunction almostWhole(x, epsilon) {\r\n    const rounded = Math.round(x);\r\n    return rounded - epsilon <= x && rounded + epsilon >= x;\r\n}\r\n/**\r\n * @private\r\n */ function _setMinAndMaxByKey(array, target, property) {\r\n    let i, ilen, value;\r\n    for(i = 0, ilen = array.length; i < ilen; i++){\r\n        value = array[i][property];\r\n        if (!isNaN(value)) {\r\n            target.min = Math.min(target.min, value);\r\n            target.max = Math.max(target.max, value);\r\n        }\r\n    }\r\n}\r\nfunction toRadians(degrees) {\r\n    return degrees * (PI / 180);\r\n}\r\nfunction toDegrees(radians) {\r\n    return radians * (180 / PI);\r\n}\r\n/**\r\n * Returns the number of decimal places\r\n * i.e. the number of digits after the decimal point, of the value of this Number.\r\n * @param x - A number.\r\n * @returns The number of decimal places.\r\n * @private\r\n */ function _decimalPlaces(x) {\r\n    if (!isNumberFinite(x)) {\r\n        return;\r\n    }\r\n    let e = 1;\r\n    let p = 0;\r\n    while(Math.round(x * e) / e !== x){\r\n        e *= 10;\r\n        p++;\r\n    }\r\n    return p;\r\n}\r\n// Gets the angle from vertical upright to the point about a centre.\r\nfunction getAngleFromPoint(centrePoint, anglePoint) {\r\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n    if (angle < -0.5 * PI) {\r\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n    }\r\n    return {\r\n        angle,\r\n        distance: radialDistanceFromCenter\r\n    };\r\n}\r\nfunction distanceBetweenPoints(pt1, pt2) {\r\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n}\r\n/**\r\n * Shortest distance between angles, in either direction.\r\n * @private\r\n */ function _angleDiff(a, b) {\r\n    return (a - b + PITAU) % TAU - PI;\r\n}\r\n/**\r\n * Normalize angle to be between 0 and 2*PI\r\n * @private\r\n */ function _normalizeAngle(a) {\r\n    return (a % TAU + TAU) % TAU;\r\n}\r\n/**\r\n * @private\r\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\r\n    const a = _normalizeAngle(angle);\r\n    const s = _normalizeAngle(start);\r\n    const e = _normalizeAngle(end);\r\n    const angleToStart = _normalizeAngle(s - a);\r\n    const angleToEnd = _normalizeAngle(e - a);\r\n    const startToAngle = _normalizeAngle(a - s);\r\n    const endToAngle = _normalizeAngle(a - e);\r\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\r\n}\r\n/**\r\n * Limit `value` between `min` and `max`\r\n * @param value\r\n * @param min\r\n * @param max\r\n * @private\r\n */ function _limitValue(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n/**\r\n * @param {number} value\r\n * @private\r\n */ function _int16Range(value) {\r\n    return _limitValue(value, -32768, 32767);\r\n}\r\n/**\r\n * @param value\r\n * @param start\r\n * @param end\r\n * @param [epsilon]\r\n * @private\r\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\r\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\r\n}\r\n\r\nfunction _lookup(table, value, cmp) {\r\n    cmp = cmp || ((index)=>table[index] < value);\r\n    let hi = table.length - 1;\r\n    let lo = 0;\r\n    let mid;\r\n    while(hi - lo > 1){\r\n        mid = lo + hi >> 1;\r\n        if (cmp(mid)) {\r\n            lo = mid;\r\n        } else {\r\n            hi = mid;\r\n        }\r\n    }\r\n    return {\r\n        lo,\r\n        hi\r\n    };\r\n}\r\n/**\r\n * Binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @param last - lookup last index\r\n * @private\r\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\r\n        const ti = table[index][key];\r\n        return ti < value || ti === value && table[index + 1][key] === value;\r\n    } : (index)=>table[index][key] < value);\r\n/**\r\n * Reverse binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @private\r\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\r\n/**\r\n * Return subset of `values` between `min` and `max` inclusive.\r\n * Values are assumed to be in sorted order.\r\n * @param values - sorted array of values\r\n * @param min - min value\r\n * @param max - max value\r\n */ function _filterBetween(values, min, max) {\r\n    let start = 0;\r\n    let end = values.length;\r\n    while(start < end && values[start] < min){\r\n        start++;\r\n    }\r\n    while(end > start && values[end - 1] > max){\r\n        end--;\r\n    }\r\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\r\n}\r\nconst arrayEvents = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'splice',\r\n    'unshift'\r\n];\r\nfunction listenArrayEvents(array, listener) {\r\n    if (array._chartjs) {\r\n        array._chartjs.listeners.push(listener);\r\n        return;\r\n    }\r\n    Object.defineProperty(array, '_chartjs', {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value: {\r\n            listeners: [\r\n                listener\r\n            ]\r\n        }\r\n    });\r\n    arrayEvents.forEach((key)=>{\r\n        const method = '_onData' + _capitalize(key);\r\n        const base = array[key];\r\n        Object.defineProperty(array, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            value (...args) {\r\n                const res = base.apply(this, args);\r\n                array._chartjs.listeners.forEach((object)=>{\r\n                    if (typeof object[method] === 'function') {\r\n                        object[method](...args);\r\n                    }\r\n                });\r\n                return res;\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction unlistenArrayEvents(array, listener) {\r\n    const stub = array._chartjs;\r\n    if (!stub) {\r\n        return;\r\n    }\r\n    const listeners = stub.listeners;\r\n    const index = listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n        listeners.splice(index, 1);\r\n    }\r\n    if (listeners.length > 0) {\r\n        return;\r\n    }\r\n    arrayEvents.forEach((key)=>{\r\n        delete array[key];\r\n    });\r\n    delete array._chartjs;\r\n}\r\n/**\r\n * @param items\r\n */ function _arrayUnique(items) {\r\n    const set = new Set(items);\r\n    if (set.size === items.length) {\r\n        return items;\r\n    }\r\n    return Array.from(set);\r\n}\r\n\r\nfunction fontString(pixelSize, fontStyle, fontFamily) {\r\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n}\r\n/**\r\n* Request animation polyfill\r\n*/ const requestAnimFrame = function() {\r\n    if (typeof window === 'undefined') {\r\n        return function(callback) {\r\n            return callback();\r\n        };\r\n    }\r\n    return window.requestAnimationFrame;\r\n}();\r\n/**\r\n * Throttles calling `fn` once per animation frame\r\n * Latest arguments are used on the actual call\r\n */ function throttled(fn, thisArg) {\r\n    let argsToUse = [];\r\n    let ticking = false;\r\n    return function(...args) {\r\n        // Save the args for use later\r\n        argsToUse = args;\r\n        if (!ticking) {\r\n            ticking = true;\r\n            requestAnimFrame.call(window, ()=>{\r\n                ticking = false;\r\n                fn.apply(thisArg, argsToUse);\r\n            });\r\n        }\r\n    };\r\n}\r\n/**\r\n * Debounces calling `fn` for `delay` ms\r\n */ function debounce(fn, delay) {\r\n    let timeout;\r\n    return function(...args) {\r\n        if (delay) {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(fn, delay, args);\r\n        } else {\r\n            fn.apply(this, args);\r\n        }\r\n        return delay;\r\n    };\r\n}\r\n/**\r\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\r\n * @private\r\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\n/**\r\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\r\n * @private\r\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\n/**\r\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\r\n * @private\r\n */ const _textX = (align, left, right, rtl)=>{\r\n    const check = rtl ? 'left' : 'right';\r\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\r\n};\r\n/**\r\n * Return start and count of visible points.\r\n * @private\r\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n    const pointCount = points.length;\r\n    let start = 0;\r\n    let count = pointCount;\r\n    if (meta._sorted) {\r\n        const { iScale , vScale , _parsed  } = meta;\r\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\r\n        const axis = iScale.axis;\r\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\r\n        if (minDefined) {\r\n            start = Math.min(// @ts-expect-error Need to type _parsed\r\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\r\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\r\n            if (spanGaps) {\r\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\r\n                start -= Math.max(0, distanceToDefinedLo);\r\n            }\r\n            start = _limitValue(start, 0, pointCount - 1);\r\n        }\r\n        if (maxDefined) {\r\n            let end = Math.max(// @ts-expect-error Need to type _parsed\r\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\r\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\r\n            if (spanGaps) {\r\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\r\n                end += Math.max(0, distanceToDefinedHi);\r\n            }\r\n            count = _limitValue(end, start, pointCount) - start;\r\n        } else {\r\n            count = pointCount - start;\r\n        }\r\n    }\r\n    return {\r\n        start,\r\n        count\r\n    };\r\n}\r\n/**\r\n * Checks if the scale ranges have changed.\r\n * @param {object} meta - dataset meta.\r\n * @returns {boolean}\r\n * @private\r\n */ function _scaleRangesChanged(meta) {\r\n    const { xScale , yScale , _scaleRanges  } = meta;\r\n    const newRanges = {\r\n        xmin: xScale.min,\r\n        xmax: xScale.max,\r\n        ymin: yScale.min,\r\n        ymax: yScale.max\r\n    };\r\n    if (!_scaleRanges) {\r\n        meta._scaleRanges = newRanges;\r\n        return true;\r\n    }\r\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\r\n    Object.assign(_scaleRanges, newRanges);\r\n    return changed;\r\n}\r\n\r\nclass Animator {\r\n    constructor(){\r\n        this._request = null;\r\n        this._charts = new Map();\r\n        this._running = false;\r\n        this._lastDate = undefined;\r\n    }\r\n _notify(chart, anims, date, type) {\r\n        const callbacks = anims.listeners[type];\r\n        const numSteps = anims.duration;\r\n        callbacks.forEach((fn)=>fn({\r\n                chart,\r\n                initial: anims.initial,\r\n                numSteps,\r\n                currentStep: Math.min(date - anims.start, numSteps)\r\n            }));\r\n    }\r\n _refresh() {\r\n        if (this._request) {\r\n            return;\r\n        }\r\n        this._running = true;\r\n        this._request = requestAnimFrame.call(window, ()=>{\r\n            this._update();\r\n            this._request = null;\r\n            if (this._running) {\r\n                this._refresh();\r\n            }\r\n        });\r\n    }\r\n _update(date = Date.now()) {\r\n        let remaining = 0;\r\n        this._charts.forEach((anims, chart)=>{\r\n            if (!anims.running || !anims.items.length) {\r\n                return;\r\n            }\r\n            const items = anims.items;\r\n            let i = items.length - 1;\r\n            let draw = false;\r\n            let item;\r\n            for(; i >= 0; --i){\r\n                item = items[i];\r\n                if (item._active) {\r\n                    if (item._total > anims.duration) {\r\n                        anims.duration = item._total;\r\n                    }\r\n                    item.tick(date);\r\n                    draw = true;\r\n                } else {\r\n                    items[i] = items[items.length - 1];\r\n                    items.pop();\r\n                }\r\n            }\r\n            if (draw) {\r\n                chart.draw();\r\n                this._notify(chart, anims, date, 'progress');\r\n            }\r\n            if (!items.length) {\r\n                anims.running = false;\r\n                this._notify(chart, anims, date, 'complete');\r\n                anims.initial = false;\r\n            }\r\n            remaining += items.length;\r\n        });\r\n        this._lastDate = date;\r\n        if (remaining === 0) {\r\n            this._running = false;\r\n        }\r\n    }\r\n _getAnims(chart) {\r\n        const charts = this._charts;\r\n        let anims = charts.get(chart);\r\n        if (!anims) {\r\n            anims = {\r\n                running: false,\r\n                initial: true,\r\n                items: [],\r\n                listeners: {\r\n                    complete: [],\r\n                    progress: []\r\n                }\r\n            };\r\n            charts.set(chart, anims);\r\n        }\r\n        return anims;\r\n    }\r\n listen(chart, event, cb) {\r\n        this._getAnims(chart).listeners[event].push(cb);\r\n    }\r\n add(chart, items) {\r\n        if (!items || !items.length) {\r\n            return;\r\n        }\r\n        this._getAnims(chart).items.push(...items);\r\n    }\r\n has(chart) {\r\n        return this._getAnims(chart).items.length > 0;\r\n    }\r\n start(chart) {\r\n        const anims = this._charts.get(chart);\r\n        if (!anims) {\r\n            return;\r\n        }\r\n        anims.running = true;\r\n        anims.start = Date.now();\r\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\r\n        this._refresh();\r\n    }\r\n    running(chart) {\r\n        if (!this._running) {\r\n            return false;\r\n        }\r\n        const anims = this._charts.get(chart);\r\n        if (!anims || !anims.running || !anims.items.length) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n stop(chart) {\r\n        const anims = this._charts.get(chart);\r\n        if (!anims || !anims.items.length) {\r\n            return;\r\n        }\r\n        const items = anims.items;\r\n        let i = items.length - 1;\r\n        for(; i >= 0; --i){\r\n            items[i].cancel();\r\n        }\r\n        anims.items = [];\r\n        this._notify(chart, anims, Date.now(), 'complete');\r\n    }\r\n remove(chart) {\r\n        return this._charts.delete(chart);\r\n    }\r\n}\r\nvar animator = /* #__PURE__ */ new Animator();\r\n\r\n/*!\r\n * @kurkle/color v0.3.2\r\n * https://github.com/kurkle/color#readme\r\n * (c) 2023 Jukka Kurkela\r\n * Released under the MIT License\r\n */\r\nfunction round(v) {\r\n  return v + 0.5 | 0;\r\n}\r\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\r\nfunction p2b(v) {\r\n  return lim(round(v * 2.55), 0, 255);\r\n}\r\nfunction n2b(v) {\r\n  return lim(round(v * 255), 0, 255);\r\n}\r\nfunction b2n(v) {\r\n  return lim(round(v / 2.55) / 100, 0, 1);\r\n}\r\nfunction n2p(v) {\r\n  return lim(round(v * 100), 0, 100);\r\n}\r\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\r\nconst hex = [...'0123456789ABCDEF'];\r\nconst h1 = b => hex[b & 0xF];\r\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\r\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\r\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\r\nfunction hexParse(str) {\r\n  var len = str.length;\r\n  var ret;\r\n  if (str[0] === '#') {\r\n    if (len === 4 || len === 5) {\r\n      ret = {\r\n        r: 255 & map$1[str[1]] * 17,\r\n        g: 255 & map$1[str[2]] * 17,\r\n        b: 255 & map$1[str[3]] * 17,\r\n        a: len === 5 ? map$1[str[4]] * 17 : 255\r\n      };\r\n    } else if (len === 7 || len === 9) {\r\n      ret = {\r\n        r: map$1[str[1]] << 4 | map$1[str[2]],\r\n        g: map$1[str[3]] << 4 | map$1[str[4]],\r\n        b: map$1[str[5]] << 4 | map$1[str[6]],\r\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\r\n      };\r\n    }\r\n  }\r\n  return ret;\r\n}\r\nconst alpha = (a, f) => a < 255 ? f(a) : '';\r\nfunction hexString(v) {\r\n  var f = isShort(v) ? h1 : h2;\r\n  return v\r\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\r\n    : undefined;\r\n}\r\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction hsl2rgbn(h, s, l) {\r\n  const a = s * Math.min(l, 1 - l);\r\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n  return [f(0), f(8), f(4)];\r\n}\r\nfunction hsv2rgbn(h, s, v) {\r\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n  return [f(5), f(3), f(1)];\r\n}\r\nfunction hwb2rgbn(h, w, b) {\r\n  const rgb = hsl2rgbn(h, 1, 0.5);\r\n  let i;\r\n  if (w + b > 1) {\r\n    i = 1 / (w + b);\r\n    w *= i;\r\n    b *= i;\r\n  }\r\n  for (i = 0; i < 3; i++) {\r\n    rgb[i] *= 1 - w - b;\r\n    rgb[i] += w;\r\n  }\r\n  return rgb;\r\n}\r\nfunction hueValue(r, g, b, d, max) {\r\n  if (r === max) {\r\n    return ((g - b) / d) + (g < b ? 6 : 0);\r\n  }\r\n  if (g === max) {\r\n    return (b - r) / d + 2;\r\n  }\r\n  return (r - g) / d + 4;\r\n}\r\nfunction rgb2hsl(v) {\r\n  const range = 255;\r\n  const r = v.r / range;\r\n  const g = v.g / range;\r\n  const b = v.b / range;\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n  const l = (max + min) / 2;\r\n  let h, s, d;\r\n  if (max !== min) {\r\n    d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    h = hueValue(r, g, b, d, max);\r\n    h = h * 60 + 0.5;\r\n  }\r\n  return [h | 0, s || 0, l];\r\n}\r\nfunction calln(f, a, b, c) {\r\n  return (\r\n    Array.isArray(a)\r\n      ? f(a[0], a[1], a[2])\r\n      : f(a, b, c)\r\n  ).map(n2b);\r\n}\r\nfunction hsl2rgb(h, s, l) {\r\n  return calln(hsl2rgbn, h, s, l);\r\n}\r\nfunction hwb2rgb(h, w, b) {\r\n  return calln(hwb2rgbn, h, w, b);\r\n}\r\nfunction hsv2rgb(h, s, v) {\r\n  return calln(hsv2rgbn, h, s, v);\r\n}\r\nfunction hue(h) {\r\n  return (h % 360 + 360) % 360;\r\n}\r\nfunction hueParse(str) {\r\n  const m = HUE_RE.exec(str);\r\n  let a = 255;\r\n  let v;\r\n  if (!m) {\r\n    return;\r\n  }\r\n  if (m[5] !== v) {\r\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\r\n  }\r\n  const h = hue(+m[2]);\r\n  const p1 = +m[3] / 100;\r\n  const p2 = +m[4] / 100;\r\n  if (m[1] === 'hwb') {\r\n    v = hwb2rgb(h, p1, p2);\r\n  } else if (m[1] === 'hsv') {\r\n    v = hsv2rgb(h, p1, p2);\r\n  } else {\r\n    v = hsl2rgb(h, p1, p2);\r\n  }\r\n  return {\r\n    r: v[0],\r\n    g: v[1],\r\n    b: v[2],\r\n    a: a\r\n  };\r\n}\r\nfunction rotate(v, deg) {\r\n  var h = rgb2hsl(v);\r\n  h[0] = hue(h[0] + deg);\r\n  h = hsl2rgb(h);\r\n  v.r = h[0];\r\n  v.g = h[1];\r\n  v.b = h[2];\r\n}\r\nfunction hslString(v) {\r\n  if (!v) {\r\n    return;\r\n  }\r\n  const a = rgb2hsl(v);\r\n  const h = a[0];\r\n  const s = n2p(a[1]);\r\n  const l = n2p(a[2]);\r\n  return v.a < 255\r\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\r\n    : `hsl(${h}, ${s}%, ${l}%)`;\r\n}\r\nconst map$2 = {\r\n  x: 'dark',\r\n  Z: 'light',\r\n  Y: 're',\r\n  X: 'blu',\r\n  W: 'gr',\r\n  V: 'medium',\r\n  U: 'slate',\r\n  A: 'ee',\r\n  T: 'ol',\r\n  S: 'or',\r\n  B: 'ra',\r\n  C: 'lateg',\r\n  D: 'ights',\r\n  R: 'in',\r\n  Q: 'turquois',\r\n  E: 'hi',\r\n  P: 'ro',\r\n  O: 'al',\r\n  N: 'le',\r\n  M: 'de',\r\n  L: 'yello',\r\n  F: 'en',\r\n  K: 'ch',\r\n  G: 'arks',\r\n  H: 'ea',\r\n  I: 'ightg',\r\n  J: 'wh'\r\n};\r\nconst names$1 = {\r\n  OiceXe: 'f0f8ff',\r\n  antiquewEte: 'faebd7',\r\n  aqua: 'ffff',\r\n  aquamarRe: '7fffd4',\r\n  azuY: 'f0ffff',\r\n  beige: 'f5f5dc',\r\n  bisque: 'ffe4c4',\r\n  black: '0',\r\n  blanKedOmond: 'ffebcd',\r\n  Xe: 'ff',\r\n  XeviTet: '8a2be2',\r\n  bPwn: 'a52a2a',\r\n  burlywood: 'deb887',\r\n  caMtXe: '5f9ea0',\r\n  KartYuse: '7fff00',\r\n  KocTate: 'd2691e',\r\n  cSO: 'ff7f50',\r\n  cSnflowerXe: '6495ed',\r\n  cSnsilk: 'fff8dc',\r\n  crimson: 'dc143c',\r\n  cyan: 'ffff',\r\n  xXe: '8b',\r\n  xcyan: '8b8b',\r\n  xgTMnPd: 'b8860b',\r\n  xWay: 'a9a9a9',\r\n  xgYF: '6400',\r\n  xgYy: 'a9a9a9',\r\n  xkhaki: 'bdb76b',\r\n  xmagFta: '8b008b',\r\n  xTivegYF: '556b2f',\r\n  xSange: 'ff8c00',\r\n  xScEd: '9932cc',\r\n  xYd: '8b0000',\r\n  xsOmon: 'e9967a',\r\n  xsHgYF: '8fbc8f',\r\n  xUXe: '483d8b',\r\n  xUWay: '2f4f4f',\r\n  xUgYy: '2f4f4f',\r\n  xQe: 'ced1',\r\n  xviTet: '9400d3',\r\n  dAppRk: 'ff1493',\r\n  dApskyXe: 'bfff',\r\n  dimWay: '696969',\r\n  dimgYy: '696969',\r\n  dodgerXe: '1e90ff',\r\n  fiYbrick: 'b22222',\r\n  flSOwEte: 'fffaf0',\r\n  foYstWAn: '228b22',\r\n  fuKsia: 'ff00ff',\r\n  gaRsbSo: 'dcdcdc',\r\n  ghostwEte: 'f8f8ff',\r\n  gTd: 'ffd700',\r\n  gTMnPd: 'daa520',\r\n  Way: '808080',\r\n  gYF: '8000',\r\n  gYFLw: 'adff2f',\r\n  gYy: '808080',\r\n  honeyMw: 'f0fff0',\r\n  hotpRk: 'ff69b4',\r\n  RdianYd: 'cd5c5c',\r\n  Rdigo: '4b0082',\r\n  ivSy: 'fffff0',\r\n  khaki: 'f0e68c',\r\n  lavFMr: 'e6e6fa',\r\n  lavFMrXsh: 'fff0f5',\r\n  lawngYF: '7cfc00',\r\n  NmoncEffon: 'fffacd',\r\n  ZXe: 'add8e6',\r\n  ZcSO: 'f08080',\r\n  Zcyan: 'e0ffff',\r\n  ZgTMnPdLw: 'fafad2',\r\n  ZWay: 'd3d3d3',\r\n  ZgYF: '90ee90',\r\n  ZgYy: 'd3d3d3',\r\n  ZpRk: 'ffb6c1',\r\n  ZsOmon: 'ffa07a',\r\n  ZsHgYF: '20b2aa',\r\n  ZskyXe: '87cefa',\r\n  ZUWay: '778899',\r\n  ZUgYy: '778899',\r\n  ZstAlXe: 'b0c4de',\r\n  ZLw: 'ffffe0',\r\n  lime: 'ff00',\r\n  limegYF: '32cd32',\r\n  lRF: 'faf0e6',\r\n  magFta: 'ff00ff',\r\n  maPon: '800000',\r\n  VaquamarRe: '66cdaa',\r\n  VXe: 'cd',\r\n  VScEd: 'ba55d3',\r\n  VpurpN: '9370db',\r\n  VsHgYF: '3cb371',\r\n  VUXe: '7b68ee',\r\n  VsprRggYF: 'fa9a',\r\n  VQe: '48d1cc',\r\n  VviTetYd: 'c71585',\r\n  midnightXe: '191970',\r\n  mRtcYam: 'f5fffa',\r\n  mistyPse: 'ffe4e1',\r\n  moccasR: 'ffe4b5',\r\n  navajowEte: 'ffdead',\r\n  navy: '80',\r\n  Tdlace: 'fdf5e6',\r\n  Tive: '808000',\r\n  TivedBb: '6b8e23',\r\n  Sange: 'ffa500',\r\n  SangeYd: 'ff4500',\r\n  ScEd: 'da70d6',\r\n  pOegTMnPd: 'eee8aa',\r\n  pOegYF: '98fb98',\r\n  pOeQe: 'afeeee',\r\n  pOeviTetYd: 'db7093',\r\n  papayawEp: 'ffefd5',\r\n  pHKpuff: 'ffdab9',\r\n  peru: 'cd853f',\r\n  pRk: 'ffc0cb',\r\n  plum: 'dda0dd',\r\n  powMrXe: 'b0e0e6',\r\n  purpN: '800080',\r\n  YbeccapurpN: '663399',\r\n  Yd: 'ff0000',\r\n  Psybrown: 'bc8f8f',\r\n  PyOXe: '4169e1',\r\n  saddNbPwn: '8b4513',\r\n  sOmon: 'fa8072',\r\n  sandybPwn: 'f4a460',\r\n  sHgYF: '2e8b57',\r\n  sHshell: 'fff5ee',\r\n  siFna: 'a0522d',\r\n  silver: 'c0c0c0',\r\n  skyXe: '87ceeb',\r\n  UXe: '6a5acd',\r\n  UWay: '708090',\r\n  UgYy: '708090',\r\n  snow: 'fffafa',\r\n  sprRggYF: 'ff7f',\r\n  stAlXe: '4682b4',\r\n  tan: 'd2b48c',\r\n  teO: '8080',\r\n  tEstN: 'd8bfd8',\r\n  tomato: 'ff6347',\r\n  Qe: '40e0d0',\r\n  viTet: 'ee82ee',\r\n  JHt: 'f5deb3',\r\n  wEte: 'ffffff',\r\n  wEtesmoke: 'f5f5f5',\r\n  Lw: 'ffff00',\r\n  LwgYF: '9acd32'\r\n};\r\nfunction unpack() {\r\n  const unpacked = {};\r\n  const keys = Object.keys(names$1);\r\n  const tkeys = Object.keys(map$2);\r\n  let i, j, k, ok, nk;\r\n  for (i = 0; i < keys.length; i++) {\r\n    ok = nk = keys[i];\r\n    for (j = 0; j < tkeys.length; j++) {\r\n      k = tkeys[j];\r\n      nk = nk.replace(k, map$2[k]);\r\n    }\r\n    k = parseInt(names$1[ok], 16);\r\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\r\n  }\r\n  return unpacked;\r\n}\r\nlet names;\r\nfunction nameParse(str) {\r\n  if (!names) {\r\n    names = unpack();\r\n    names.transparent = [0, 0, 0, 0];\r\n  }\r\n  const a = names[str.toLowerCase()];\r\n  return a && {\r\n    r: a[0],\r\n    g: a[1],\r\n    b: a[2],\r\n    a: a.length === 4 ? a[3] : 255\r\n  };\r\n}\r\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction rgbParse(str) {\r\n  const m = RGB_RE.exec(str);\r\n  let a = 255;\r\n  let r, g, b;\r\n  if (!m) {\r\n    return;\r\n  }\r\n  if (m[7] !== r) {\r\n    const v = +m[7];\r\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\r\n  }\r\n  r = +m[1];\r\n  g = +m[3];\r\n  b = +m[5];\r\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\r\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\r\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\r\n  return {\r\n    r: r,\r\n    g: g,\r\n    b: b,\r\n    a: a\r\n  };\r\n}\r\nfunction rgbString(v) {\r\n  return v && (\r\n    v.a < 255\r\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\r\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\r\n  );\r\n}\r\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\r\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\r\nfunction interpolate$1(rgb1, rgb2, t) {\r\n  const r = from(b2n(rgb1.r));\r\n  const g = from(b2n(rgb1.g));\r\n  const b = from(b2n(rgb1.b));\r\n  return {\r\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\r\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\r\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\r\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\r\n  };\r\n}\r\nfunction modHSL(v, i, ratio) {\r\n  if (v) {\r\n    let tmp = rgb2hsl(v);\r\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\r\n    tmp = hsl2rgb(tmp);\r\n    v.r = tmp[0];\r\n    v.g = tmp[1];\r\n    v.b = tmp[2];\r\n  }\r\n}\r\nfunction clone(v, proto) {\r\n  return v ? Object.assign(proto || {}, v) : v;\r\n}\r\nfunction fromObject(input) {\r\n  var v = {r: 0, g: 0, b: 0, a: 255};\r\n  if (Array.isArray(input)) {\r\n    if (input.length >= 3) {\r\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\r\n      if (input.length > 3) {\r\n        v.a = n2b(input[3]);\r\n      }\r\n    }\r\n  } else {\r\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\r\n    v.a = n2b(v.a);\r\n  }\r\n  return v;\r\n}\r\nfunction functionParse(str) {\r\n  if (str.charAt(0) === 'r') {\r\n    return rgbParse(str);\r\n  }\r\n  return hueParse(str);\r\n}\r\nclass Color {\r\n  constructor(input) {\r\n    if (input instanceof Color) {\r\n      return input;\r\n    }\r\n    const type = typeof input;\r\n    let v;\r\n    if (type === 'object') {\r\n      v = fromObject(input);\r\n    } else if (type === 'string') {\r\n      v = hexParse(input) || nameParse(input) || functionParse(input);\r\n    }\r\n    this._rgb = v;\r\n    this._valid = !!v;\r\n  }\r\n  get valid() {\r\n    return this._valid;\r\n  }\r\n  get rgb() {\r\n    var v = clone(this._rgb);\r\n    if (v) {\r\n      v.a = b2n(v.a);\r\n    }\r\n    return v;\r\n  }\r\n  set rgb(obj) {\r\n    this._rgb = fromObject(obj);\r\n  }\r\n  rgbString() {\r\n    return this._valid ? rgbString(this._rgb) : undefined;\r\n  }\r\n  hexString() {\r\n    return this._valid ? hexString(this._rgb) : undefined;\r\n  }\r\n  hslString() {\r\n    return this._valid ? hslString(this._rgb) : undefined;\r\n  }\r\n  mix(color, weight) {\r\n    if (color) {\r\n      const c1 = this.rgb;\r\n      const c2 = color.rgb;\r\n      let w2;\r\n      const p = weight === w2 ? 0.5 : weight;\r\n      const w = 2 * p - 1;\r\n      const a = c1.a - c2.a;\r\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n      w2 = 1 - w1;\r\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\r\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\r\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\r\n      c1.a = p * c1.a + (1 - p) * c2.a;\r\n      this.rgb = c1;\r\n    }\r\n    return this;\r\n  }\r\n  interpolate(color, t) {\r\n    if (color) {\r\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\r\n    }\r\n    return this;\r\n  }\r\n  clone() {\r\n    return new Color(this.rgb);\r\n  }\r\n  alpha(a) {\r\n    this._rgb.a = n2b(a);\r\n    return this;\r\n  }\r\n  clearer(ratio) {\r\n    const rgb = this._rgb;\r\n    rgb.a *= 1 - ratio;\r\n    return this;\r\n  }\r\n  greyscale() {\r\n    const rgb = this._rgb;\r\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\r\n    rgb.r = rgb.g = rgb.b = val;\r\n    return this;\r\n  }\r\n  opaquer(ratio) {\r\n    const rgb = this._rgb;\r\n    rgb.a *= 1 + ratio;\r\n    return this;\r\n  }\r\n  negate() {\r\n    const v = this._rgb;\r\n    v.r = 255 - v.r;\r\n    v.g = 255 - v.g;\r\n    v.b = 255 - v.b;\r\n    return this;\r\n  }\r\n  lighten(ratio) {\r\n    modHSL(this._rgb, 2, ratio);\r\n    return this;\r\n  }\r\n  darken(ratio) {\r\n    modHSL(this._rgb, 2, -ratio);\r\n    return this;\r\n  }\r\n  saturate(ratio) {\r\n    modHSL(this._rgb, 1, ratio);\r\n    return this;\r\n  }\r\n  desaturate(ratio) {\r\n    modHSL(this._rgb, 1, -ratio);\r\n    return this;\r\n  }\r\n  rotate(deg) {\r\n    rotate(this._rgb, deg);\r\n    return this;\r\n  }\r\n}\r\n\r\nfunction isPatternOrGradient(value) {\r\n    if (value && typeof value === 'object') {\r\n        const type = value.toString();\r\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\r\n    }\r\n    return false;\r\n}\r\nfunction color(value) {\r\n    return isPatternOrGradient(value) ? value : new Color(value);\r\n}\r\nfunction getHoverColor(value) {\r\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\r\n}\r\n\r\nconst numbers = [\r\n    'x',\r\n    'y',\r\n    'borderWidth',\r\n    'radius',\r\n    'tension'\r\n];\r\nconst colors = [\r\n    'color',\r\n    'borderColor',\r\n    'backgroundColor'\r\n];\r\nfunction applyAnimationsDefaults(defaults) {\r\n    defaults.set('animation', {\r\n        delay: undefined,\r\n        duration: 1000,\r\n        easing: 'easeOutQuart',\r\n        fn: undefined,\r\n        from: undefined,\r\n        loop: undefined,\r\n        to: undefined,\r\n        type: undefined\r\n    });\r\n    defaults.describe('animation', {\r\n        _fallback: false,\r\n        _indexable: false,\r\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\r\n    });\r\n    defaults.set('animations', {\r\n        colors: {\r\n            type: 'color',\r\n            properties: colors\r\n        },\r\n        numbers: {\r\n            type: 'number',\r\n            properties: numbers\r\n        }\r\n    });\r\n    defaults.describe('animations', {\r\n        _fallback: 'animation'\r\n    });\r\n    defaults.set('transitions', {\r\n        active: {\r\n            animation: {\r\n                duration: 400\r\n            }\r\n        },\r\n        resize: {\r\n            animation: {\r\n                duration: 0\r\n            }\r\n        },\r\n        show: {\r\n            animations: {\r\n                colors: {\r\n                    from: 'transparent'\r\n                },\r\n                visible: {\r\n                    type: 'boolean',\r\n                    duration: 0\r\n                }\r\n            }\r\n        },\r\n        hide: {\r\n            animations: {\r\n                colors: {\r\n                    to: 'transparent'\r\n                },\r\n                visible: {\r\n                    type: 'boolean',\r\n                    easing: 'linear',\r\n                    fn: (v)=>v | 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction applyLayoutsDefaults(defaults) {\r\n    defaults.set('layout', {\r\n        autoPadding: true,\r\n        padding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n        }\r\n    });\r\n}\r\n\r\nconst intlCache = new Map();\r\nfunction getNumberFormat(locale, options) {\r\n    options = options || {};\r\n    const cacheKey = locale + JSON.stringify(options);\r\n    let formatter = intlCache.get(cacheKey);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(locale, options);\r\n        intlCache.set(cacheKey, formatter);\r\n    }\r\n    return formatter;\r\n}\r\nfunction formatNumber(num, locale, options) {\r\n    return getNumberFormat(locale, options).format(num);\r\n}\r\n\r\nconst formatters = {\r\n values (value) {\r\n        return isArray(value) ?  value : '' + value;\r\n    },\r\n numeric (tickValue, index, ticks) {\r\n        if (tickValue === 0) {\r\n            return '0';\r\n        }\r\n        const locale = this.chart.options.locale;\r\n        let notation;\r\n        let delta = tickValue;\r\n        if (ticks.length > 1) {\r\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n                notation = 'scientific';\r\n            }\r\n            delta = calculateDelta(tickValue, ticks);\r\n        }\r\n        const logDelta = log10(Math.abs(delta));\r\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n        const options = {\r\n            notation,\r\n            minimumFractionDigits: numDecimal,\r\n            maximumFractionDigits: numDecimal\r\n        };\r\n        Object.assign(options, this.options.ticks.format);\r\n        return formatNumber(tickValue, locale, options);\r\n    },\r\n logarithmic (tickValue, index, ticks) {\r\n        if (tickValue === 0) {\r\n            return '0';\r\n        }\r\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\r\n        if ([\r\n            1,\r\n            2,\r\n            3,\r\n            5,\r\n            10,\r\n            15\r\n        ].includes(remain) || index > 0.8 * ticks.length) {\r\n            return formatters.numeric.call(this, tickValue, index, ticks);\r\n        }\r\n        return '';\r\n    }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n        delta = tickValue - Math.floor(tickValue);\r\n    }\r\n    return delta;\r\n}\r\n var Ticks = {\r\n    formatters\r\n};\r\n\r\nfunction applyScaleDefaults(defaults) {\r\n    defaults.set('scale', {\r\n        display: true,\r\n        offset: false,\r\n        reverse: false,\r\n        beginAtZero: false,\r\n bounds: 'ticks',\r\n        clip: true,\r\n grace: 0,\r\n        grid: {\r\n            display: true,\r\n            lineWidth: 1,\r\n            drawOnChartArea: true,\r\n            drawTicks: true,\r\n            tickLength: 8,\r\n            tickWidth: (_ctx, options)=>options.lineWidth,\r\n            tickColor: (_ctx, options)=>options.color,\r\n            offset: false\r\n        },\r\n        border: {\r\n            display: true,\r\n            dash: [],\r\n            dashOffset: 0.0,\r\n            width: 1\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: '',\r\n            padding: {\r\n                top: 4,\r\n                bottom: 4\r\n            }\r\n        },\r\n        ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 50,\r\n            mirror: false,\r\n            textStrokeWidth: 0,\r\n            textStrokeColor: '',\r\n            padding: 3,\r\n            display: true,\r\n            autoSkip: true,\r\n            autoSkipPadding: 3,\r\n            labelOffset: 0,\r\n            callback: Ticks.formatters.values,\r\n            minor: {},\r\n            major: {},\r\n            align: 'center',\r\n            crossAlign: 'near',\r\n            showLabelBackdrop: false,\r\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n            backdropPadding: 2\r\n        }\r\n    });\r\n    defaults.route('scale.ticks', 'color', '', 'color');\r\n    defaults.route('scale.grid', 'color', '', 'borderColor');\r\n    defaults.route('scale.border', 'color', '', 'borderColor');\r\n    defaults.route('scale.title', 'color', '', 'color');\r\n    defaults.describe('scale', {\r\n        _fallback: false,\r\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\r\n    });\r\n    defaults.describe('scales', {\r\n        _fallback: 'scale'\r\n    });\r\n    defaults.describe('scale.ticks', {\r\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\r\n        _indexable: (name)=>name !== 'backdropPadding'\r\n    });\r\n}\r\n\r\nconst overrides = Object.create(null);\r\nconst descriptors = Object.create(null);\r\n function getScope$1(node, key) {\r\n    if (!key) {\r\n        return node;\r\n    }\r\n    const keys = key.split('.');\r\n    for(let i = 0, n = keys.length; i < n; ++i){\r\n        const k = keys[i];\r\n        node = node[k] || (node[k] = Object.create(null));\r\n    }\r\n    return node;\r\n}\r\nfunction set(root, scope, values) {\r\n    if (typeof scope === 'string') {\r\n        return merge(getScope$1(root, scope), values);\r\n    }\r\n    return merge(getScope$1(root, ''), scope);\r\n}\r\n class Defaults {\r\n    constructor(_descriptors, _appliers){\r\n        this.animation = undefined;\r\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n        this.borderColor = 'rgba(0,0,0,0.1)';\r\n        this.color = '#666';\r\n        this.datasets = {};\r\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\r\n        this.elements = {};\r\n        this.events = [\r\n            'mousemove',\r\n            'mouseout',\r\n            'click',\r\n            'touchstart',\r\n            'touchmove'\r\n        ];\r\n        this.font = {\r\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n            size: 12,\r\n            style: 'normal',\r\n            lineHeight: 1.2,\r\n            weight: null\r\n        };\r\n        this.hover = {};\r\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\r\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\r\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\r\n        this.indexAxis = 'x';\r\n        this.interaction = {\r\n            mode: 'nearest',\r\n            intersect: true,\r\n            includeInvisible: false\r\n        };\r\n        this.maintainAspectRatio = true;\r\n        this.onHover = null;\r\n        this.onClick = null;\r\n        this.parsing = true;\r\n        this.plugins = {};\r\n        this.responsive = true;\r\n        this.scale = undefined;\r\n        this.scales = {};\r\n        this.showLine = true;\r\n        this.drawActiveElementsOnTop = true;\r\n        this.describe(_descriptors);\r\n        this.apply(_appliers);\r\n    }\r\n set(scope, values) {\r\n        return set(this, scope, values);\r\n    }\r\n get(scope) {\r\n        return getScope$1(this, scope);\r\n    }\r\n describe(scope, values) {\r\n        return set(descriptors, scope, values);\r\n    }\r\n    override(scope, values) {\r\n        return set(overrides, scope, values);\r\n    }\r\n route(scope, name, targetScope, targetName) {\r\n        const scopeObject = getScope$1(this, scope);\r\n        const targetScopeObject = getScope$1(this, targetScope);\r\n        const privateName = '_' + name;\r\n        Object.defineProperties(scopeObject, {\r\n            [privateName]: {\r\n                value: scopeObject[name],\r\n                writable: true\r\n            },\r\n            [name]: {\r\n                enumerable: true,\r\n                get () {\r\n                    const local = this[privateName];\r\n                    const target = targetScopeObject[targetName];\r\n                    if (isObject(local)) {\r\n                        return Object.assign({}, target, local);\r\n                    }\r\n                    return valueOrDefault(local, target);\r\n                },\r\n                set (value) {\r\n                    this[privateName] = value;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    apply(appliers) {\r\n        appliers.forEach((apply)=>apply(this));\r\n    }\r\n}\r\nvar defaults = /* #__PURE__ */ new Defaults({\r\n    _scriptable: (name)=>!name.startsWith('on'),\r\n    _indexable: (name)=>name !== 'events',\r\n    hover: {\r\n        _fallback: 'interaction'\r\n    },\r\n    interaction: {\r\n        _scriptable: false,\r\n        _indexable: false\r\n    }\r\n}, [\r\n    applyAnimationsDefaults,\r\n    applyLayoutsDefaults,\r\n    applyScaleDefaults\r\n]);\r\n\r\n/**\r\n * @private\r\n */ function _isDomSupported() {\r\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\n/**\r\n * @private\r\n */ function _getParentNode(domNode) {\r\n    let parent = domNode.parentNode;\r\n    if (parent && parent.toString() === '[object ShadowRoot]') {\r\n        parent = parent.host;\r\n    }\r\n    return parent;\r\n}\r\n/**\r\n * convert max-width/max-height values that may be percentages into a number\r\n * @private\r\n */ function parseMaxStyle(styleValue, node, parentProperty) {\r\n    let valueInPixels;\r\n    if (typeof styleValue === 'string') {\r\n        valueInPixels = parseInt(styleValue, 10);\r\n        if (styleValue.indexOf('%') !== -1) {\r\n            // percentage * size in dimension\r\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n        }\r\n    } else {\r\n        valueInPixels = styleValue;\r\n    }\r\n    return valueInPixels;\r\n}\r\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\r\nfunction getStyle(el, property) {\r\n    return getComputedStyle(el).getPropertyValue(property);\r\n}\r\nconst positions = [\r\n    'top',\r\n    'right',\r\n    'bottom',\r\n    'left'\r\n];\r\nfunction getPositionedStyle(styles, style, suffix) {\r\n    const result = {};\r\n    suffix = suffix ? '-' + suffix : '';\r\n    for(let i = 0; i < 4; i++){\r\n        const pos = positions[i];\r\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n    }\r\n    result.width = result.left + result.right;\r\n    result.height = result.top + result.bottom;\r\n    return result;\r\n}\r\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\r\n/**\r\n * @param e\r\n * @param canvas\r\n * @returns Canvas position\r\n */ function getCanvasPosition(e, canvas) {\r\n    const touches = e.touches;\r\n    const source = touches && touches.length ? touches[0] : e;\r\n    const { offsetX , offsetY  } = source;\r\n    let box = false;\r\n    let x, y;\r\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n        x = offsetX;\r\n        y = offsetY;\r\n    } else {\r\n        const rect = canvas.getBoundingClientRect();\r\n        x = source.clientX - rect.left;\r\n        y = source.clientY - rect.top;\r\n        box = true;\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        box\r\n    };\r\n}\r\n/**\r\n * Gets an event's x, y coordinates, relative to the chart area\r\n * @param event\r\n * @param chart\r\n * @returns x and y coordinates of the event\r\n */ function getRelativePosition(event, chart) {\r\n    if ('native' in event) {\r\n        return event;\r\n    }\r\n    const { canvas , currentDevicePixelRatio  } = chart;\r\n    const style = getComputedStyle(canvas);\r\n    const borderBox = style.boxSizing === 'border-box';\r\n    const paddings = getPositionedStyle(style, 'padding');\r\n    const borders = getPositionedStyle(style, 'border', 'width');\r\n    const { x , y , box  } = getCanvasPosition(event, canvas);\r\n    const xOffset = paddings.left + (box && borders.left);\r\n    const yOffset = paddings.top + (box && borders.top);\r\n    let { width , height  } = chart;\r\n    if (borderBox) {\r\n        width -= paddings.width + borders.width;\r\n        height -= paddings.height + borders.height;\r\n    }\r\n    return {\r\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n    };\r\n}\r\nfunction getContainerSize(canvas, width, height) {\r\n    let maxWidth, maxHeight;\r\n    if (width === undefined || height === undefined) {\r\n        const container = canvas && _getParentNode(canvas);\r\n        if (!container) {\r\n            width = canvas.clientWidth;\r\n            height = canvas.clientHeight;\r\n        } else {\r\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\r\n            const containerStyle = getComputedStyle(container);\r\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n            width = rect.width - containerPadding.width - containerBorder.width;\r\n            height = rect.height - containerPadding.height - containerBorder.height;\r\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n        }\r\n    }\r\n    return {\r\n        width,\r\n        height,\r\n        maxWidth: maxWidth || INFINITY,\r\n        maxHeight: maxHeight || INFINITY\r\n    };\r\n}\r\nconst round1 = (v)=>Math.round(v * 10) / 10;\r\n// eslint-disable-next-line complexity\r\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\r\n    const style = getComputedStyle(canvas);\r\n    const margins = getPositionedStyle(style, 'margin');\r\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n    let { width , height  } = containerSize;\r\n    if (style.boxSizing === 'content-box') {\r\n        const borders = getPositionedStyle(style, 'border', 'width');\r\n        const paddings = getPositionedStyle(style, 'padding');\r\n        width -= paddings.width + borders.width;\r\n        height -= paddings.height + borders.height;\r\n    }\r\n    width = Math.max(0, width - margins.width);\r\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\r\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n    if (width && !height) {\r\n        // https://github.com/chartjs/Chart.js/issues/4659\r\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\r\n        height = round1(width / 2);\r\n    }\r\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\r\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\r\n        height = containerSize.height;\r\n        width = round1(Math.floor(height * aspectRatio));\r\n    }\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n/**\r\n * @param chart\r\n * @param forceRatio\r\n * @param forceStyle\r\n * @returns True if the canvas context size or transformation has changed.\r\n */ function retinaScale(chart, forceRatio, forceStyle) {\r\n    const pixelRatio = forceRatio || 1;\r\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\r\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\r\n    chart.height = Math.floor(chart.height);\r\n    chart.width = Math.floor(chart.width);\r\n    const canvas = chart.canvas;\r\n    // If no style has been set on the canvas, the render size is used as display size,\r\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n    // See https://github.com/chartjs/Chart.js/issues/3575\r\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\r\n        canvas.style.height = `${chart.height}px`;\r\n        canvas.style.width = `${chart.width}px`;\r\n    }\r\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\r\n        chart.currentDevicePixelRatio = pixelRatio;\r\n        canvas.height = deviceHeight;\r\n        canvas.width = deviceWidth;\r\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Detects support for options object argument in addEventListener.\r\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n * @private\r\n */ const supportsEventListenerOptions = function() {\r\n    let passiveSupported = false;\r\n    try {\r\n        const options = {\r\n            get passive () {\r\n                passiveSupported = true;\r\n                return false;\r\n            }\r\n        };\r\n        if (_isDomSupported()) {\r\n            window.addEventListener('test', null, options);\r\n            window.removeEventListener('test', null, options);\r\n        }\r\n    } catch (e) {\r\n    // continue regardless of error\r\n    }\r\n    return passiveSupported;\r\n}();\r\n/**\r\n * The \"used\" size is the final value of a dimension property after all calculations have\r\n * been performed. This method uses the computed style of `element` but returns undefined\r\n * if the computed style is not expressed in pixels. That can happen in some cases where\r\n * `element` has a size relative to its parent and this last one is not yet displayed,\r\n * for example because of `display: none` on a parent node.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n * @returns Size in pixels or undefined if unknown.\r\n */ function readUsedSize(element, property) {\r\n    const value = getStyle(element, property);\r\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n    return matches ? +matches[1] : undefined;\r\n}\r\n\r\n/**\r\n * Converts the given font object into a CSS font string.\r\n * @param font - A font object.\r\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n * @private\r\n */ function toFontString(font) {\r\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n        return null;\r\n    }\r\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\r\n}\r\n/**\r\n * @private\r\n */ function _measureText(ctx, data, gc, longest, string) {\r\n    let textWidth = data[string];\r\n    if (!textWidth) {\r\n        textWidth = data[string] = ctx.measureText(string).width;\r\n        gc.push(string);\r\n    }\r\n    if (textWidth > longest) {\r\n        longest = textWidth;\r\n    }\r\n    return longest;\r\n}\r\n/**\r\n * @private\r\n */ // eslint-disable-next-line complexity\r\nfunction _longestText(ctx, font, arrayOfThings, cache) {\r\n    cache = cache || {};\r\n    let data = cache.data = cache.data || {};\r\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n    if (cache.font !== font) {\r\n        data = cache.data = {};\r\n        gc = cache.garbageCollect = [];\r\n        cache.font = font;\r\n    }\r\n    ctx.save();\r\n    ctx.font = font;\r\n    let longest = 0;\r\n    const ilen = arrayOfThings.length;\r\n    let i, j, jlen, thing, nestedThing;\r\n    for(i = 0; i < ilen; i++){\r\n        thing = arrayOfThings[i];\r\n        // Undefined strings and arrays should not be measured\r\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\r\n            longest = _measureText(ctx, data, gc, longest, thing);\r\n        } else if (isArray(thing)) {\r\n            // if it is an array lets measure each element\r\n            // to do maybe simplify this function a bit so we can do this more recursively?\r\n            for(j = 0, jlen = thing.length; j < jlen; j++){\r\n                nestedThing = thing[j];\r\n                // Undefined strings and arrays should not be measured\r\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ctx.restore();\r\n    const gcLen = gc.length / 2;\r\n    if (gcLen > arrayOfThings.length) {\r\n        for(i = 0; i < gcLen; i++){\r\n            delete data[gc[i]];\r\n        }\r\n        gc.splice(0, gcLen);\r\n    }\r\n    return longest;\r\n}\r\n/**\r\n * Returns the aligned pixel value to avoid anti-aliasing blur\r\n * @param chart - The chart instance.\r\n * @param pixel - A pixel value.\r\n * @param width - The width of the element.\r\n * @returns The aligned pixel value.\r\n * @private\r\n */ function _alignPixel(chart, pixel, width) {\r\n    const devicePixelRatio = chart.currentDevicePixelRatio;\r\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n}\r\n/**\r\n * Clears the entire canvas.\r\n */ function clearCanvas(canvas, ctx) {\r\n    if (!ctx && !canvas) {\r\n        return;\r\n    }\r\n    ctx = ctx || canvas.getContext('2d');\r\n    ctx.save();\r\n    // canvas.width and canvas.height do not consider the canvas transform,\r\n    // while clearRect does\r\n    ctx.resetTransform();\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.restore();\r\n}\r\nfunction drawPoint(ctx, options, x, y) {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    drawPointLegend(ctx, options, x, y, null);\r\n}\r\n// eslint-disable-next-line complexity\r\nfunction drawPointLegend(ctx, options, x, y, w) {\r\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\r\n    const style = options.pointStyle;\r\n    const rotation = options.rotation;\r\n    const radius = options.radius;\r\n    let rad = (rotation || 0) * RAD_PER_DEG;\r\n    if (style && typeof style === 'object') {\r\n        type = style.toString();\r\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n            ctx.save();\r\n            ctx.translate(x, y);\r\n            ctx.rotate(rad);\r\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n            ctx.restore();\r\n            return;\r\n        }\r\n    }\r\n    if (isNaN(radius) || radius <= 0) {\r\n        return;\r\n    }\r\n    ctx.beginPath();\r\n    switch(style){\r\n        // Default includes circle\r\n        default:\r\n            if (w) {\r\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\r\n            } else {\r\n                ctx.arc(x, y, radius, 0, TAU);\r\n            }\r\n            ctx.closePath();\r\n            break;\r\n        case 'triangle':\r\n            width = w ? w / 2 : radius;\r\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n            rad += TWO_THIRDS_PI;\r\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n            rad += TWO_THIRDS_PI;\r\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n            ctx.closePath();\r\n            break;\r\n        case 'rectRounded':\r\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\r\n            // `quadraticCurveTo` since it generates better results when rect is\r\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\r\n            // closer proportion to the previous impl and it is inscribed in the\r\n            // circle with `radius`. For more details, see the following PRs:\r\n            // https://github.com/chartjs/Chart.js/issues/5597\r\n            // https://github.com/chartjs/Chart.js/issues/5858\r\n            cornerRadius = radius * 0.516;\r\n            size = radius - cornerRadius;\r\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n            ctx.closePath();\r\n            break;\r\n        case 'rect':\r\n            if (!rotation) {\r\n                size = Math.SQRT1_2 * radius;\r\n                width = w ? w / 2 : size;\r\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\r\n                break;\r\n            }\r\n            rad += QUARTER_PI;\r\n        /* falls through */ case 'rectRot':\r\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n            xOffset = Math.cos(rad) * radius;\r\n            yOffset = Math.sin(rad) * radius;\r\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n            ctx.moveTo(x - xOffsetW, y - yOffset);\r\n            ctx.lineTo(x + yOffsetW, y - xOffset);\r\n            ctx.lineTo(x + xOffsetW, y + yOffset);\r\n            ctx.lineTo(x - yOffsetW, y + xOffset);\r\n            ctx.closePath();\r\n            break;\r\n        case 'crossRot':\r\n            rad += QUARTER_PI;\r\n        /* falls through */ case 'cross':\r\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n            xOffset = Math.cos(rad) * radius;\r\n            yOffset = Math.sin(rad) * radius;\r\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n            ctx.moveTo(x - xOffsetW, y - yOffset);\r\n            ctx.lineTo(x + xOffsetW, y + yOffset);\r\n            ctx.moveTo(x + yOffsetW, y - xOffset);\r\n            ctx.lineTo(x - yOffsetW, y + xOffset);\r\n            break;\r\n        case 'star':\r\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n            xOffset = Math.cos(rad) * radius;\r\n            yOffset = Math.sin(rad) * radius;\r\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n            ctx.moveTo(x - xOffsetW, y - yOffset);\r\n            ctx.lineTo(x + xOffsetW, y + yOffset);\r\n            ctx.moveTo(x + yOffsetW, y - xOffset);\r\n            ctx.lineTo(x - yOffsetW, y + xOffset);\r\n            rad += QUARTER_PI;\r\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n            xOffset = Math.cos(rad) * radius;\r\n            yOffset = Math.sin(rad) * radius;\r\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n            ctx.moveTo(x - xOffsetW, y - yOffset);\r\n            ctx.lineTo(x + xOffsetW, y + yOffset);\r\n            ctx.moveTo(x + yOffsetW, y - xOffset);\r\n            ctx.lineTo(x - yOffsetW, y + xOffset);\r\n            break;\r\n        case 'line':\r\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\r\n            yOffset = Math.sin(rad) * radius;\r\n            ctx.moveTo(x - xOffset, y - yOffset);\r\n            ctx.lineTo(x + xOffset, y + yOffset);\r\n            break;\r\n        case 'dash':\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\r\n            break;\r\n        case false:\r\n            ctx.closePath();\r\n            break;\r\n    }\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n        ctx.stroke();\r\n    }\r\n}\r\n/**\r\n * Returns true if the point is inside the rectangle\r\n * @param point - The point to test\r\n * @param area - The rectangle\r\n * @param margin - allowed margin\r\n * @private\r\n */ function _isPointInArea(point, area, margin) {\r\n    margin = margin || 0.5; // margin - default is to match rounded decimals\r\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\r\n}\r\nfunction clipArea(ctx, area) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n    ctx.clip();\r\n}\r\nfunction unclipArea(ctx) {\r\n    ctx.restore();\r\n}\r\n/**\r\n * @private\r\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\r\n    if (!previous) {\r\n        return ctx.lineTo(target.x, target.y);\r\n    }\r\n    if (mode === 'middle') {\r\n        const midpoint = (previous.x + target.x) / 2.0;\r\n        ctx.lineTo(midpoint, previous.y);\r\n        ctx.lineTo(midpoint, target.y);\r\n    } else if (mode === 'after' !== !!flip) {\r\n        ctx.lineTo(previous.x, target.y);\r\n    } else {\r\n        ctx.lineTo(target.x, previous.y);\r\n    }\r\n    ctx.lineTo(target.x, target.y);\r\n}\r\n/**\r\n * @private\r\n */ function _bezierCurveTo(ctx, previous, target, flip) {\r\n    if (!previous) {\r\n        return ctx.lineTo(target.x, target.y);\r\n    }\r\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\r\n}\r\nfunction setRenderOpts(ctx, opts) {\r\n    if (opts.translation) {\r\n        ctx.translate(opts.translation[0], opts.translation[1]);\r\n    }\r\n    if (!isNullOrUndef(opts.rotation)) {\r\n        ctx.rotate(opts.rotation);\r\n    }\r\n    if (opts.color) {\r\n        ctx.fillStyle = opts.color;\r\n    }\r\n    if (opts.textAlign) {\r\n        ctx.textAlign = opts.textAlign;\r\n    }\r\n    if (opts.textBaseline) {\r\n        ctx.textBaseline = opts.textBaseline;\r\n    }\r\n}\r\nfunction decorateText(ctx, x, y, line, opts) {\r\n    if (opts.strikethrough || opts.underline) {\r\n        /**\r\n     * Now that IE11 support has been dropped, we can use more\r\n     * of the TextMetrics object. The actual bounding boxes\r\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\r\n     * can be safely used.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\r\n     */ const metrics = ctx.measureText(line);\r\n        const left = x - metrics.actualBoundingBoxLeft;\r\n        const right = x + metrics.actualBoundingBoxRight;\r\n        const top = y - metrics.actualBoundingBoxAscent;\r\n        const bottom = y + metrics.actualBoundingBoxDescent;\r\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n        ctx.strokeStyle = ctx.fillStyle;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = opts.decorationWidth || 2;\r\n        ctx.moveTo(left, yDecoration);\r\n        ctx.lineTo(right, yDecoration);\r\n        ctx.stroke();\r\n    }\r\n}\r\nfunction drawBackdrop(ctx, opts) {\r\n    const oldColor = ctx.fillStyle;\r\n    ctx.fillStyle = opts.color;\r\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\r\n    ctx.fillStyle = oldColor;\r\n}\r\n/**\r\n * Render text onto the canvas\r\n */ function renderText(ctx, text, x, y, font, opts = {}) {\r\n    const lines = isArray(text) ? text : [\r\n        text\r\n    ];\r\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n    let i, line;\r\n    ctx.save();\r\n    ctx.font = font.string;\r\n    setRenderOpts(ctx, opts);\r\n    for(i = 0; i < lines.length; ++i){\r\n        line = lines[i];\r\n        if (opts.backdrop) {\r\n            drawBackdrop(ctx, opts.backdrop);\r\n        }\r\n        if (stroke) {\r\n            if (opts.strokeColor) {\r\n                ctx.strokeStyle = opts.strokeColor;\r\n            }\r\n            if (!isNullOrUndef(opts.strokeWidth)) {\r\n                ctx.lineWidth = opts.strokeWidth;\r\n            }\r\n            ctx.strokeText(line, x, y, opts.maxWidth);\r\n        }\r\n        ctx.fillText(line, x, y, opts.maxWidth);\r\n        decorateText(ctx, x, y, line, opts);\r\n        y += Number(font.lineHeight);\r\n    }\r\n    ctx.restore();\r\n}\r\n/**\r\n * Add a path of a rectangle with rounded corners to the current sub-path\r\n * @param ctx - Context\r\n * @param rect - Bounding rect\r\n */ function addRoundedRectPath(ctx, rect) {\r\n    const { x , y , w , h , radius  } = rect;\r\n    // top left arc\r\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\r\n    // line from top left to bottom left\r\n    ctx.lineTo(x, y + h - radius.bottomLeft);\r\n    // bottom left arc\r\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n    // line from bottom left to bottom right\r\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n    // bottom right arc\r\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n    // line from bottom right to top right\r\n    ctx.lineTo(x + w, y + radius.topRight);\r\n    // top right arc\r\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n    // line from top right to top left\r\n    ctx.lineTo(x + radius.topLeft, y);\r\n}\r\n\r\n/**\r\n * Creates a Proxy for resolving raw values for options.\r\n * @param scopes - The option scopes to look for values, in resolution order\r\n * @param prefixes - The prefixes for values, in resolution order.\r\n * @param rootScopes - The root option scopes\r\n * @param fallback - Parent scopes fallback\r\n * @param getTarget - callback for getting the target for changed values\r\n * @returns Proxy\r\n * @private\r\n */ function _createResolver(scopes, prefixes = [\r\n    ''\r\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\r\n    const finalRootScopes = rootScopes || scopes;\r\n    if (typeof fallback === 'undefined') {\r\n        fallback = _resolve('_fallback', scopes);\r\n    }\r\n    const cache = {\r\n        [Symbol.toStringTag]: 'Object',\r\n        _cacheable: true,\r\n        _scopes: scopes,\r\n        _rootScopes: finalRootScopes,\r\n        _fallback: fallback,\r\n        _getTarget: getTarget,\r\n        override: (scope)=>_createResolver([\r\n                scope,\r\n                ...scopes\r\n            ], prefixes, finalRootScopes, fallback)\r\n    };\r\n    return new Proxy(cache, {\r\n        /**\r\n     * A trap for the delete operator.\r\n     */ deleteProperty (target, prop) {\r\n            delete target[prop]; // remove from cache\r\n            delete target._keys; // remove cached keys\r\n            delete scopes[0][prop]; // remove from top level scope\r\n            return true;\r\n        },\r\n        /**\r\n     * A trap for getting property values.\r\n     */ get (target, prop) {\r\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\r\n        },\r\n        /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */ getOwnPropertyDescriptor (target, prop) {\r\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n        },\r\n        /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */ getPrototypeOf () {\r\n            return Reflect.getPrototypeOf(scopes[0]);\r\n        },\r\n        /**\r\n     * A trap for the in operator.\r\n     */ has (target, prop) {\r\n            return getKeysFromAllScopes(target).includes(prop);\r\n        },\r\n        /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */ ownKeys (target) {\r\n            return getKeysFromAllScopes(target);\r\n        },\r\n        /**\r\n     * A trap for setting property values.\r\n     */ set (target, prop, value) {\r\n            const storage = target._storage || (target._storage = getTarget());\r\n            target[prop] = storage[prop] = value; // set to top level scope + cache\r\n            delete target._keys; // remove cached keys\r\n            return true;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Returns an Proxy for resolving option values with context.\r\n * @param proxy - The Proxy returned by `_createResolver`\r\n * @param context - Context object for scriptable/indexable options\r\n * @param subProxy - The proxy provided for scriptable options\r\n * @param descriptorDefaults - Defaults for descriptors\r\n * @private\r\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\r\n    const cache = {\r\n        _cacheable: false,\r\n        _proxy: proxy,\r\n        _context: context,\r\n        _subProxy: subProxy,\r\n        _stack: new Set(),\r\n        _descriptors: _descriptors(proxy, descriptorDefaults),\r\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n    };\r\n    return new Proxy(cache, {\r\n        /**\r\n     * A trap for the delete operator.\r\n     */ deleteProperty (target, prop) {\r\n            delete target[prop]; // remove from cache\r\n            delete proxy[prop]; // remove from proxy\r\n            return true;\r\n        },\r\n        /**\r\n     * A trap for getting property values.\r\n     */ get (target, prop, receiver) {\r\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\r\n        },\r\n        /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */ getOwnPropertyDescriptor (target, prop) {\r\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\r\n                enumerable: true,\r\n                configurable: true\r\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n        },\r\n        /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */ getPrototypeOf () {\r\n            return Reflect.getPrototypeOf(proxy);\r\n        },\r\n        /**\r\n     * A trap for the in operator.\r\n     */ has (target, prop) {\r\n            return Reflect.has(proxy, prop);\r\n        },\r\n        /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */ ownKeys () {\r\n            return Reflect.ownKeys(proxy);\r\n        },\r\n        /**\r\n     * A trap for setting property values.\r\n     */ set (target, prop, value) {\r\n            proxy[prop] = value; // set to proxy\r\n            delete target[prop]; // remove from cache\r\n            return true;\r\n        }\r\n    });\r\n}\r\n/**\r\n * @private\r\n */ function _descriptors(proxy, defaults = {\r\n    scriptable: true,\r\n    indexable: true\r\n}) {\r\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\r\n    return {\r\n        allKeys: _allKeys,\r\n        scriptable: _scriptable,\r\n        indexable: _indexable,\r\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\r\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\r\n    };\r\n}\r\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\r\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\r\nfunction _cached(target, prop, resolve) {\r\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\r\n        return target[prop];\r\n    }\r\n    const value = resolve();\r\n    // cache the resolved value\r\n    target[prop] = value;\r\n    return value;\r\n}\r\nfunction _resolveWithContext(target, prop, receiver) {\r\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\r\n    let value = _proxy[prop]; // resolve from proxy\r\n    // resolve with context\r\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n        value = _resolveScriptable(prop, value, target, receiver);\r\n    }\r\n    if (isArray(value) && value.length) {\r\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n    }\r\n    if (needsSubResolver(prop, value)) {\r\n        // if the resolved value is an object, create a sub resolver for it\r\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n    }\r\n    return value;\r\n}\r\nfunction _resolveScriptable(prop, getValue, target, receiver) {\r\n    const { _proxy , _context , _subProxy , _stack  } = target;\r\n    if (_stack.has(prop)) {\r\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\r\n    }\r\n    _stack.add(prop);\r\n    let value = getValue(_context, _subProxy || receiver);\r\n    _stack.delete(prop);\r\n    if (needsSubResolver(prop, value)) {\r\n        // When scriptable option returns an object, create a resolver on that.\r\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n    }\r\n    return value;\r\n}\r\nfunction _resolveArray(prop, value, target, isIndexable) {\r\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\r\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\r\n        return value[_context.index % value.length];\r\n    } else if (isObject(value[0])) {\r\n        // Array of objects, return array or resolvers\r\n        const arr = value;\r\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\r\n        value = [];\r\n        for (const item of arr){\r\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction resolveFallback(fallback, prop, value) {\r\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n}\r\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\r\n    for (const parent of parentScopes){\r\n        const scope = getScope(key, parent);\r\n        if (scope) {\r\n            set.add(scope);\r\n            const fallback = resolveFallback(scope._fallback, key, value);\r\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\r\n                // When we reach the descriptor that defines a new _fallback, return that.\r\n                // The fallback will resume to that new scope.\r\n                return fallback;\r\n            }\r\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\r\n            // Fallback to `false` results to `false`, when falling back to different key.\r\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\r\n            return null;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction createSubResolver(parentScopes, resolver, prop, value) {\r\n    const rootScopes = resolver._rootScopes;\r\n    const fallback = resolveFallback(resolver._fallback, prop, value);\r\n    const allScopes = [\r\n        ...parentScopes,\r\n        ...rootScopes\r\n    ];\r\n    const set = new Set();\r\n    set.add(value);\r\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\r\n    if (key === null) {\r\n        return false;\r\n    }\r\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\r\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\r\n        if (key === null) {\r\n            return false;\r\n        }\r\n    }\r\n    return _createResolver(Array.from(set), [\r\n        ''\r\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\r\n}\r\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\r\n    while(key){\r\n        key = addScopes(set, allScopes, key, fallback, item);\r\n    }\r\n    return key;\r\n}\r\nfunction subGetTarget(resolver, prop, value) {\r\n    const parent = resolver._getTarget();\r\n    if (!(prop in parent)) {\r\n        parent[prop] = {};\r\n    }\r\n    const target = parent[prop];\r\n    if (isArray(target) && isObject(value)) {\r\n        // For array of objects, the object is used to store updated values\r\n        return value;\r\n    }\r\n    return target || {};\r\n}\r\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\r\n    let value;\r\n    for (const prefix of prefixes){\r\n        value = _resolve(readKey(prefix, prop), scopes);\r\n        if (typeof value !== 'undefined') {\r\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\r\n        }\r\n    }\r\n}\r\nfunction _resolve(key, scopes) {\r\n    for (const scope of scopes){\r\n        if (!scope) {\r\n            continue;\r\n        }\r\n        const value = scope[key];\r\n        if (typeof value !== 'undefined') {\r\n            return value;\r\n        }\r\n    }\r\n}\r\nfunction getKeysFromAllScopes(target) {\r\n    let keys = target._keys;\r\n    if (!keys) {\r\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n    }\r\n    return keys;\r\n}\r\nfunction resolveKeysFromAllScopes(scopes) {\r\n    const set = new Set();\r\n    for (const scope of scopes){\r\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\r\n            set.add(key);\r\n        }\r\n    }\r\n    return Array.from(set);\r\n}\r\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\r\n    const { iScale  } = meta;\r\n    const { key ='r'  } = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for(i = 0, ilen = count; i < ilen; ++i){\r\n        index = i + start;\r\n        item = data[index];\r\n        parsed[i] = {\r\n            r: iScale.parse(resolveObjectKey(item, key), index)\r\n        };\r\n    }\r\n    return parsed;\r\n}\r\n\r\nconst EPSILON = Number.EPSILON || 1e-14;\r\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\r\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\r\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\r\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n    // This function must also respect \"skipped\" points\r\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n    const current = middlePoint;\r\n    const next = afterPoint.skip ? middlePoint : afterPoint;\r\n    const d01 = distanceBetweenPoints(current, previous);\r\n    const d12 = distanceBetweenPoints(next, current);\r\n    let s01 = d01 / (d01 + d12);\r\n    let s12 = d12 / (d01 + d12);\r\n    // If all points are the same, s01 & s02 will be inf\r\n    s01 = isNaN(s01) ? 0 : s01;\r\n    s12 = isNaN(s12) ? 0 : s12;\r\n    const fa = t * s01; // scaling factor for triangle Ta\r\n    const fb = t * s12;\r\n    return {\r\n        previous: {\r\n            x: current.x - fa * (next.x - previous.x),\r\n            y: current.y - fa * (next.y - previous.y)\r\n        },\r\n        next: {\r\n            x: current.x + fb * (next.x - previous.x),\r\n            y: current.y + fb * (next.y - previous.y)\r\n        }\r\n    };\r\n}\r\n/**\r\n * Adjust tangents to ensure monotonic properties\r\n */ function monotoneAdjust(points, deltaK, mK) {\r\n    const pointsLen = points.length;\r\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\r\n    let pointAfter = getPoint(points, 0);\r\n    for(let i = 0; i < pointsLen - 1; ++i){\r\n        pointCurrent = pointAfter;\r\n        pointAfter = getPoint(points, i + 1);\r\n        if (!pointCurrent || !pointAfter) {\r\n            continue;\r\n        }\r\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n            mK[i] = mK[i + 1] = 0;\r\n            continue;\r\n        }\r\n        alphaK = mK[i] / deltaK[i];\r\n        betaK = mK[i + 1] / deltaK[i];\r\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n        if (squaredMagnitude <= 9) {\r\n            continue;\r\n        }\r\n        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n        mK[i] = alphaK * tauK * deltaK[i];\r\n        mK[i + 1] = betaK * tauK * deltaK[i];\r\n    }\r\n}\r\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\r\n    const valueAxis = getValueAxis(indexAxis);\r\n    const pointsLen = points.length;\r\n    let delta, pointBefore, pointCurrent;\r\n    let pointAfter = getPoint(points, 0);\r\n    for(let i = 0; i < pointsLen; ++i){\r\n        pointBefore = pointCurrent;\r\n        pointCurrent = pointAfter;\r\n        pointAfter = getPoint(points, i + 1);\r\n        if (!pointCurrent) {\r\n            continue;\r\n        }\r\n        const iPixel = pointCurrent[indexAxis];\r\n        const vPixel = pointCurrent[valueAxis];\r\n        if (pointBefore) {\r\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\r\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\r\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\r\n        }\r\n        if (pointAfter) {\r\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\r\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\r\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\r\n        }\r\n    }\r\n}\r\n/**\r\n * This function calculates Bézier control points in a similar way than |splineCurve|,\r\n * but preserves monotonicity of the provided data and ensures no local extremums are added\r\n * between the dataset discrete points due to the interpolation.\r\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n */ function splineCurveMonotone(points, indexAxis = 'x') {\r\n    const valueAxis = getValueAxis(indexAxis);\r\n    const pointsLen = points.length;\r\n    const deltaK = Array(pointsLen).fill(0);\r\n    const mK = Array(pointsLen);\r\n    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n    let i, pointBefore, pointCurrent;\r\n    let pointAfter = getPoint(points, 0);\r\n    for(i = 0; i < pointsLen; ++i){\r\n        pointBefore = pointCurrent;\r\n        pointCurrent = pointAfter;\r\n        pointAfter = getPoint(points, i + 1);\r\n        if (!pointCurrent) {\r\n            continue;\r\n        }\r\n        if (pointAfter) {\r\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\r\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\r\n        }\r\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\r\n    }\r\n    monotoneAdjust(points, deltaK, mK);\r\n    monotoneCompute(points, mK, indexAxis);\r\n}\r\nfunction capControlPoint(pt, min, max) {\r\n    return Math.max(Math.min(pt, max), min);\r\n}\r\nfunction capBezierPoints(points, area) {\r\n    let i, ilen, point, inArea, inAreaPrev;\r\n    let inAreaNext = _isPointInArea(points[0], area);\r\n    for(i = 0, ilen = points.length; i < ilen; ++i){\r\n        inAreaPrev = inArea;\r\n        inArea = inAreaNext;\r\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n        if (!inArea) {\r\n            continue;\r\n        }\r\n        point = points[i];\r\n        if (inAreaPrev) {\r\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n        }\r\n        if (inAreaNext) {\r\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @private\r\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\r\n    let i, ilen, point, controlPoints;\r\n    // Only consider points that are drawn in case the spanGaps option is used\r\n    if (options.spanGaps) {\r\n        points = points.filter((pt)=>!pt.skip);\r\n    }\r\n    if (options.cubicInterpolationMode === 'monotone') {\r\n        splineCurveMonotone(points, indexAxis);\r\n    } else {\r\n        let prev = loop ? points[points.length - 1] : points[0];\r\n        for(i = 0, ilen = points.length; i < ilen; ++i){\r\n            point = points[i];\r\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\r\n            point.cp1x = controlPoints.previous.x;\r\n            point.cp1y = controlPoints.previous.y;\r\n            point.cp2x = controlPoints.next.x;\r\n            point.cp2y = controlPoints.next.y;\r\n            prev = point;\r\n        }\r\n    }\r\n    if (options.capBezierPoints) {\r\n        capBezierPoints(points, area);\r\n    }\r\n}\r\n\r\nconst atEdge = (t)=>t === 0 || t === 1;\r\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\n/**\r\n * Easing functions adapted from Robert Penner's easing equations.\r\n * @namespace Chart.helpers.easing.effects\r\n * @see http://www.robertpenner.com/easing/\r\n */ const effects = {\r\n    linear: (t)=>t,\r\n    easeInQuad: (t)=>t * t,\r\n    easeOutQuad: (t)=>-t * (t - 2),\r\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\r\n    easeInCubic: (t)=>t * t * t,\r\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\r\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\r\n    easeInQuart: (t)=>t * t * t * t,\r\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\r\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\r\n    easeInQuint: (t)=>t * t * t * t * t,\r\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\r\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\r\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\r\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\r\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\r\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\r\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\r\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\r\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n    easeInOutElastic (t) {\r\n        const s = 0.1125;\r\n        const p = 0.45;\r\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n    },\r\n    easeInBack (t) {\r\n        const s = 1.70158;\r\n        return t * t * ((s + 1) * t - s);\r\n    },\r\n    easeOutBack (t) {\r\n        const s = 1.70158;\r\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n    },\r\n    easeInOutBack (t) {\r\n        let s = 1.70158;\r\n        if ((t /= 0.5) < 1) {\r\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\r\n        }\r\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\r\n    },\r\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\r\n    easeOutBounce (t) {\r\n        const m = 7.5625;\r\n        const d = 2.75;\r\n        if (t < 1 / d) {\r\n            return m * t * t;\r\n        }\r\n        if (t < 2 / d) {\r\n            return m * (t -= 1.5 / d) * t + 0.75;\r\n        }\r\n        if (t < 2.5 / d) {\r\n            return m * (t -= 2.25 / d) * t + 0.9375;\r\n        }\r\n        return m * (t -= 2.625 / d) * t + 0.984375;\r\n    },\r\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\r\n};\r\n\r\n/**\r\n * @private\r\n */ function _pointInLine(p1, p2, t, mode) {\r\n    return {\r\n        x: p1.x + t * (p2.x - p1.x),\r\n        y: p1.y + t * (p2.y - p1.y)\r\n    };\r\n}\r\n/**\r\n * @private\r\n */ function _steppedInterpolation(p1, p2, t, mode) {\r\n    return {\r\n        x: p1.x + t * (p2.x - p1.x),\r\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\r\n    };\r\n}\r\n/**\r\n * @private\r\n */ function _bezierInterpolation(p1, p2, t, mode) {\r\n    const cp1 = {\r\n        x: p1.cp2x,\r\n        y: p1.cp2y\r\n    };\r\n    const cp2 = {\r\n        x: p2.cp1x,\r\n        y: p2.cp1y\r\n    };\r\n    const a = _pointInLine(p1, cp1, t);\r\n    const b = _pointInLine(cp1, cp2, t);\r\n    const c = _pointInLine(cp2, p2, t);\r\n    const d = _pointInLine(a, b, t);\r\n    const e = _pointInLine(b, c, t);\r\n    return _pointInLine(d, e, t);\r\n}\r\n\r\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\r\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\r\n/**\r\n * @alias Chart.helpers.options\r\n * @namespace\r\n */ /**\r\n * Converts the given line height `value` in pixels for a specific font `size`.\r\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n * @param size - The font size (in pixels) used to resolve relative `value`.\r\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n * @since 2.7.0\r\n */ function toLineHeight(value, size) {\r\n    const matches = ('' + value).match(LINE_HEIGHT);\r\n    if (!matches || matches[1] === 'normal') {\r\n        return size * 1.2;\r\n    }\r\n    value = +matches[2];\r\n    switch(matches[3]){\r\n        case 'px':\r\n            return value;\r\n        case '%':\r\n            value /= 100;\r\n            break;\r\n    }\r\n    return size * value;\r\n}\r\nconst numberOrZero = (v)=>+v || 0;\r\nfunction _readValueToProps(value, props) {\r\n    const ret = {};\r\n    const objProps = isObject(props);\r\n    const keys = objProps ? Object.keys(props) : props;\r\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\r\n    for (const prop of keys){\r\n        ret[prop] = numberOrZero(read(prop));\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Converts the given value into a TRBL object.\r\n * @param value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns The padding values (top, right, bottom, left)\r\n * @since 3.0.0\r\n */ function toTRBL(value) {\r\n    return _readValueToProps(value, {\r\n        top: 'y',\r\n        right: 'x',\r\n        bottom: 'y',\r\n        left: 'x'\r\n    });\r\n}\r\n/**\r\n * Converts the given value into a TRBL corners object (similar with css border-radius).\r\n * @param value - If a number, set the value to all TRBL corner components,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\r\n * @since 3.0.0\r\n */ function toTRBLCorners(value) {\r\n    return _readValueToProps(value, [\r\n        'topLeft',\r\n        'topRight',\r\n        'bottomLeft',\r\n        'bottomRight'\r\n    ]);\r\n}\r\n/**\r\n * Converts the given value into a padding object with pre-computed width/height.\r\n * @param value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns The padding values (top, right, bottom, left, width, height)\r\n * @since 2.7.0\r\n */ function toPadding(value) {\r\n    const obj = toTRBL(value);\r\n    obj.width = obj.left + obj.right;\r\n    obj.height = obj.top + obj.bottom;\r\n    return obj;\r\n}\r\n/**\r\n * Parses font options and returns the font object.\r\n * @param options - A object that contains font options to be parsed.\r\n * @param fallback - A object that contains fallback font options.\r\n * @return The font object.\r\n * @private\r\n */ function toFont(options, fallback) {\r\n    options = options || {};\r\n    fallback = fallback || defaults.font;\r\n    let size = valueOrDefault(options.size, fallback.size);\r\n    if (typeof size === 'string') {\r\n        size = parseInt(size, 10);\r\n    }\r\n    let style = valueOrDefault(options.style, fallback.style);\r\n    if (style && !('' + style).match(FONT_STYLE)) {\r\n        console.warn('Invalid font style specified: \"' + style + '\"');\r\n        style = undefined;\r\n    }\r\n    const font = {\r\n        family: valueOrDefault(options.family, fallback.family),\r\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n        size,\r\n        style,\r\n        weight: valueOrDefault(options.weight, fallback.weight),\r\n        string: ''\r\n    };\r\n    font.string = toFontString(font);\r\n    return font;\r\n}\r\n/**\r\n * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n * @param inputs - An array of values, falling back to the last value.\r\n * @param context - If defined and the current value is a function, the value\r\n * is called with `context` as first argument and the result becomes the new input.\r\n * @param index - If defined and the current value is an array, the value\r\n * at `index` become the new input.\r\n * @param info - object to return information about resolution in\r\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\r\n * @since 2.7.0\r\n */ function resolve(inputs, context, index, info) {\r\n    let cacheable = true;\r\n    let i, ilen, value;\r\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\r\n        value = inputs[i];\r\n        if (value === undefined) {\r\n            continue;\r\n        }\r\n        if (context !== undefined && typeof value === 'function') {\r\n            value = value(context);\r\n            cacheable = false;\r\n        }\r\n        if (index !== undefined && isArray(value)) {\r\n            value = value[index % value.length];\r\n            cacheable = false;\r\n        }\r\n        if (value !== undefined) {\r\n            if (info && !cacheable) {\r\n                info.cacheable = false;\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param minmax\r\n * @param grace\r\n * @param beginAtZero\r\n * @private\r\n */ function _addGrace(minmax, grace, beginAtZero) {\r\n    const { min , max  } = minmax;\r\n    const change = toDimension(grace, (max - min) / 2);\r\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\r\n    return {\r\n        min: keepZero(min, -Math.abs(change)),\r\n        max: keepZero(max, change)\r\n    };\r\n}\r\nfunction createContext(parentContext, context) {\r\n    return Object.assign(Object.create(parentContext), context);\r\n}\r\n\r\nconst getRightToLeftAdapter = function(rectX, width) {\r\n    return {\r\n        x (x) {\r\n            return rectX + rectX + width - x;\r\n        },\r\n        setWidth (w) {\r\n            width = w;\r\n        },\r\n        textAlign (align) {\r\n            if (align === 'center') {\r\n                return align;\r\n            }\r\n            return align === 'right' ? 'left' : 'right';\r\n        },\r\n        xPlus (x, value) {\r\n            return x - value;\r\n        },\r\n        leftForLtr (x, itemWidth) {\r\n            return x - itemWidth;\r\n        }\r\n    };\r\n};\r\nconst getLeftToRightAdapter = function() {\r\n    return {\r\n        x (x) {\r\n            return x;\r\n        },\r\n        setWidth (w) {},\r\n        textAlign (align) {\r\n            return align;\r\n        },\r\n        xPlus (x, value) {\r\n            return x + value;\r\n        },\r\n        leftForLtr (x, _itemWidth) {\r\n            return x;\r\n        }\r\n    };\r\n};\r\nfunction getRtlAdapter(rtl, rectX, width) {\r\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n}\r\nfunction overrideTextDirection(ctx, direction) {\r\n    let style, original;\r\n    if (direction === 'ltr' || direction === 'rtl') {\r\n        style = ctx.canvas.style;\r\n        original = [\r\n            style.getPropertyValue('direction'),\r\n            style.getPropertyPriority('direction')\r\n        ];\r\n        style.setProperty('direction', direction, 'important');\r\n        ctx.prevTextDirection = original;\r\n    }\r\n}\r\nfunction restoreTextDirection(ctx, original) {\r\n    if (original !== undefined) {\r\n        delete ctx.prevTextDirection;\r\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n    }\r\n}\r\n\r\nfunction propertyFn(property) {\r\n    if (property === 'angle') {\r\n        return {\r\n            between: _angleBetween,\r\n            compare: _angleDiff,\r\n            normalize: _normalizeAngle\r\n        };\r\n    }\r\n    return {\r\n        between: _isBetween,\r\n        compare: (a, b)=>a - b,\r\n        normalize: (x)=>x\r\n    };\r\n}\r\nfunction normalizeSegment({ start , end , count , loop , style  }) {\r\n    return {\r\n        start: start % count,\r\n        end: end % count,\r\n        loop: loop && (end - start + 1) % count === 0,\r\n        style\r\n    };\r\n}\r\nfunction getSegment(segment, points, bounds) {\r\n    const { property , start: startBound , end: endBound  } = bounds;\r\n    const { between , normalize  } = propertyFn(property);\r\n    const count = points.length;\r\n    let { start , end , loop  } = segment;\r\n    let i, ilen;\r\n    if (loop) {\r\n        start += count;\r\n        end += count;\r\n        for(i = 0, ilen = count; i < ilen; ++i){\r\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n                break;\r\n            }\r\n            start--;\r\n            end--;\r\n        }\r\n        start %= count;\r\n        end %= count;\r\n    }\r\n    if (end < start) {\r\n        end += count;\r\n    }\r\n    return {\r\n        start,\r\n        end,\r\n        loop,\r\n        style: segment.style\r\n    };\r\n}\r\n function _boundSegment(segment, points, bounds) {\r\n    if (!bounds) {\r\n        return [\r\n            segment\r\n        ];\r\n    }\r\n    const { property , start: startBound , end: endBound  } = bounds;\r\n    const count = points.length;\r\n    const { compare , between , normalize  } = propertyFn(property);\r\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\r\n    const result = [];\r\n    let inside = false;\r\n    let subStart = null;\r\n    let value, point, prevValue;\r\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n    const shouldStart = ()=>inside || startIsBefore();\r\n    const shouldStop = ()=>!inside || endIsBefore();\r\n    for(let i = start, prev = start; i <= end; ++i){\r\n        point = points[i % count];\r\n        if (point.skip) {\r\n            continue;\r\n        }\r\n        value = normalize(point[property]);\r\n        if (value === prevValue) {\r\n            continue;\r\n        }\r\n        inside = between(value, startBound, endBound);\r\n        if (subStart === null && shouldStart()) {\r\n            subStart = compare(value, startBound) === 0 ? i : prev;\r\n        }\r\n        if (subStart !== null && shouldStop()) {\r\n            result.push(normalizeSegment({\r\n                start: subStart,\r\n                end: i,\r\n                loop,\r\n                count,\r\n                style\r\n            }));\r\n            subStart = null;\r\n        }\r\n        prev = i;\r\n        prevValue = value;\r\n    }\r\n    if (subStart !== null) {\r\n        result.push(normalizeSegment({\r\n            start: subStart,\r\n            end,\r\n            loop,\r\n            count,\r\n            style\r\n        }));\r\n    }\r\n    return result;\r\n}\r\n function _boundSegments(line, bounds) {\r\n    const result = [];\r\n    const segments = line.segments;\r\n    for(let i = 0; i < segments.length; i++){\r\n        const sub = _boundSegment(segments[i], line.points, bounds);\r\n        if (sub.length) {\r\n            result.push(...sub);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n function findStartAndEnd(points, count, loop, spanGaps) {\r\n    let start = 0;\r\n    let end = count - 1;\r\n    if (loop && !spanGaps) {\r\n        while(start < count && !points[start].skip){\r\n            start++;\r\n        }\r\n    }\r\n    while(start < count && points[start].skip){\r\n        start++;\r\n    }\r\n    start %= count;\r\n    if (loop) {\r\n        end += start;\r\n    }\r\n    while(end > start && points[end % count].skip){\r\n        end--;\r\n    }\r\n    end %= count;\r\n    return {\r\n        start,\r\n        end\r\n    };\r\n}\r\n function solidSegments(points, start, max, loop) {\r\n    const count = points.length;\r\n    const result = [];\r\n    let last = start;\r\n    let prev = points[start];\r\n    let end;\r\n    for(end = start + 1; end <= max; ++end){\r\n        const cur = points[end % count];\r\n        if (cur.skip || cur.stop) {\r\n            if (!prev.skip) {\r\n                loop = false;\r\n                result.push({\r\n                    start: start % count,\r\n                    end: (end - 1) % count,\r\n                    loop\r\n                });\r\n                start = last = cur.stop ? end : null;\r\n            }\r\n        } else {\r\n            last = end;\r\n            if (prev.skip) {\r\n                start = end;\r\n            }\r\n        }\r\n        prev = cur;\r\n    }\r\n    if (last !== null) {\r\n        result.push({\r\n            start: start % count,\r\n            end: last % count,\r\n            loop\r\n        });\r\n    }\r\n    return result;\r\n}\r\n function _computeSegments(line, segmentOptions) {\r\n    const points = line.points;\r\n    const spanGaps = line.options.spanGaps;\r\n    const count = points.length;\r\n    if (!count) {\r\n        return [];\r\n    }\r\n    const loop = !!line._loop;\r\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\r\n    if (spanGaps === true) {\r\n        return splitByStyles(line, [\r\n            {\r\n                start,\r\n                end,\r\n                loop\r\n            }\r\n        ], points, segmentOptions);\r\n    }\r\n    const max = end < start ? end + count : end;\r\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\r\n}\r\n function splitByStyles(line, segments, points, segmentOptions) {\r\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\r\n        return segments;\r\n    }\r\n    return doSplitByStyles(line, segments, points, segmentOptions);\r\n}\r\n function doSplitByStyles(line, segments, points, segmentOptions) {\r\n    const chartContext = line._chart.getContext();\r\n    const baseStyle = readStyle(line.options);\r\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\r\n    const count = points.length;\r\n    const result = [];\r\n    let prevStyle = baseStyle;\r\n    let start = segments[0].start;\r\n    let i = start;\r\n    function addStyle(s, e, l, st) {\r\n        const dir = spanGaps ? -1 : 1;\r\n        if (s === e) {\r\n            return;\r\n        }\r\n        s += count;\r\n        while(points[s % count].skip){\r\n            s -= dir;\r\n        }\r\n        while(points[e % count].skip){\r\n            e += dir;\r\n        }\r\n        if (s % count !== e % count) {\r\n            result.push({\r\n                start: s % count,\r\n                end: e % count,\r\n                loop: l,\r\n                style: st\r\n            });\r\n            prevStyle = st;\r\n            start = e % count;\r\n        }\r\n    }\r\n    for (const segment of segments){\r\n        start = spanGaps ? start : segment.start;\r\n        let prev = points[start % count];\r\n        let style;\r\n        for(i = start + 1; i <= segment.end; i++){\r\n            const pt = points[i % count];\r\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\r\n                type: 'segment',\r\n                p0: prev,\r\n                p1: pt,\r\n                p0DataIndex: (i - 1) % count,\r\n                p1DataIndex: i % count,\r\n                datasetIndex\r\n            })));\r\n            if (styleChanged(style, prevStyle)) {\r\n                addStyle(start, i - 1, segment.loop, prevStyle);\r\n            }\r\n            prev = pt;\r\n            prevStyle = style;\r\n        }\r\n        if (start < i - 1) {\r\n            addStyle(start, i - 1, segment.loop, prevStyle);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction readStyle(options) {\r\n    return {\r\n        backgroundColor: options.backgroundColor,\r\n        borderCapStyle: options.borderCapStyle,\r\n        borderDash: options.borderDash,\r\n        borderDashOffset: options.borderDashOffset,\r\n        borderJoinStyle: options.borderJoinStyle,\r\n        borderWidth: options.borderWidth,\r\n        borderColor: options.borderColor\r\n    };\r\n}\r\nfunction styleChanged(style, prevStyle) {\r\n    if (!prevStyle) {\r\n        return false;\r\n    }\r\n    const cache = [];\r\n    const replacer = function(key, value) {\r\n        if (!isPatternOrGradient(value)) {\r\n            return value;\r\n        }\r\n        if (!cache.includes(value)) {\r\n            cache.push(value);\r\n        }\r\n        return cache.indexOf(value);\r\n    };\r\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\r\n}\r\n\r\nfunction getSizeForArea(scale, chartArea, field) {\r\n    return scale.options.clip ? scale[field] : chartArea[field];\r\n}\r\nfunction getDatasetArea(meta, chartArea) {\r\n    const { xScale , yScale  } = meta;\r\n    if (xScale && yScale) {\r\n        return {\r\n            left: getSizeForArea(xScale, chartArea, 'left'),\r\n            right: getSizeForArea(xScale, chartArea, 'right'),\r\n            top: getSizeForArea(yScale, chartArea, 'top'),\r\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\r\n        };\r\n    }\r\n    return chartArea;\r\n}\r\nfunction getDatasetClipArea(chart, meta) {\r\n    const clip = meta._clip;\r\n    if (clip.disabled) {\r\n        return false;\r\n    }\r\n    const area = getDatasetArea(meta, chart.chartArea);\r\n    return {\r\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\r\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\r\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\r\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\r\n    };\r\n}\r\n\r\nvar helpers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nHALF_PI: HALF_PI,\r\nINFINITY: INFINITY,\r\nPI: PI,\r\nPITAU: PITAU,\r\nQUARTER_PI: QUARTER_PI,\r\nRAD_PER_DEG: RAD_PER_DEG,\r\nTAU: TAU,\r\nTWO_THIRDS_PI: TWO_THIRDS_PI,\r\n_addGrace: _addGrace,\r\n_alignPixel: _alignPixel,\r\n_alignStartEnd: _alignStartEnd,\r\n_angleBetween: _angleBetween,\r\n_angleDiff: _angleDiff,\r\n_arrayUnique: _arrayUnique,\r\n_attachContext: _attachContext,\r\n_bezierCurveTo: _bezierCurveTo,\r\n_bezierInterpolation: _bezierInterpolation,\r\n_boundSegment: _boundSegment,\r\n_boundSegments: _boundSegments,\r\n_capitalize: _capitalize,\r\n_computeSegments: _computeSegments,\r\n_createResolver: _createResolver,\r\n_decimalPlaces: _decimalPlaces,\r\n_deprecated: _deprecated,\r\n_descriptors: _descriptors,\r\n_elementsEqual: _elementsEqual,\r\n_factorize: _factorize,\r\n_filterBetween: _filterBetween,\r\n_getParentNode: _getParentNode,\r\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\r\n_int16Range: _int16Range,\r\n_isBetween: _isBetween,\r\n_isClickEvent: _isClickEvent,\r\n_isDomSupported: _isDomSupported,\r\n_isPointInArea: _isPointInArea,\r\n_limitValue: _limitValue,\r\n_longestText: _longestText,\r\n_lookup: _lookup,\r\n_lookupByKey: _lookupByKey,\r\n_measureText: _measureText,\r\n_merger: _merger,\r\n_mergerIf: _mergerIf,\r\n_normalizeAngle: _normalizeAngle,\r\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\r\n_pointInLine: _pointInLine,\r\n_readValueToProps: _readValueToProps,\r\n_rlookupByKey: _rlookupByKey,\r\n_scaleRangesChanged: _scaleRangesChanged,\r\n_setMinAndMaxByKey: _setMinAndMaxByKey,\r\n_splitKey: _splitKey,\r\n_steppedInterpolation: _steppedInterpolation,\r\n_steppedLineTo: _steppedLineTo,\r\n_textX: _textX,\r\n_toLeftRightCenter: _toLeftRightCenter,\r\n_updateBezierControlPoints: _updateBezierControlPoints,\r\naddRoundedRectPath: addRoundedRectPath,\r\nalmostEquals: almostEquals,\r\nalmostWhole: almostWhole,\r\ncallback: callback,\r\nclearCanvas: clearCanvas,\r\nclipArea: clipArea,\r\nclone: clone$1,\r\ncolor: color,\r\ncreateContext: createContext,\r\ndebounce: debounce,\r\ndefined: defined,\r\ndistanceBetweenPoints: distanceBetweenPoints,\r\ndrawPoint: drawPoint,\r\ndrawPointLegend: drawPointLegend,\r\neach: each,\r\neasingEffects: effects,\r\nfiniteOrDefault: finiteOrDefault,\r\nfontString: fontString,\r\nformatNumber: formatNumber,\r\ngetAngleFromPoint: getAngleFromPoint,\r\ngetDatasetClipArea: getDatasetClipArea,\r\ngetHoverColor: getHoverColor,\r\ngetMaximumSize: getMaximumSize,\r\ngetRelativePosition: getRelativePosition,\r\ngetRtlAdapter: getRtlAdapter,\r\ngetStyle: getStyle,\r\nisArray: isArray,\r\nisFinite: isNumberFinite,\r\nisFunction: isFunction,\r\nisNullOrUndef: isNullOrUndef,\r\nisNumber: isNumber,\r\nisObject: isObject,\r\nisPatternOrGradient: isPatternOrGradient,\r\nlistenArrayEvents: listenArrayEvents,\r\nlog10: log10,\r\nmerge: merge,\r\nmergeIf: mergeIf,\r\nniceNum: niceNum,\r\nnoop: noop,\r\noverrideTextDirection: overrideTextDirection,\r\nreadUsedSize: readUsedSize,\r\nrenderText: renderText,\r\nrequestAnimFrame: requestAnimFrame,\r\nresolve: resolve,\r\nresolveObjectKey: resolveObjectKey,\r\nrestoreTextDirection: restoreTextDirection,\r\nretinaScale: retinaScale,\r\nsetsEqual: setsEqual,\r\nsign: sign,\r\nsplineCurve: splineCurve,\r\nsplineCurveMonotone: splineCurveMonotone,\r\nsupportsEventListenerOptions: supportsEventListenerOptions,\r\nthrottled: throttled,\r\ntoDegrees: toDegrees,\r\ntoDimension: toDimension,\r\ntoFont: toFont,\r\ntoFontString: toFontString,\r\ntoLineHeight: toLineHeight,\r\ntoPadding: toPadding,\r\ntoPercentage: toPercentage,\r\ntoRadians: toRadians,\r\ntoTRBL: toTRBL,\r\ntoTRBLCorners: toTRBLCorners,\r\nuid: uid,\r\nunclipArea: unclipArea,\r\nunlistenArrayEvents: unlistenArrayEvents,\r\nvalueOrDefault: valueOrDefault\r\n});\r\n\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n    const { controller , data , _sorted  } = metaset;\r\n    const iScale = controller._cachedMeta.iScale;\r\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\r\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n        if (!intersect) {\r\n            const result = lookupMethod(data, axis, value);\r\n            if (spanGaps) {\r\n                const { vScale  } = controller._cachedMeta;\r\n                const { _parsed  } = metaset;\r\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\r\n                result.lo -= Math.max(0, distanceToDefinedLo);\r\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\r\n                result.hi += Math.max(0, distanceToDefinedHi);\r\n            }\r\n            return result;\r\n        } else if (controller._sharedOptions) {\r\n            const el = data[0];\r\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n            if (range) {\r\n                const start = lookupMethod(data, axis, value - range);\r\n                const end = lookupMethod(data, axis, value + range);\r\n                return {\r\n                    lo: start.lo,\r\n                    hi: end.hi\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        lo: 0,\r\n        hi: data.length - 1\r\n    };\r\n}\r\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const value = position[axis];\r\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\r\n        const { index , data  } = metasets[i];\r\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\r\n        for(let j = lo; j <= hi; ++j){\r\n            const element = data[j];\r\n            if (!element.skip) {\r\n                handler(element, index, j);\r\n            }\r\n        }\r\n    }\r\n}\r\n function getDistanceMetricForAxis(axis) {\r\n    const useX = axis.indexOf('x') !== -1;\r\n    const useY = axis.indexOf('y') !== -1;\r\n    return function(pt1, pt2) {\r\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n    };\r\n}\r\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n    const items = [];\r\n    if (!includeInvisible && !chart.isPointInArea(position)) {\r\n        return items;\r\n    }\r\n    const evaluationFunc = function(element, datasetIndex, index) {\r\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n            return;\r\n        }\r\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n            items.push({\r\n                element,\r\n                datasetIndex,\r\n                index\r\n            });\r\n        }\r\n    };\r\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n    return items;\r\n}\r\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n    let items = [];\r\n    function evaluationFunc(element, datasetIndex, index) {\r\n        const { startAngle , endAngle  } = element.getProps([\r\n            'startAngle',\r\n            'endAngle'\r\n        ], useFinalPosition);\r\n        const { angle  } = getAngleFromPoint(element, {\r\n            x: position.x,\r\n            y: position.y\r\n        });\r\n        if (_angleBetween(angle, startAngle, endAngle)) {\r\n            items.push({\r\n                element,\r\n                datasetIndex,\r\n                index\r\n            });\r\n        }\r\n    }\r\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n    return items;\r\n}\r\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n    let items = [];\r\n    const distanceMetric = getDistanceMetricForAxis(axis);\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    function evaluationFunc(element, datasetIndex, index) {\r\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n        if (intersect && !inRange) {\r\n            return;\r\n        }\r\n        const center = element.getCenterPoint(useFinalPosition);\r\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n        if (!pointInArea && !inRange) {\r\n            return;\r\n        }\r\n        const distance = distanceMetric(position, center);\r\n        if (distance < minDistance) {\r\n            items = [\r\n                {\r\n                    element,\r\n                    datasetIndex,\r\n                    index\r\n                }\r\n            ];\r\n            minDistance = distance;\r\n        } else if (distance === minDistance) {\r\n            items.push({\r\n                element,\r\n                datasetIndex,\r\n                index\r\n            });\r\n        }\r\n    }\r\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n    return items;\r\n}\r\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n    if (!includeInvisible && !chart.isPointInArea(position)) {\r\n        return [];\r\n    }\r\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n    const items = [];\r\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n    let intersectsItem = false;\r\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\r\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\r\n            items.push({\r\n                element,\r\n                datasetIndex,\r\n                index\r\n            });\r\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n        }\r\n    });\r\n    if (intersect && !intersectsItem) {\r\n        return [];\r\n    }\r\n    return items;\r\n}\r\n var Interaction = {\r\n    evaluateInteractionItems,\r\n    modes: {\r\n index (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            const axis = options.axis || 'x';\r\n            const includeInvisible = options.includeInvisible || false;\r\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n            const elements = [];\r\n            if (!items.length) {\r\n                return [];\r\n            }\r\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\r\n                const index = items[0].index;\r\n                const element = meta.data[index];\r\n                if (element && !element.skip) {\r\n                    elements.push({\r\n                        element,\r\n                        datasetIndex: meta.index,\r\n                        index\r\n                    });\r\n                }\r\n            });\r\n            return elements;\r\n        },\r\n dataset (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            const axis = options.axis || 'xy';\r\n            const includeInvisible = options.includeInvisible || false;\r\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n            if (items.length > 0) {\r\n                const datasetIndex = items[0].datasetIndex;\r\n                const data = chart.getDatasetMeta(datasetIndex).data;\r\n                items = [];\r\n                for(let i = 0; i < data.length; ++i){\r\n                    items.push({\r\n                        element: data[i],\r\n                        datasetIndex,\r\n                        index: i\r\n                    });\r\n                }\r\n            }\r\n            return items;\r\n        },\r\n point (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            const axis = options.axis || 'xy';\r\n            const includeInvisible = options.includeInvisible || false;\r\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n        },\r\n nearest (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            const axis = options.axis || 'xy';\r\n            const includeInvisible = options.includeInvisible || false;\r\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n        },\r\n x (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n        },\r\n y (chart, e, options, useFinalPosition) {\r\n            const position = getRelativePosition(e, chart);\r\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n        }\r\n    }\r\n};\r\n\r\nconst STATIC_POSITIONS = [\r\n    'left',\r\n    'top',\r\n    'right',\r\n    'bottom'\r\n];\r\nfunction filterByPosition(array, position) {\r\n    return array.filter((v)=>v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n    return array.sort((a, b)=>{\r\n        const v0 = reverse ? b : a;\r\n        const v1 = reverse ? a : b;\r\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\r\n    });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n    const layoutBoxes = [];\r\n    let i, ilen, box, pos, stack, stackWeight;\r\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\r\n        box = boxes[i];\r\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\r\n        layoutBoxes.push({\r\n            index: i,\r\n            box,\r\n            pos,\r\n            horizontal: box.isHorizontal(),\r\n            weight: box.weight,\r\n            stack: stack && pos + stack,\r\n            stackWeight\r\n        });\r\n    }\r\n    return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n    const stacks = {};\r\n    for (const wrap of layouts){\r\n        const { stack , pos , stackWeight  } = wrap;\r\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n            continue;\r\n        }\r\n        const _stack = stacks[stack] || (stacks[stack] = {\r\n            count: 0,\r\n            placed: 0,\r\n            weight: 0,\r\n            size: 0\r\n        });\r\n        _stack.count++;\r\n        _stack.weight += stackWeight;\r\n    }\r\n    return stacks;\r\n}\r\n function setLayoutDims(layouts, params) {\r\n    const stacks = buildStacks(layouts);\r\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\r\n    let i, ilen, layout;\r\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\r\n        layout = layouts[i];\r\n        const { fullSize  } = layout.box;\r\n        const stack = stacks[layout.stack];\r\n        const factor = stack && layout.stackWeight / stack.weight;\r\n        if (layout.horizontal) {\r\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n            layout.height = hBoxMaxHeight;\r\n        } else {\r\n            layout.width = vBoxMaxWidth;\r\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n        }\r\n    }\r\n    return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n    const layoutBoxes = wrapBoxes(boxes);\r\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\r\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n    return {\r\n        fullSize,\r\n        leftAndTop: left.concat(top),\r\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n        vertical: left.concat(right).concat(centerVertical),\r\n        horizontal: top.concat(bottom).concat(centerHorizontal)\r\n    };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n    const { pos , box  } = layout;\r\n    const maxPadding = chartArea.maxPadding;\r\n    if (!isObject(pos)) {\r\n        if (layout.size) {\r\n            chartArea[pos] -= layout.size;\r\n        }\r\n        const stack = stacks[layout.stack] || {\r\n            size: 0,\r\n            count: 1\r\n        };\r\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n        layout.size = stack.size / stack.count;\r\n        chartArea[pos] += layout.size;\r\n    }\r\n    if (box.getPadding) {\r\n        updateMaxPadding(maxPadding, box.getPadding());\r\n    }\r\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n    const widthChanged = newWidth !== chartArea.w;\r\n    const heightChanged = newHeight !== chartArea.h;\r\n    chartArea.w = newWidth;\r\n    chartArea.h = newHeight;\r\n    return layout.horizontal ? {\r\n        same: widthChanged,\r\n        other: heightChanged\r\n    } : {\r\n        same: heightChanged,\r\n        other: widthChanged\r\n    };\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n    const maxPadding = chartArea.maxPadding;\r\n    function updatePos(pos) {\r\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n        chartArea[pos] += change;\r\n        return change;\r\n    }\r\n    chartArea.y += updatePos('top');\r\n    chartArea.x += updatePos('left');\r\n    updatePos('right');\r\n    updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n    const maxPadding = chartArea.maxPadding;\r\n    function marginForPositions(positions) {\r\n        const margin = {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0\r\n        };\r\n        positions.forEach((pos)=>{\r\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n        });\r\n        return margin;\r\n    }\r\n    return horizontal ? marginForPositions([\r\n        'left',\r\n        'right'\r\n    ]) : marginForPositions([\r\n        'top',\r\n        'bottom'\r\n    ]);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n    const refitBoxes = [];\r\n    let i, ilen, layout, box, refit, changed;\r\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\r\n        layout = boxes[i];\r\n        box = layout.box;\r\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\r\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\r\n        refit |= same && refitBoxes.length;\r\n        changed = changed || other;\r\n        if (!box.fullSize) {\r\n            refitBoxes.push(layout);\r\n        }\r\n    }\r\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n    box.top = top;\r\n    box.left = left;\r\n    box.right = left + width;\r\n    box.bottom = top + height;\r\n    box.width = width;\r\n    box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n    const userPadding = params.padding;\r\n    let { x , y  } = chartArea;\r\n    for (const layout of boxes){\r\n        const box = layout.box;\r\n        const stack = stacks[layout.stack] || {\r\n            count: 1,\r\n            placed: 0,\r\n            weight: 1\r\n        };\r\n        const weight = layout.stackWeight / stack.weight || 1;\r\n        if (layout.horizontal) {\r\n            const width = chartArea.w * weight;\r\n            const height = stack.size || box.height;\r\n            if (defined(stack.start)) {\r\n                y = stack.start;\r\n            }\r\n            if (box.fullSize) {\r\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n            } else {\r\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n            }\r\n            stack.start = y;\r\n            stack.placed += width;\r\n            y = box.bottom;\r\n        } else {\r\n            const height = chartArea.h * weight;\r\n            const width = stack.size || box.width;\r\n            if (defined(stack.start)) {\r\n                x = stack.start;\r\n            }\r\n            if (box.fullSize) {\r\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n            } else {\r\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n            }\r\n            stack.start = x;\r\n            stack.placed += height;\r\n            x = box.right;\r\n        }\r\n    }\r\n    chartArea.x = x;\r\n    chartArea.y = y;\r\n}\r\nvar layouts = {\r\n addBox (chart, item) {\r\n        if (!chart.boxes) {\r\n            chart.boxes = [];\r\n        }\r\n        item.fullSize = item.fullSize || false;\r\n        item.position = item.position || 'top';\r\n        item.weight = item.weight || 0;\r\n        item._layers = item._layers || function() {\r\n            return [\r\n                {\r\n                    z: 0,\r\n                    draw (chartArea) {\r\n                        item.draw(chartArea);\r\n                    }\r\n                }\r\n            ];\r\n        };\r\n        chart.boxes.push(item);\r\n    },\r\n removeBox (chart, layoutItem) {\r\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n        if (index !== -1) {\r\n            chart.boxes.splice(index, 1);\r\n        }\r\n    },\r\n configure (chart, item, options) {\r\n        item.fullSize = options.fullSize;\r\n        item.position = options.position;\r\n        item.weight = options.weight;\r\n    },\r\n update (chart, width, height, minPadding) {\r\n        if (!chart) {\r\n            return;\r\n        }\r\n        const padding = toPadding(chart.options.layout.padding);\r\n        const availableWidth = Math.max(width - padding.width, 0);\r\n        const availableHeight = Math.max(height - padding.height, 0);\r\n        const boxes = buildLayoutBoxes(chart.boxes);\r\n        const verticalBoxes = boxes.vertical;\r\n        const horizontalBoxes = boxes.horizontal;\r\n        each(chart.boxes, (box)=>{\r\n            if (typeof box.beforeLayout === 'function') {\r\n                box.beforeLayout();\r\n            }\r\n        });\r\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n        const params = Object.freeze({\r\n            outerWidth: width,\r\n            outerHeight: height,\r\n            padding,\r\n            availableWidth,\r\n            availableHeight,\r\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n            hBoxMaxHeight: availableHeight / 2\r\n        });\r\n        const maxPadding = Object.assign({}, padding);\r\n        updateMaxPadding(maxPadding, toPadding(minPadding));\r\n        const chartArea = Object.assign({\r\n            maxPadding,\r\n            w: availableWidth,\r\n            h: availableHeight,\r\n            x: padding.left,\r\n            y: padding.top\r\n        }, padding);\r\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n        }\r\n        handleMaxPadding(chartArea);\r\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n        chartArea.x += chartArea.w;\r\n        chartArea.y += chartArea.h;\r\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n        chart.chartArea = {\r\n            left: chartArea.left,\r\n            top: chartArea.top,\r\n            right: chartArea.left + chartArea.w,\r\n            bottom: chartArea.top + chartArea.h,\r\n            height: chartArea.h,\r\n            width: chartArea.w\r\n        };\r\n        each(boxes.chartArea, (layout)=>{\r\n            const box = layout.box;\r\n            Object.assign(box, chart.chartArea);\r\n            box.update(chartArea.w, chartArea.h, {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nclass BasePlatform {\r\n acquireContext(canvas, aspectRatio) {}\r\n releaseContext(context) {\r\n        return false;\r\n    }\r\n addEventListener(chart, type, listener) {}\r\n removeEventListener(chart, type, listener) {}\r\n getDevicePixelRatio() {\r\n        return 1;\r\n    }\r\n getMaximumSize(element, width, height, aspectRatio) {\r\n        width = Math.max(0, width || element.width);\r\n        height = height || element.height;\r\n        return {\r\n            width,\r\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n        };\r\n    }\r\n isAttached(canvas) {\r\n        return true;\r\n    }\r\n updateConfig(config) {\r\n    }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n    acquireContext(item) {\r\n        return item && item.getContext && item.getContext('2d') || null;\r\n    }\r\n    updateConfig(config) {\r\n        config.options.animation = false;\r\n    }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\n const EVENT_TYPES = {\r\n    touchstart: 'mousedown',\r\n    touchmove: 'mousemove',\r\n    touchend: 'mouseup',\r\n    pointerenter: 'mouseenter',\r\n    pointerdown: 'mousedown',\r\n    pointermove: 'mousemove',\r\n    pointerup: 'mouseup',\r\n    pointerleave: 'mouseout',\r\n    pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = (value)=>value === null || value === '';\r\n function initCanvas(canvas, aspectRatio) {\r\n    const style = canvas.style;\r\n    const renderHeight = canvas.getAttribute('height');\r\n    const renderWidth = canvas.getAttribute('width');\r\n    canvas[EXPANDO_KEY] = {\r\n        initial: {\r\n            height: renderHeight,\r\n            width: renderWidth,\r\n            style: {\r\n                display: style.display,\r\n                height: style.height,\r\n                width: style.width\r\n            }\r\n        }\r\n    };\r\n    style.display = style.display || 'block';\r\n    style.boxSizing = style.boxSizing || 'border-box';\r\n    if (isNullOrEmpty(renderWidth)) {\r\n        const displayWidth = readUsedSize(canvas, 'width');\r\n        if (displayWidth !== undefined) {\r\n            canvas.width = displayWidth;\r\n        }\r\n    }\r\n    if (isNullOrEmpty(renderHeight)) {\r\n        if (canvas.style.height === '') {\r\n            canvas.height = canvas.width / (aspectRatio || 2);\r\n        } else {\r\n            const displayHeight = readUsedSize(canvas, 'height');\r\n            if (displayHeight !== undefined) {\r\n                canvas.height = displayHeight;\r\n            }\r\n        }\r\n    }\r\n    return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {\r\n    passive: true\r\n} : false;\r\nfunction addListener(node, type, listener) {\r\n    if (node) {\r\n        node.addEventListener(type, listener, eventListenerOptions);\r\n    }\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n    if (chart && chart.canvas) {\r\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n    }\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n    const type = EVENT_TYPES[event.type] || event.type;\r\n    const { x , y  } = getRelativePosition(event, chart);\r\n    return {\r\n        type,\r\n        chart,\r\n        native: event,\r\n        x: x !== undefined ? x : null,\r\n        y: y !== undefined ? y : null\r\n    };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n    for (const node of nodeList){\r\n        if (node === canvas || node.contains(canvas)) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n    const canvas = chart.canvas;\r\n    const observer = new MutationObserver((entries)=>{\r\n        let trigger = false;\r\n        for (const entry of entries){\r\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n        }\r\n        if (trigger) {\r\n            listener();\r\n        }\r\n    });\r\n    observer.observe(document, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n    return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n    const canvas = chart.canvas;\r\n    const observer = new MutationObserver((entries)=>{\r\n        let trigger = false;\r\n        for (const entry of entries){\r\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n        }\r\n        if (trigger) {\r\n            listener();\r\n        }\r\n    });\r\n    observer.observe(document, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n    return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n    const dpr = window.devicePixelRatio;\r\n    if (dpr === oldDevicePixelRatio) {\r\n        return;\r\n    }\r\n    oldDevicePixelRatio = dpr;\r\n    drpListeningCharts.forEach((resize, chart)=>{\r\n        if (chart.currentDevicePixelRatio !== dpr) {\r\n            resize();\r\n        }\r\n    });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n    if (!drpListeningCharts.size) {\r\n        window.addEventListener('resize', onWindowResize);\r\n    }\r\n    drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n    drpListeningCharts.delete(chart);\r\n    if (!drpListeningCharts.size) {\r\n        window.removeEventListener('resize', onWindowResize);\r\n    }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n    const canvas = chart.canvas;\r\n    const container = canvas && _getParentNode(canvas);\r\n    if (!container) {\r\n        return;\r\n    }\r\n    const resize = throttled((width, height)=>{\r\n        const w = container.clientWidth;\r\n        listener(width, height);\r\n        if (w < container.clientWidth) {\r\n            listener();\r\n        }\r\n    }, window);\r\n    const observer = new ResizeObserver((entries)=>{\r\n        const entry = entries[0];\r\n        const width = entry.contentRect.width;\r\n        const height = entry.contentRect.height;\r\n        if (width === 0 && height === 0) {\r\n            return;\r\n        }\r\n        resize(width, height);\r\n    });\r\n    observer.observe(container);\r\n    listenDevicePixelRatioChanges(chart, resize);\r\n    return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n    if (observer) {\r\n        observer.disconnect();\r\n    }\r\n    if (type === 'resize') {\r\n        unlistenDevicePixelRatioChanges(chart);\r\n    }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n    const canvas = chart.canvas;\r\n    const proxy = throttled((event)=>{\r\n        if (chart.ctx !== null) {\r\n            listener(fromNativeEvent(event, chart));\r\n        }\r\n    }, chart);\r\n    addListener(canvas, type, proxy);\r\n    return proxy;\r\n}\r\n class DomPlatform extends BasePlatform {\r\n acquireContext(canvas, aspectRatio) {\r\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n        if (context && context.canvas === canvas) {\r\n            initCanvas(canvas, aspectRatio);\r\n            return context;\r\n        }\r\n        return null;\r\n    }\r\n releaseContext(context) {\r\n        const canvas = context.canvas;\r\n        if (!canvas[EXPANDO_KEY]) {\r\n            return false;\r\n        }\r\n        const initial = canvas[EXPANDO_KEY].initial;\r\n        [\r\n            'height',\r\n            'width'\r\n        ].forEach((prop)=>{\r\n            const value = initial[prop];\r\n            if (isNullOrUndef(value)) {\r\n                canvas.removeAttribute(prop);\r\n            } else {\r\n                canvas.setAttribute(prop, value);\r\n            }\r\n        });\r\n        const style = initial.style || {};\r\n        Object.keys(style).forEach((key)=>{\r\n            canvas.style[key] = style[key];\r\n        });\r\n        canvas.width = canvas.width;\r\n        delete canvas[EXPANDO_KEY];\r\n        return true;\r\n    }\r\n addEventListener(chart, type, listener) {\r\n        this.removeEventListener(chart, type);\r\n        const proxies = chart.$proxies || (chart.$proxies = {});\r\n        const handlers = {\r\n            attach: createAttachObserver,\r\n            detach: createDetachObserver,\r\n            resize: createResizeObserver\r\n        };\r\n        const handler = handlers[type] || createProxyAndListen;\r\n        proxies[type] = handler(chart, type, listener);\r\n    }\r\n removeEventListener(chart, type) {\r\n        const proxies = chart.$proxies || (chart.$proxies = {});\r\n        const proxy = proxies[type];\r\n        if (!proxy) {\r\n            return;\r\n        }\r\n        const handlers = {\r\n            attach: releaseObserver,\r\n            detach: releaseObserver,\r\n            resize: releaseObserver\r\n        };\r\n        const handler = handlers[type] || removeListener;\r\n        handler(chart, type, proxy);\r\n        proxies[type] = undefined;\r\n    }\r\n    getDevicePixelRatio() {\r\n        return window.devicePixelRatio;\r\n    }\r\n getMaximumSize(canvas, width, height, aspectRatio) {\r\n        return getMaximumSize(canvas, width, height, aspectRatio);\r\n    }\r\n isAttached(canvas) {\r\n        const container = canvas && _getParentNode(canvas);\r\n        return !!(container && container.isConnected);\r\n    }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\r\n        return BasicPlatform;\r\n    }\r\n    return DomPlatform;\r\n}\r\n\r\nvar platforms = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBasePlatform: BasePlatform,\r\nBasicPlatform: BasicPlatform,\r\nDomPlatform: DomPlatform,\r\n_detectPlatform: _detectPlatform\r\n});\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n    boolean (from, to, factor) {\r\n        return factor > 0.5 ? to : from;\r\n    },\r\n color (from, to, factor) {\r\n        const c0 = color(from || transparent);\r\n        const c1 = c0.valid && color(to || transparent);\r\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\r\n    },\r\n    number (from, to, factor) {\r\n        return from + (to - from) * factor;\r\n    }\r\n};\r\nclass Animation {\r\n    constructor(cfg, target, prop, to){\r\n        const currentValue = target[prop];\r\n        to = resolve([\r\n            cfg.to,\r\n            to,\r\n            currentValue,\r\n            cfg.from\r\n        ]);\r\n        const from = resolve([\r\n            cfg.from,\r\n            currentValue,\r\n            to\r\n        ]);\r\n        this._active = true;\r\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n        this._easing = effects[cfg.easing] || effects.linear;\r\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n        this._duration = this._total = Math.floor(cfg.duration);\r\n        this._loop = !!cfg.loop;\r\n        this._target = target;\r\n        this._prop = prop;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._promises = undefined;\r\n    }\r\n    active() {\r\n        return this._active;\r\n    }\r\n    update(cfg, to, date) {\r\n        if (this._active) {\r\n            this._notify(false);\r\n            const currentValue = this._target[this._prop];\r\n            const elapsed = date - this._start;\r\n            const remain = this._duration - elapsed;\r\n            this._start = date;\r\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n            this._total += elapsed;\r\n            this._loop = !!cfg.loop;\r\n            this._to = resolve([\r\n                cfg.to,\r\n                to,\r\n                currentValue,\r\n                cfg.from\r\n            ]);\r\n            this._from = resolve([\r\n                cfg.from,\r\n                currentValue,\r\n                to\r\n            ]);\r\n        }\r\n    }\r\n    cancel() {\r\n        if (this._active) {\r\n            this.tick(Date.now());\r\n            this._active = false;\r\n            this._notify(false);\r\n        }\r\n    }\r\n    tick(date) {\r\n        const elapsed = date - this._start;\r\n        const duration = this._duration;\r\n        const prop = this._prop;\r\n        const from = this._from;\r\n        const loop = this._loop;\r\n        const to = this._to;\r\n        let factor;\r\n        this._active = from !== to && (loop || elapsed < duration);\r\n        if (!this._active) {\r\n            this._target[prop] = to;\r\n            this._notify(true);\r\n            return;\r\n        }\r\n        if (elapsed < 0) {\r\n            this._target[prop] = from;\r\n            return;\r\n        }\r\n        factor = elapsed / duration % 2;\r\n        factor = loop && factor > 1 ? 2 - factor : factor;\r\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n        this._target[prop] = this._fn(from, to, factor);\r\n    }\r\n    wait() {\r\n        const promises = this._promises || (this._promises = []);\r\n        return new Promise((res, rej)=>{\r\n            promises.push({\r\n                res,\r\n                rej\r\n            });\r\n        });\r\n    }\r\n    _notify(resolved) {\r\n        const method = resolved ? 'res' : 'rej';\r\n        const promises = this._promises || [];\r\n        for(let i = 0; i < promises.length; i++){\r\n            promises[i][method]();\r\n        }\r\n    }\r\n}\r\n\r\nclass Animations {\r\n    constructor(chart, config){\r\n        this._chart = chart;\r\n        this._properties = new Map();\r\n        this.configure(config);\r\n    }\r\n    configure(config) {\r\n        if (!isObject(config)) {\r\n            return;\r\n        }\r\n        const animationOptions = Object.keys(defaults.animation);\r\n        const animatedProps = this._properties;\r\n        Object.getOwnPropertyNames(config).forEach((key)=>{\r\n            const cfg = config[key];\r\n            if (!isObject(cfg)) {\r\n                return;\r\n            }\r\n            const resolved = {};\r\n            for (const option of animationOptions){\r\n                resolved[option] = cfg[option];\r\n            }\r\n            (isArray(cfg.properties) && cfg.properties || [\r\n                key\r\n            ]).forEach((prop)=>{\r\n                if (prop === key || !animatedProps.has(prop)) {\r\n                    animatedProps.set(prop, resolved);\r\n                }\r\n            });\r\n        });\r\n    }\r\n _animateOptions(target, values) {\r\n        const newOptions = values.options;\r\n        const options = resolveTargetOptions(target, newOptions);\r\n        if (!options) {\r\n            return [];\r\n        }\r\n        const animations = this._createAnimations(options, newOptions);\r\n        if (newOptions.$shared) {\r\n            awaitAll(target.options.$animations, newOptions).then(()=>{\r\n                target.options = newOptions;\r\n            }, ()=>{\r\n            });\r\n        }\r\n        return animations;\r\n    }\r\n _createAnimations(target, values) {\r\n        const animatedProps = this._properties;\r\n        const animations = [];\r\n        const running = target.$animations || (target.$animations = {});\r\n        const props = Object.keys(values);\r\n        const date = Date.now();\r\n        let i;\r\n        for(i = props.length - 1; i >= 0; --i){\r\n            const prop = props[i];\r\n            if (prop.charAt(0) === '$') {\r\n                continue;\r\n            }\r\n            if (prop === 'options') {\r\n                animations.push(...this._animateOptions(target, values));\r\n                continue;\r\n            }\r\n            const value = values[prop];\r\n            let animation = running[prop];\r\n            const cfg = animatedProps.get(prop);\r\n            if (animation) {\r\n                if (cfg && animation.active()) {\r\n                    animation.update(cfg, value, date);\r\n                    continue;\r\n                } else {\r\n                    animation.cancel();\r\n                }\r\n            }\r\n            if (!cfg || !cfg.duration) {\r\n                target[prop] = value;\r\n                continue;\r\n            }\r\n            running[prop] = animation = new Animation(cfg, target, prop, value);\r\n            animations.push(animation);\r\n        }\r\n        return animations;\r\n    }\r\n update(target, values) {\r\n        if (this._properties.size === 0) {\r\n            Object.assign(target, values);\r\n            return;\r\n        }\r\n        const animations = this._createAnimations(target, values);\r\n        if (animations.length) {\r\n            animator.add(this._chart, animations);\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n    const running = [];\r\n    const keys = Object.keys(properties);\r\n    for(let i = 0; i < keys.length; i++){\r\n        const anim = animations[keys[i]];\r\n        if (anim && anim.active()) {\r\n            running.push(anim.wait());\r\n        }\r\n    }\r\n    return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n    if (!newOptions) {\r\n        return;\r\n    }\r\n    let options = target.options;\r\n    if (!options) {\r\n        target.options = newOptions;\r\n        return;\r\n    }\r\n    if (options.$shared) {\r\n        target.options = options = Object.assign({}, options, {\r\n            $shared: false,\r\n            $animations: {}\r\n        });\r\n    }\r\n    return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n    const opts = scale && scale.options || {};\r\n    const reverse = opts.reverse;\r\n    const min = opts.min === undefined ? allowedOverflow : 0;\r\n    const max = opts.max === undefined ? allowedOverflow : 0;\r\n    return {\r\n        start: reverse ? max : min,\r\n        end: reverse ? min : max\r\n    };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n    if (allowedOverflow === false) {\r\n        return false;\r\n    }\r\n    const x = scaleClip(xScale, allowedOverflow);\r\n    const y = scaleClip(yScale, allowedOverflow);\r\n    return {\r\n        top: y.end,\r\n        right: x.end,\r\n        bottom: y.start,\r\n        left: x.start\r\n    };\r\n}\r\nfunction toClip(value) {\r\n    let t, r, b, l;\r\n    if (isObject(value)) {\r\n        t = value.top;\r\n        r = value.right;\r\n        b = value.bottom;\r\n        l = value.left;\r\n    } else {\r\n        t = r = b = l = value;\r\n    }\r\n    return {\r\n        top: t,\r\n        right: r,\r\n        bottom: b,\r\n        left: l,\r\n        disabled: value === false\r\n    };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n    const keys = [];\r\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n    let i, ilen;\r\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\r\n        keys.push(metasets[i].index);\r\n    }\r\n    return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n    const keys = stack.keys;\r\n    const singleMode = options.mode === 'single';\r\n    let i, ilen, datasetIndex, otherValue;\r\n    if (value === null) {\r\n        return;\r\n    }\r\n    let found = false;\r\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\r\n        datasetIndex = +keys[i];\r\n        if (datasetIndex === dsIndex) {\r\n            found = true;\r\n            if (options.all) {\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        otherValue = stack.values[datasetIndex];\r\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\r\n            value += otherValue;\r\n        }\r\n    }\r\n    if (!found && !options.all) {\r\n        return 0;\r\n    }\r\n    return value;\r\n}\r\nfunction convertObjectDataToArray(data, meta) {\r\n    const { iScale , vScale  } = meta;\r\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\r\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\r\n    const keys = Object.keys(data);\r\n    const adata = new Array(keys.length);\r\n    let i, ilen, key;\r\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\r\n        key = keys[i];\r\n        adata[i] = {\r\n            [iAxisKey]: key,\r\n            [vAxisKey]: data[key]\r\n        };\r\n    }\r\n    return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n    const stacked = scale && scale.options.stacked;\r\n    return stacked || stacked === undefined && meta.stack !== undefined;\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\r\n    return {\r\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n    };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n    return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\r\n        const value = stack[meta.index];\r\n        if (positive && value > 0 || !positive && value < 0) {\r\n            return meta.index;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n    const { chart , _cachedMeta: meta  } = controller;\r\n    const stacks = chart._stacks || (chart._stacks = {});\r\n    const { iScale , vScale , index: datasetIndex  } = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const key = getStackKey(iScale, vScale, meta);\r\n    const ilen = parsed.length;\r\n    let stack;\r\n    for(let i = 0; i < ilen; ++i){\r\n        const item = parsed[i];\r\n        const { [iAxis]: index , [vAxis]: value  } = item;\r\n        const itemStacks = item._stacks || (item._stacks = {});\r\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n        stack[datasetIndex] = value;\r\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n        const visualValues = stack._visualValues || (stack._visualValues = {});\r\n        visualValues[datasetIndex] = value;\r\n    }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n    const scales = chart.scales;\r\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n    return createContext(parent, {\r\n        active: false,\r\n        dataset: undefined,\r\n        datasetIndex: index,\r\n        index,\r\n        mode: 'default',\r\n        type: 'dataset'\r\n    });\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n    return createContext(parent, {\r\n        active: false,\r\n        dataIndex: index,\r\n        parsed: undefined,\r\n        raw: undefined,\r\n        element,\r\n        index,\r\n        mode: 'default',\r\n        type: 'data'\r\n    });\r\n}\r\nfunction clearStacks(meta, items) {\r\n    const datasetIndex = meta.controller.index;\r\n    const axis = meta.vScale && meta.vScale.axis;\r\n    if (!axis) {\r\n        return;\r\n    }\r\n    items = items || meta._parsed;\r\n    for (const parsed of items){\r\n        const stacks = parsed._stacks;\r\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n            return;\r\n        }\r\n        delete stacks[axis][datasetIndex];\r\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\r\n            delete stacks[axis]._visualValues[datasetIndex];\r\n        }\r\n    }\r\n}\r\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\r\n        keys: getSortedDatasetIndices(chart, true),\r\n        values: null\r\n    };\r\nclass DatasetController {\r\n static defaults = {};\r\n static datasetElementType = null;\r\n static dataElementType = null;\r\n constructor(chart, datasetIndex){\r\n        this.chart = chart;\r\n        this._ctx = chart.ctx;\r\n        this.index = datasetIndex;\r\n        this._cachedDataOpts = {};\r\n        this._cachedMeta = this.getMeta();\r\n        this._type = this._cachedMeta.type;\r\n        this.options = undefined;\r\n         this._parsing = false;\r\n        this._data = undefined;\r\n        this._objectData = undefined;\r\n        this._sharedOptions = undefined;\r\n        this._drawStart = undefined;\r\n        this._drawCount = undefined;\r\n        this.enableOptionSharing = false;\r\n        this.supportsDecimation = false;\r\n        this.$context = undefined;\r\n        this._syncList = [];\r\n        this.datasetElementType = new.target.datasetElementType;\r\n        this.dataElementType = new.target.dataElementType;\r\n        this.initialize();\r\n    }\r\n    initialize() {\r\n        const meta = this._cachedMeta;\r\n        this.configure();\r\n        this.linkScales();\r\n        meta._stacked = isStacked(meta.vScale, meta);\r\n        this.addElements();\r\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\r\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\r\n        }\r\n    }\r\n    updateIndex(datasetIndex) {\r\n        if (this.index !== datasetIndex) {\r\n            clearStacks(this._cachedMeta);\r\n        }\r\n        this.index = datasetIndex;\r\n    }\r\n    linkScales() {\r\n        const chart = this.chart;\r\n        const meta = this._cachedMeta;\r\n        const dataset = this.getDataset();\r\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\r\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n        const indexAxis = meta.indexAxis;\r\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n        meta.xScale = this.getScaleForId(xid);\r\n        meta.yScale = this.getScaleForId(yid);\r\n        meta.rScale = this.getScaleForId(rid);\r\n        meta.iScale = this.getScaleForId(iid);\r\n        meta.vScale = this.getScaleForId(vid);\r\n    }\r\n    getDataset() {\r\n        return this.chart.data.datasets[this.index];\r\n    }\r\n    getMeta() {\r\n        return this.chart.getDatasetMeta(this.index);\r\n    }\r\n getScaleForId(scaleID) {\r\n        return this.chart.scales[scaleID];\r\n    }\r\n _getOtherScale(scale) {\r\n        const meta = this._cachedMeta;\r\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\r\n    }\r\n    reset() {\r\n        this._update('reset');\r\n    }\r\n _destroy() {\r\n        const meta = this._cachedMeta;\r\n        if (this._data) {\r\n            unlistenArrayEvents(this._data, this);\r\n        }\r\n        if (meta._stacked) {\r\n            clearStacks(meta);\r\n        }\r\n    }\r\n _dataCheck() {\r\n        const dataset = this.getDataset();\r\n        const data = dataset.data || (dataset.data = []);\r\n        const _data = this._data;\r\n        if (isObject(data)) {\r\n            const meta = this._cachedMeta;\r\n            this._data = convertObjectDataToArray(data, meta);\r\n        } else if (_data !== data) {\r\n            if (_data) {\r\n                unlistenArrayEvents(_data, this);\r\n                const meta = this._cachedMeta;\r\n                clearStacks(meta);\r\n                meta._parsed = [];\r\n            }\r\n            if (data && Object.isExtensible(data)) {\r\n                listenArrayEvents(data, this);\r\n            }\r\n            this._syncList = [];\r\n            this._data = data;\r\n        }\r\n    }\r\n    addElements() {\r\n        const meta = this._cachedMeta;\r\n        this._dataCheck();\r\n        if (this.datasetElementType) {\r\n            meta.dataset = new this.datasetElementType();\r\n        }\r\n    }\r\n    buildOrUpdateElements(resetNewElements) {\r\n        const meta = this._cachedMeta;\r\n        const dataset = this.getDataset();\r\n        let stackChanged = false;\r\n        this._dataCheck();\r\n        const oldStacked = meta._stacked;\r\n        meta._stacked = isStacked(meta.vScale, meta);\r\n        if (meta.stack !== dataset.stack) {\r\n            stackChanged = true;\r\n            clearStacks(meta);\r\n            meta.stack = dataset.stack;\r\n        }\r\n        this._resyncElements(resetNewElements);\r\n        if (stackChanged || oldStacked !== meta._stacked) {\r\n            updateStacks(this, meta._parsed);\r\n            meta._stacked = isStacked(meta.vScale, meta);\r\n        }\r\n    }\r\n configure() {\r\n        const config = this.chart.config;\r\n        const scopeKeys = config.datasetScopeKeys(this._type);\r\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n        this.options = config.createResolver(scopes, this.getContext());\r\n        this._parsing = this.options.parsing;\r\n        this._cachedDataOpts = {};\r\n    }\r\n parse(start, count) {\r\n        const { _cachedMeta: meta , _data: data  } = this;\r\n        const { iScale , _stacked  } = meta;\r\n        const iAxis = iScale.axis;\r\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n        let prev = start > 0 && meta._parsed[start - 1];\r\n        let i, cur, parsed;\r\n        if (this._parsing === false) {\r\n            meta._parsed = data;\r\n            meta._sorted = true;\r\n            parsed = data;\r\n        } else {\r\n            if (isArray(data[start])) {\r\n                parsed = this.parseArrayData(meta, data, start, count);\r\n            } else if (isObject(data[start])) {\r\n                parsed = this.parseObjectData(meta, data, start, count);\r\n            } else {\r\n                parsed = this.parsePrimitiveData(meta, data, start, count);\r\n            }\r\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\r\n            for(i = 0; i < count; ++i){\r\n                meta._parsed[i + start] = cur = parsed[i];\r\n                if (sorted) {\r\n                    if (isNotInOrderComparedToPrev()) {\r\n                        sorted = false;\r\n                    }\r\n                    prev = cur;\r\n                }\r\n            }\r\n            meta._sorted = sorted;\r\n        }\r\n        if (_stacked) {\r\n            updateStacks(this, parsed);\r\n        }\r\n    }\r\n parsePrimitiveData(meta, data, start, count) {\r\n        const { iScale , vScale  } = meta;\r\n        const iAxis = iScale.axis;\r\n        const vAxis = vScale.axis;\r\n        const labels = iScale.getLabels();\r\n        const singleScale = iScale === vScale;\r\n        const parsed = new Array(count);\r\n        let i, ilen, index;\r\n        for(i = 0, ilen = count; i < ilen; ++i){\r\n            index = i + start;\r\n            parsed[i] = {\r\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n                [vAxis]: vScale.parse(data[index], index)\r\n            };\r\n        }\r\n        return parsed;\r\n    }\r\n parseArrayData(meta, data, start, count) {\r\n        const { xScale , yScale  } = meta;\r\n        const parsed = new Array(count);\r\n        let i, ilen, index, item;\r\n        for(i = 0, ilen = count; i < ilen; ++i){\r\n            index = i + start;\r\n            item = data[index];\r\n            parsed[i] = {\r\n                x: xScale.parse(item[0], index),\r\n                y: yScale.parse(item[1], index)\r\n            };\r\n        }\r\n        return parsed;\r\n    }\r\n parseObjectData(meta, data, start, count) {\r\n        const { xScale , yScale  } = meta;\r\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\r\n        const parsed = new Array(count);\r\n        let i, ilen, index, item;\r\n        for(i = 0, ilen = count; i < ilen; ++i){\r\n            index = i + start;\r\n            item = data[index];\r\n            parsed[i] = {\r\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n            };\r\n        }\r\n        return parsed;\r\n    }\r\n getParsed(index) {\r\n        return this._cachedMeta._parsed[index];\r\n    }\r\n getDataElement(index) {\r\n        return this._cachedMeta.data[index];\r\n    }\r\n applyStack(scale, parsed, mode) {\r\n        const chart = this.chart;\r\n        const meta = this._cachedMeta;\r\n        const value = parsed[scale.axis];\r\n        const stack = {\r\n            keys: getSortedDatasetIndices(chart, true),\r\n            values: parsed._stacks[scale.axis]._visualValues\r\n        };\r\n        return applyStack(stack, value, meta.index, {\r\n            mode\r\n        });\r\n    }\r\n updateRangeFromParsed(range, scale, parsed, stack) {\r\n        const parsedValue = parsed[scale.axis];\r\n        let value = parsedValue === null ? NaN : parsedValue;\r\n        const values = stack && parsed._stacks[scale.axis];\r\n        if (stack && values) {\r\n            stack.values = values;\r\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n        }\r\n        range.min = Math.min(range.min, value);\r\n        range.max = Math.max(range.max, value);\r\n    }\r\n getMinMax(scale, canStack) {\r\n        const meta = this._cachedMeta;\r\n        const _parsed = meta._parsed;\r\n        const sorted = meta._sorted && scale === meta.iScale;\r\n        const ilen = _parsed.length;\r\n        const otherScale = this._getOtherScale(scale);\r\n        const stack = createStack(canStack, meta, this.chart);\r\n        const range = {\r\n            min: Number.POSITIVE_INFINITY,\r\n            max: Number.NEGATIVE_INFINITY\r\n        };\r\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\r\n        let i, parsed;\r\n        function _skip() {\r\n            parsed = _parsed[i];\r\n            const otherValue = parsed[otherScale.axis];\r\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n        }\r\n        for(i = 0; i < ilen; ++i){\r\n            if (_skip()) {\r\n                continue;\r\n            }\r\n            this.updateRangeFromParsed(range, scale, parsed, stack);\r\n            if (sorted) {\r\n                break;\r\n            }\r\n        }\r\n        if (sorted) {\r\n            for(i = ilen - 1; i >= 0; --i){\r\n                if (_skip()) {\r\n                    continue;\r\n                }\r\n                this.updateRangeFromParsed(range, scale, parsed, stack);\r\n                break;\r\n            }\r\n        }\r\n        return range;\r\n    }\r\n    getAllParsedValues(scale) {\r\n        const parsed = this._cachedMeta._parsed;\r\n        const values = [];\r\n        let i, ilen, value;\r\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\r\n            value = parsed[i][scale.axis];\r\n            if (isNumberFinite(value)) {\r\n                values.push(value);\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n getMaxOverflow() {\r\n        return false;\r\n    }\r\n getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const iScale = meta.iScale;\r\n        const vScale = meta.vScale;\r\n        const parsed = this.getParsed(index);\r\n        return {\r\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n        };\r\n    }\r\n _update(mode) {\r\n        const meta = this._cachedMeta;\r\n        this.update(mode || 'default');\r\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n    }\r\n update(mode) {}\r\n    draw() {\r\n        const ctx = this._ctx;\r\n        const chart = this.chart;\r\n        const meta = this._cachedMeta;\r\n        const elements = meta.data || [];\r\n        const area = chart.chartArea;\r\n        const active = [];\r\n        const start = this._drawStart || 0;\r\n        const count = this._drawCount || elements.length - start;\r\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n        let i;\r\n        if (meta.dataset) {\r\n            meta.dataset.draw(ctx, area, start, count);\r\n        }\r\n        for(i = start; i < start + count; ++i){\r\n            const element = elements[i];\r\n            if (element.hidden) {\r\n                continue;\r\n            }\r\n            if (element.active && drawActiveElementsOnTop) {\r\n                active.push(element);\r\n            } else {\r\n                element.draw(ctx, area);\r\n            }\r\n        }\r\n        for(i = 0; i < active.length; ++i){\r\n            active[i].draw(ctx, area);\r\n        }\r\n    }\r\n getStyle(index, active) {\r\n        const mode = active ? 'active' : 'default';\r\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\r\n    }\r\n getContext(index, active, mode) {\r\n        const dataset = this.getDataset();\r\n        let context;\r\n        if (index >= 0 && index < this._cachedMeta.data.length) {\r\n            const element = this._cachedMeta.data[index];\r\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\r\n            context.parsed = this.getParsed(index);\r\n            context.raw = dataset.data[index];\r\n            context.index = context.dataIndex = index;\r\n        } else {\r\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n            context.dataset = dataset;\r\n            context.index = context.datasetIndex = this.index;\r\n        }\r\n        context.active = !!active;\r\n        context.mode = mode;\r\n        return context;\r\n    }\r\n resolveDatasetElementOptions(mode) {\r\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n    }\r\n resolveDataElementOptions(index, mode) {\r\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n    }\r\n _resolveElementOptions(elementType, mode = 'default', index) {\r\n        const active = mode === 'active';\r\n        const cache = this._cachedDataOpts;\r\n        const cacheKey = elementType + '-' + mode;\r\n        const cached = cache[cacheKey];\r\n        const sharing = this.enableOptionSharing && defined(index);\r\n        if (cached) {\r\n            return cloneIfNotShared(cached, sharing);\r\n        }\r\n        const config = this.chart.config;\r\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n        const prefixes = active ? [\r\n            `${elementType}Hover`,\r\n            'hover',\r\n            elementType,\r\n            ''\r\n        ] : [\r\n            elementType,\r\n            ''\r\n        ];\r\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n        const names = Object.keys(defaults.elements[elementType]);\r\n        const context = ()=>this.getContext(index, active, mode);\r\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n        if (values.$shared) {\r\n            values.$shared = sharing;\r\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n        }\r\n        return values;\r\n    }\r\n _resolveAnimations(index, transition, active) {\r\n        const chart = this.chart;\r\n        const cache = this._cachedDataOpts;\r\n        const cacheKey = `animation-${transition}`;\r\n        const cached = cache[cacheKey];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        let options;\r\n        if (chart.options.animation !== false) {\r\n            const config = this.chart.config;\r\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n        }\r\n        const animations = new Animations(chart, options && options.animations);\r\n        if (options && options._cacheable) {\r\n            cache[cacheKey] = Object.freeze(animations);\r\n        }\r\n        return animations;\r\n    }\r\n getSharedOptions(options) {\r\n        if (!options.$shared) {\r\n            return;\r\n        }\r\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n    }\r\n includeOptions(mode, sharedOptions) {\r\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n    }\r\n _getSharedOptions(start, mode) {\r\n        const firstOpts = this.resolveDataElementOptions(start, mode);\r\n        const previouslySharedOptions = this._sharedOptions;\r\n        const sharedOptions = this.getSharedOptions(firstOpts);\r\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\r\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n        return {\r\n            sharedOptions,\r\n            includeOptions\r\n        };\r\n    }\r\n updateElement(element, index, properties, mode) {\r\n        if (isDirectUpdateMode(mode)) {\r\n            Object.assign(element, properties);\r\n        } else {\r\n            this._resolveAnimations(index, mode).update(element, properties);\r\n        }\r\n    }\r\n updateSharedOptions(sharedOptions, mode, newOptions) {\r\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n        }\r\n    }\r\n _setStyle(element, index, mode, active) {\r\n        element.active = active;\r\n        const options = this.getStyle(index, active);\r\n        this._resolveAnimations(index, mode, active).update(element, {\r\n            options: !active && this.getSharedOptions(options) || options\r\n        });\r\n    }\r\n    removeHoverStyle(element, datasetIndex, index) {\r\n        this._setStyle(element, index, 'active', false);\r\n    }\r\n    setHoverStyle(element, datasetIndex, index) {\r\n        this._setStyle(element, index, 'active', true);\r\n    }\r\n _removeDatasetHoverStyle() {\r\n        const element = this._cachedMeta.dataset;\r\n        if (element) {\r\n            this._setStyle(element, undefined, 'active', false);\r\n        }\r\n    }\r\n _setDatasetHoverStyle() {\r\n        const element = this._cachedMeta.dataset;\r\n        if (element) {\r\n            this._setStyle(element, undefined, 'active', true);\r\n        }\r\n    }\r\n _resyncElements(resetNewElements) {\r\n        const data = this._data;\r\n        const elements = this._cachedMeta.data;\r\n        for (const [method, arg1, arg2] of this._syncList){\r\n            this[method](arg1, arg2);\r\n        }\r\n        this._syncList = [];\r\n        const numMeta = elements.length;\r\n        const numData = data.length;\r\n        const count = Math.min(numData, numMeta);\r\n        if (count) {\r\n            this.parse(0, count);\r\n        }\r\n        if (numData > numMeta) {\r\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n        } else if (numData < numMeta) {\r\n            this._removeElements(numData, numMeta - numData);\r\n        }\r\n    }\r\n _insertElements(start, count, resetNewElements = true) {\r\n        const meta = this._cachedMeta;\r\n        const data = meta.data;\r\n        const end = start + count;\r\n        let i;\r\n        const move = (arr)=>{\r\n            arr.length += count;\r\n            for(i = arr.length - 1; i >= end; i--){\r\n                arr[i] = arr[i - count];\r\n            }\r\n        };\r\n        move(data);\r\n        for(i = start; i < end; ++i){\r\n            data[i] = new this.dataElementType();\r\n        }\r\n        if (this._parsing) {\r\n            move(meta._parsed);\r\n        }\r\n        this.parse(start, count);\r\n        if (resetNewElements) {\r\n            this.updateElements(data, start, count, 'reset');\r\n        }\r\n    }\r\n    updateElements(element, start, count, mode) {}\r\n _removeElements(start, count) {\r\n        const meta = this._cachedMeta;\r\n        if (this._parsing) {\r\n            const removed = meta._parsed.splice(start, count);\r\n            if (meta._stacked) {\r\n                clearStacks(meta, removed);\r\n            }\r\n        }\r\n        meta.data.splice(start, count);\r\n    }\r\n _sync(args) {\r\n        if (this._parsing) {\r\n            this._syncList.push(args);\r\n        } else {\r\n            const [method, arg1, arg2] = args;\r\n            this[method](arg1, arg2);\r\n        }\r\n        this.chart._dataChanges.push([\r\n            this.index,\r\n            ...args\r\n        ]);\r\n    }\r\n    _onDataPush() {\r\n        const count = arguments.length;\r\n        this._sync([\r\n            '_insertElements',\r\n            this.getDataset().data.length - count,\r\n            count\r\n        ]);\r\n    }\r\n    _onDataPop() {\r\n        this._sync([\r\n            '_removeElements',\r\n            this._cachedMeta.data.length - 1,\r\n            1\r\n        ]);\r\n    }\r\n    _onDataShift() {\r\n        this._sync([\r\n            '_removeElements',\r\n            0,\r\n            1\r\n        ]);\r\n    }\r\n    _onDataSplice(start, count) {\r\n        if (count) {\r\n            this._sync([\r\n                '_removeElements',\r\n                start,\r\n                count\r\n            ]);\r\n        }\r\n        const newCount = arguments.length - 2;\r\n        if (newCount) {\r\n            this._sync([\r\n                '_insertElements',\r\n                start,\r\n                newCount\r\n            ]);\r\n        }\r\n    }\r\n    _onDataUnshift() {\r\n        this._sync([\r\n            '_insertElements',\r\n            0,\r\n            arguments.length\r\n        ]);\r\n    }\r\n}\r\n\r\nclass Element {\r\n    static defaults = {};\r\n    static defaultRoutes = undefined;\r\n    x;\r\n    y;\r\n    active = false;\r\n    options;\r\n    $animations;\r\n    tooltipPosition(useFinalPosition) {\r\n        const { x , y  } = this.getProps([\r\n            'x',\r\n            'y'\r\n        ], useFinalPosition);\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n    hasValue() {\r\n        return isNumber(this.x) && isNumber(this.y);\r\n    }\r\n    getProps(props, final) {\r\n        const anims = this.$animations;\r\n        if (!final || !anims) {\r\n            // let's not create an object, if not needed\r\n            return this;\r\n        }\r\n        const ret = {};\r\n        props.forEach((prop)=>{\r\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n        });\r\n        return ret;\r\n    }\r\n}\r\n\r\nfunction autoSkip(scale, ticks) {\r\n    const tickOpts = scale.options.ticks;\r\n    const determinedMaxTicks = determineMaxTicks(scale);\r\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\r\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n    const numMajorIndices = majorIndices.length;\r\n    const first = majorIndices[0];\r\n    const last = majorIndices[numMajorIndices - 1];\r\n    const newTicks = [];\r\n    if (numMajorIndices > ticksLimit) {\r\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n        return newTicks;\r\n    }\r\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n    if (numMajorIndices > 0) {\r\n        let i, ilen;\r\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\r\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n        }\r\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n        return newTicks;\r\n    }\r\n    skip(ticks, newTicks, spacing);\r\n    return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n    const offset = scale.options.offset;\r\n    const tickLength = scale._tickSize();\r\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n    const maxChart = scale._maxLength / tickLength;\r\n    return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n    const spacing = ticks.length / ticksLimit;\r\n    if (!evenMajorSpacing) {\r\n        return Math.max(spacing, 1);\r\n    }\r\n    const factors = _factorize(evenMajorSpacing);\r\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\r\n        const factor = factors[i];\r\n        if (factor > spacing) {\r\n            return factor;\r\n        }\r\n    }\r\n    return Math.max(spacing, 1);\r\n}\r\n function getMajorIndices(ticks) {\r\n    const result = [];\r\n    let i, ilen;\r\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\r\n        if (ticks[i].major) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n    let count = 0;\r\n    let next = majorIndices[0];\r\n    let i;\r\n    spacing = Math.ceil(spacing);\r\n    for(i = 0; i < ticks.length; i++){\r\n        if (i === next) {\r\n            newTicks.push(ticks[i]);\r\n            count++;\r\n            next = majorIndices[count * spacing];\r\n        }\r\n    }\r\n}\r\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n    const start = valueOrDefault(majorStart, 0);\r\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n    let count = 0;\r\n    let length, i, next;\r\n    spacing = Math.ceil(spacing);\r\n    if (majorEnd) {\r\n        length = majorEnd - majorStart;\r\n        spacing = length / Math.floor(length / spacing);\r\n    }\r\n    next = start;\r\n    while(next < 0){\r\n        count++;\r\n        next = Math.round(start + count * spacing);\r\n    }\r\n    for(i = Math.max(start, 0); i < end; i++){\r\n        if (i === next) {\r\n            newTicks.push(ticks[i]);\r\n            count++;\r\n            next = Math.round(start + count * spacing);\r\n        }\r\n    }\r\n}\r\n function getEvenSpacing(arr) {\r\n    const len = arr.length;\r\n    let i, diff;\r\n    if (len < 2) {\r\n        return false;\r\n    }\r\n    for(diff = arr[0], i = 1; i < len; ++i){\r\n        if (arr[i] - arr[i - 1] !== diff) {\r\n            return false;\r\n        }\r\n    }\r\n    return diff;\r\n}\r\n\r\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\r\n function sample(arr, numItems) {\r\n    const result = [];\r\n    const increment = arr.length / numItems;\r\n    const len = arr.length;\r\n    let i = 0;\r\n    for(; i < len; i += increment){\r\n        result.push(arr[Math.floor(i)]);\r\n    }\r\n    return result;\r\n}\r\n function getPixelForGridLine(scale, index, offsetGridLines) {\r\n    const length = scale.ticks.length;\r\n    const validIndex = Math.min(index, length - 1);\r\n    const start = scale._startPixel;\r\n    const end = scale._endPixel;\r\n    const epsilon = 1e-6;\r\n    let lineValue = scale.getPixelForTick(validIndex);\r\n    let offset;\r\n    if (offsetGridLines) {\r\n        if (length === 1) {\r\n            offset = Math.max(lineValue - start, end - lineValue);\r\n        } else if (index === 0) {\r\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n        } else {\r\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n        }\r\n        lineValue += validIndex < index ? offset : -offset;\r\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n            return;\r\n        }\r\n    }\r\n    return lineValue;\r\n}\r\n function garbageCollect(caches, length) {\r\n    each(caches, (cache)=>{\r\n        const gc = cache.gc;\r\n        const gcLen = gc.length / 2;\r\n        let i;\r\n        if (gcLen > length) {\r\n            for(i = 0; i < gcLen; ++i){\r\n                delete cache.data[gc[i]];\r\n            }\r\n            gc.splice(0, gcLen);\r\n        }\r\n    });\r\n}\r\n function getTickMarkLength(options) {\r\n    return options.drawTicks ? options.tickLength : 0;\r\n}\r\n function getTitleHeight(options, fallback) {\r\n    if (!options.display) {\r\n        return 0;\r\n    }\r\n    const font = toFont(options.font, fallback);\r\n    const padding = toPadding(options.padding);\r\n    const lines = isArray(options.text) ? options.text.length : 1;\r\n    return lines * font.lineHeight + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n    return createContext(parent, {\r\n        scale,\r\n        type: 'scale'\r\n    });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n    return createContext(parent, {\r\n        tick,\r\n        index,\r\n        type: 'tick'\r\n    });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n     let ret = _toLeftRightCenter(align);\r\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\r\n        ret = reverseAlign(ret);\r\n    }\r\n    return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n    const { top , left , bottom , right , chart  } = scale;\r\n    const { chartArea , scales  } = chart;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    const height = bottom - top;\r\n    const width = right - left;\r\n    if (scale.isHorizontal()) {\r\n        titleX = _alignStartEnd(align, left, right);\r\n        if (isObject(position)) {\r\n            const positionAxisID = Object.keys(position)[0];\r\n            const value = position[positionAxisID];\r\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n        } else if (position === 'center') {\r\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n        } else {\r\n            titleY = offsetFromEdge(scale, position, offset);\r\n        }\r\n        maxWidth = right - left;\r\n    } else {\r\n        if (isObject(position)) {\r\n            const positionAxisID = Object.keys(position)[0];\r\n            const value = position[positionAxisID];\r\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n        } else if (position === 'center') {\r\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n        } else {\r\n            titleX = offsetFromEdge(scale, position, offset);\r\n        }\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n    }\r\n    return {\r\n        titleX,\r\n        titleY,\r\n        maxWidth,\r\n        rotation\r\n    };\r\n}\r\nclass Scale extends Element {\r\n    constructor(cfg){\r\n        super();\r\n         this.id = cfg.id;\r\n         this.type = cfg.type;\r\n         this.options = undefined;\r\n         this.ctx = cfg.ctx;\r\n         this.chart = cfg.chart;\r\n         this.top = undefined;\r\n         this.bottom = undefined;\r\n         this.left = undefined;\r\n         this.right = undefined;\r\n         this.width = undefined;\r\n         this.height = undefined;\r\n        this._margins = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n         this.maxWidth = undefined;\r\n         this.maxHeight = undefined;\r\n         this.paddingTop = undefined;\r\n         this.paddingBottom = undefined;\r\n         this.paddingLeft = undefined;\r\n         this.paddingRight = undefined;\r\n         this.axis = undefined;\r\n         this.labelRotation = undefined;\r\n        this.min = undefined;\r\n        this.max = undefined;\r\n        this._range = undefined;\r\n         this.ticks = [];\r\n         this._gridLineItems = null;\r\n         this._labelItems = null;\r\n         this._labelSizes = null;\r\n        this._length = 0;\r\n        this._maxLength = 0;\r\n        this._longestTextCache = {};\r\n         this._startPixel = undefined;\r\n         this._endPixel = undefined;\r\n        this._reversePixels = false;\r\n        this._userMax = undefined;\r\n        this._userMin = undefined;\r\n        this._suggestedMax = undefined;\r\n        this._suggestedMin = undefined;\r\n        this._ticksLength = 0;\r\n        this._borderValue = 0;\r\n        this._cache = {};\r\n        this._dataLimitsCached = false;\r\n        this.$context = undefined;\r\n    }\r\n init(options) {\r\n        this.options = options.setContext(this.getContext());\r\n        this.axis = options.axis;\r\n        this._userMin = this.parse(options.min);\r\n        this._userMax = this.parse(options.max);\r\n        this._suggestedMin = this.parse(options.suggestedMin);\r\n        this._suggestedMax = this.parse(options.suggestedMax);\r\n    }\r\n parse(raw, index) {\r\n        return raw;\r\n    }\r\n getUserBounds() {\r\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\r\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n        return {\r\n            min: finiteOrDefault(_userMin, _suggestedMin),\r\n            max: finiteOrDefault(_userMax, _suggestedMax),\r\n            minDefined: isNumberFinite(_userMin),\r\n            maxDefined: isNumberFinite(_userMax)\r\n        };\r\n    }\r\n getMinMax(canStack) {\r\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\r\n        let range;\r\n        if (minDefined && maxDefined) {\r\n            return {\r\n                min,\r\n                max\r\n            };\r\n        }\r\n        const metas = this.getMatchingVisibleMetas();\r\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\r\n            range = metas[i].controller.getMinMax(this, canStack);\r\n            if (!minDefined) {\r\n                min = Math.min(min, range.min);\r\n            }\r\n            if (!maxDefined) {\r\n                max = Math.max(max, range.max);\r\n            }\r\n        }\r\n        min = maxDefined && min > max ? max : min;\r\n        max = minDefined && min > max ? min : max;\r\n        return {\r\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n        };\r\n    }\r\n getPadding() {\r\n        return {\r\n            left: this.paddingLeft || 0,\r\n            top: this.paddingTop || 0,\r\n            right: this.paddingRight || 0,\r\n            bottom: this.paddingBottom || 0\r\n        };\r\n    }\r\n getTicks() {\r\n        return this.ticks;\r\n    }\r\n getLabels() {\r\n        const data = this.chart.data;\r\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n    }\r\n getLabelItems(chartArea = this.chart.chartArea) {\r\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n        return items;\r\n    }\r\n    beforeLayout() {\r\n        this._cache = {};\r\n        this._dataLimitsCached = false;\r\n    }\r\n    beforeUpdate() {\r\n        callback(this.options.beforeUpdate, [\r\n            this\r\n        ]);\r\n    }\r\n update(maxWidth, maxHeight, margins) {\r\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\r\n        const sampleSize = tickOpts.sampleSize;\r\n        this.beforeUpdate();\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n        this._margins = margins = Object.assign({\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        }, margins);\r\n        this.ticks = null;\r\n        this._labelSizes = null;\r\n        this._gridLineItems = null;\r\n        this._labelItems = null;\r\n        this.beforeSetDimensions();\r\n        this.setDimensions();\r\n        this.afterSetDimensions();\r\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\r\n        if (!this._dataLimitsCached) {\r\n            this.beforeDataLimits();\r\n            this.determineDataLimits();\r\n            this.afterDataLimits();\r\n            this._range = _addGrace(this, grace, beginAtZero);\r\n            this._dataLimitsCached = true;\r\n        }\r\n        this.beforeBuildTicks();\r\n        this.ticks = this.buildTicks() || [];\r\n        this.afterBuildTicks();\r\n        const samplingEnabled = sampleSize < this.ticks.length;\r\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n        this.configure();\r\n        this.beforeCalculateLabelRotation();\r\n        this.calculateLabelRotation();\r\n        this.afterCalculateLabelRotation();\r\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n            this.ticks = autoSkip(this, this.ticks);\r\n            this._labelSizes = null;\r\n            this.afterAutoSkip();\r\n        }\r\n        if (samplingEnabled) {\r\n            this._convertTicksToLabels(this.ticks);\r\n        }\r\n        this.beforeFit();\r\n        this.fit();\r\n        this.afterFit();\r\n        this.afterUpdate();\r\n    }\r\n configure() {\r\n        let reversePixels = this.options.reverse;\r\n        let startPixel, endPixel;\r\n        if (this.isHorizontal()) {\r\n            startPixel = this.left;\r\n            endPixel = this.right;\r\n        } else {\r\n            startPixel = this.top;\r\n            endPixel = this.bottom;\r\n            reversePixels = !reversePixels;\r\n        }\r\n        this._startPixel = startPixel;\r\n        this._endPixel = endPixel;\r\n        this._reversePixels = reversePixels;\r\n        this._length = endPixel - startPixel;\r\n        this._alignToPixels = this.options.alignToPixels;\r\n    }\r\n    afterUpdate() {\r\n        callback(this.options.afterUpdate, [\r\n            this\r\n        ]);\r\n    }\r\n    beforeSetDimensions() {\r\n        callback(this.options.beforeSetDimensions, [\r\n            this\r\n        ]);\r\n    }\r\n    setDimensions() {\r\n        if (this.isHorizontal()) {\r\n            this.width = this.maxWidth;\r\n            this.left = 0;\r\n            this.right = this.width;\r\n        } else {\r\n            this.height = this.maxHeight;\r\n            this.top = 0;\r\n            this.bottom = this.height;\r\n        }\r\n        this.paddingLeft = 0;\r\n        this.paddingTop = 0;\r\n        this.paddingRight = 0;\r\n        this.paddingBottom = 0;\r\n    }\r\n    afterSetDimensions() {\r\n        callback(this.options.afterSetDimensions, [\r\n            this\r\n        ]);\r\n    }\r\n    _callHooks(name) {\r\n        this.chart.notifyPlugins(name, this.getContext());\r\n        callback(this.options[name], [\r\n            this\r\n        ]);\r\n    }\r\n    beforeDataLimits() {\r\n        this._callHooks('beforeDataLimits');\r\n    }\r\n    determineDataLimits() {}\r\n    afterDataLimits() {\r\n        this._callHooks('afterDataLimits');\r\n    }\r\n    beforeBuildTicks() {\r\n        this._callHooks('beforeBuildTicks');\r\n    }\r\n buildTicks() {\r\n        return [];\r\n    }\r\n    afterBuildTicks() {\r\n        this._callHooks('afterBuildTicks');\r\n    }\r\n    beforeTickToLabelConversion() {\r\n        callback(this.options.beforeTickToLabelConversion, [\r\n            this\r\n        ]);\r\n    }\r\n generateTickLabels(ticks) {\r\n        const tickOpts = this.options.ticks;\r\n        let i, ilen, tick;\r\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\r\n            tick = ticks[i];\r\n            tick.label = callback(tickOpts.callback, [\r\n                tick.value,\r\n                i,\r\n                ticks\r\n            ], this);\r\n        }\r\n    }\r\n    afterTickToLabelConversion() {\r\n        callback(this.options.afterTickToLabelConversion, [\r\n            this\r\n        ]);\r\n    }\r\n    beforeCalculateLabelRotation() {\r\n        callback(this.options.beforeCalculateLabelRotation, [\r\n            this\r\n        ]);\r\n    }\r\n    calculateLabelRotation() {\r\n        const options = this.options;\r\n        const tickOpts = options.ticks;\r\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\r\n        const minRotation = tickOpts.minRotation || 0;\r\n        const maxRotation = tickOpts.maxRotation;\r\n        let labelRotation = minRotation;\r\n        let tickWidth, maxHeight, maxLabelDiagonal;\r\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n            this.labelRotation = minRotation;\r\n            return;\r\n        }\r\n        const labelSizes = this._getLabelSizes();\r\n        const maxLabelWidth = labelSizes.widest.width;\r\n        const maxLabelHeight = labelSizes.highest.height;\r\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n        if (maxLabelWidth + 6 > tickWidth) {\r\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\r\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n        }\r\n        this.labelRotation = labelRotation;\r\n    }\r\n    afterCalculateLabelRotation() {\r\n        callback(this.options.afterCalculateLabelRotation, [\r\n            this\r\n        ]);\r\n    }\r\n    afterAutoSkip() {}\r\n    beforeFit() {\r\n        callback(this.options.beforeFit, [\r\n            this\r\n        ]);\r\n    }\r\n    fit() {\r\n        const minSize = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\r\n        const display = this._isVisible();\r\n        const isHorizontal = this.isHorizontal();\r\n        if (display) {\r\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n            if (isHorizontal) {\r\n                minSize.width = this.maxWidth;\r\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n            } else {\r\n                minSize.height = this.maxHeight;\r\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n            }\r\n            if (tickOpts.display && this.ticks.length) {\r\n                const { first , last , widest , highest  } = this._getLabelSizes();\r\n                const tickPadding = tickOpts.padding * 2;\r\n                const angleRadians = toRadians(this.labelRotation);\r\n                const cos = Math.cos(angleRadians);\r\n                const sin = Math.sin(angleRadians);\r\n                if (isHorizontal) {\r\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n                } else {\r\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n                }\r\n                this._calculatePadding(first, last, sin, cos);\r\n            }\r\n        }\r\n        this._handleMargins();\r\n        if (isHorizontal) {\r\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n            this.height = minSize.height;\r\n        } else {\r\n            this.width = minSize.width;\r\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n        }\r\n    }\r\n    _calculatePadding(first, last, sin, cos) {\r\n        const { ticks: { align , padding  } , position  } = this.options;\r\n        const isRotated = this.labelRotation !== 0;\r\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n        if (this.isHorizontal()) {\r\n            const offsetLeft = this.getPixelForTick(0) - this.left;\r\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n            let paddingLeft = 0;\r\n            let paddingRight = 0;\r\n            if (isRotated) {\r\n                if (labelsBelowTicks) {\r\n                    paddingLeft = cos * first.width;\r\n                    paddingRight = sin * last.height;\r\n                } else {\r\n                    paddingLeft = sin * first.height;\r\n                    paddingRight = cos * last.width;\r\n                }\r\n            } else if (align === 'start') {\r\n                paddingRight = last.width;\r\n            } else if (align === 'end') {\r\n                paddingLeft = first.width;\r\n            } else if (align !== 'inner') {\r\n                paddingLeft = first.width / 2;\r\n                paddingRight = last.width / 2;\r\n            }\r\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n        } else {\r\n            let paddingTop = last.height / 2;\r\n            let paddingBottom = first.height / 2;\r\n            if (align === 'start') {\r\n                paddingTop = 0;\r\n                paddingBottom = first.height;\r\n            } else if (align === 'end') {\r\n                paddingTop = last.height;\r\n                paddingBottom = 0;\r\n            }\r\n            this.paddingTop = paddingTop + padding;\r\n            this.paddingBottom = paddingBottom + padding;\r\n        }\r\n    }\r\n _handleMargins() {\r\n        if (this._margins) {\r\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n        }\r\n    }\r\n    afterFit() {\r\n        callback(this.options.afterFit, [\r\n            this\r\n        ]);\r\n    }\r\n isHorizontal() {\r\n        const { axis , position  } = this.options;\r\n        return position === 'top' || position === 'bottom' || axis === 'x';\r\n    }\r\n isFullSize() {\r\n        return this.options.fullSize;\r\n    }\r\n _convertTicksToLabels(ticks) {\r\n        this.beforeTickToLabelConversion();\r\n        this.generateTickLabels(ticks);\r\n        let i, ilen;\r\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\r\n            if (isNullOrUndef(ticks[i].label)) {\r\n                ticks.splice(i, 1);\r\n                ilen--;\r\n                i--;\r\n            }\r\n        }\r\n        this.afterTickToLabelConversion();\r\n    }\r\n _getLabelSizes() {\r\n        let labelSizes = this._labelSizes;\r\n        if (!labelSizes) {\r\n            const sampleSize = this.options.ticks.sampleSize;\r\n            let ticks = this.ticks;\r\n            if (sampleSize < ticks.length) {\r\n                ticks = sample(ticks, sampleSize);\r\n            }\r\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\r\n        }\r\n        return labelSizes;\r\n    }\r\n _computeLabelSizes(ticks, length, maxTicksLimit) {\r\n        const { ctx , _longestTextCache: caches  } = this;\r\n        const widths = [];\r\n        const heights = [];\r\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\r\n        let widestLabelSize = 0;\r\n        let highestLabelSize = 0;\r\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n        for(i = 0; i < length; i += increment){\r\n            label = ticks[i].label;\r\n            tickFont = this._resolveTickFontOptions(i);\r\n            ctx.font = fontString = tickFont.string;\r\n            cache = caches[fontString] = caches[fontString] || {\r\n                data: {},\r\n                gc: []\r\n            };\r\n            lineHeight = tickFont.lineHeight;\r\n            width = height = 0;\r\n            if (!isNullOrUndef(label) && !isArray(label)) {\r\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n                height = lineHeight;\r\n            } else if (isArray(label)) {\r\n                for(j = 0, jlen = label.length; j < jlen; ++j){\r\n                    nestedLabel =  label[j];\r\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n                        height += lineHeight;\r\n                    }\r\n                }\r\n            }\r\n            widths.push(width);\r\n            heights.push(height);\r\n            widestLabelSize = Math.max(width, widestLabelSize);\r\n            highestLabelSize = Math.max(height, highestLabelSize);\r\n        }\r\n        garbageCollect(caches, length);\r\n        const widest = widths.indexOf(widestLabelSize);\r\n        const highest = heights.indexOf(highestLabelSize);\r\n        const valueAt = (idx)=>({\r\n                width: widths[idx] || 0,\r\n                height: heights[idx] || 0\r\n            });\r\n        return {\r\n            first: valueAt(0),\r\n            last: valueAt(length - 1),\r\n            widest: valueAt(widest),\r\n            highest: valueAt(highest),\r\n            widths,\r\n            heights\r\n        };\r\n    }\r\n getLabelForValue(value) {\r\n        return value;\r\n    }\r\n getPixelForValue(value, index) {\r\n        return NaN;\r\n    }\r\n getValueForPixel(pixel) {}\r\n getPixelForTick(index) {\r\n        const ticks = this.ticks;\r\n        if (index < 0 || index > ticks.length - 1) {\r\n            return null;\r\n        }\r\n        return this.getPixelForValue(ticks[index].value);\r\n    }\r\n getPixelForDecimal(decimal) {\r\n        if (this._reversePixels) {\r\n            decimal = 1 - decimal;\r\n        }\r\n        const pixel = this._startPixel + decimal * this._length;\r\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n    }\r\n getDecimalForPixel(pixel) {\r\n        const decimal = (pixel - this._startPixel) / this._length;\r\n        return this._reversePixels ? 1 - decimal : decimal;\r\n    }\r\n getBasePixel() {\r\n        return this.getPixelForValue(this.getBaseValue());\r\n    }\r\n getBaseValue() {\r\n        const { min , max  } = this;\r\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\r\n    }\r\n getContext(index) {\r\n        const ticks = this.ticks || [];\r\n        if (index >= 0 && index < ticks.length) {\r\n            const tick = ticks[index];\r\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\r\n        }\r\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\r\n    }\r\n _tickSize() {\r\n        const optionTicks = this.options.ticks;\r\n        const rot = toRadians(this.labelRotation);\r\n        const cos = Math.abs(Math.cos(rot));\r\n        const sin = Math.abs(Math.sin(rot));\r\n        const labelSizes = this._getLabelSizes();\r\n        const padding = optionTicks.autoSkipPadding || 0;\r\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\r\n    }\r\n _isVisible() {\r\n        const display = this.options.display;\r\n        if (display !== 'auto') {\r\n            return !!display;\r\n        }\r\n        return this.getMatchingVisibleMetas().length > 0;\r\n    }\r\n _computeGridLineItems(chartArea) {\r\n        const axis = this.axis;\r\n        const chart = this.chart;\r\n        const options = this.options;\r\n        const { grid , position , border  } = options;\r\n        const offset = grid.offset;\r\n        const isHorizontal = this.isHorizontal();\r\n        const ticks = this.ticks;\r\n        const ticksLength = ticks.length + (offset ? 1 : 0);\r\n        const tl = getTickMarkLength(grid);\r\n        const items = [];\r\n        const borderOpts = border.setContext(this.getContext());\r\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\r\n        const axisHalfWidth = axisWidth / 2;\r\n        const alignBorderValue = function(pixel) {\r\n            return _alignPixel(chart, pixel, axisWidth);\r\n        };\r\n        let borderValue, i, lineValue, alignedLineValue;\r\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n        if (position === 'top') {\r\n            borderValue = alignBorderValue(this.bottom);\r\n            ty1 = this.bottom - tl;\r\n            ty2 = borderValue - axisHalfWidth;\r\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n            y2 = chartArea.bottom;\r\n        } else if (position === 'bottom') {\r\n            borderValue = alignBorderValue(this.top);\r\n            y1 = chartArea.top;\r\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n            ty1 = borderValue + axisHalfWidth;\r\n            ty2 = this.top + tl;\r\n        } else if (position === 'left') {\r\n            borderValue = alignBorderValue(this.right);\r\n            tx1 = this.right - tl;\r\n            tx2 = borderValue - axisHalfWidth;\r\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n            x2 = chartArea.right;\r\n        } else if (position === 'right') {\r\n            borderValue = alignBorderValue(this.left);\r\n            x1 = chartArea.left;\r\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n            tx1 = borderValue + axisHalfWidth;\r\n            tx2 = this.left + tl;\r\n        } else if (axis === 'x') {\r\n            if (position === 'center') {\r\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n            } else if (isObject(position)) {\r\n                const positionAxisID = Object.keys(position)[0];\r\n                const value = position[positionAxisID];\r\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n            }\r\n            y1 = chartArea.top;\r\n            y2 = chartArea.bottom;\r\n            ty1 = borderValue + axisHalfWidth;\r\n            ty2 = ty1 + tl;\r\n        } else if (axis === 'y') {\r\n            if (position === 'center') {\r\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n            } else if (isObject(position)) {\r\n                const positionAxisID = Object.keys(position)[0];\r\n                const value = position[positionAxisID];\r\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n            }\r\n            tx1 = borderValue - axisHalfWidth;\r\n            tx2 = tx1 - tl;\r\n            x1 = chartArea.left;\r\n            x2 = chartArea.right;\r\n        }\r\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n        for(i = 0; i < ticksLength; i += step){\r\n            const context = this.getContext(i);\r\n            const optsAtIndex = grid.setContext(context);\r\n            const optsAtIndexBorder = border.setContext(context);\r\n            const lineWidth = optsAtIndex.lineWidth;\r\n            const lineColor = optsAtIndex.color;\r\n            const borderDash = optsAtIndexBorder.dash || [];\r\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\r\n            const tickWidth = optsAtIndex.tickWidth;\r\n            const tickColor = optsAtIndex.tickColor;\r\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n            lineValue = getPixelForGridLine(this, i, offset);\r\n            if (lineValue === undefined) {\r\n                continue;\r\n            }\r\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n            if (isHorizontal) {\r\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n            } else {\r\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n            }\r\n            items.push({\r\n                tx1,\r\n                ty1,\r\n                tx2,\r\n                ty2,\r\n                x1,\r\n                y1,\r\n                x2,\r\n                y2,\r\n                width: lineWidth,\r\n                color: lineColor,\r\n                borderDash,\r\n                borderDashOffset,\r\n                tickWidth,\r\n                tickColor,\r\n                tickBorderDash,\r\n                tickBorderDashOffset\r\n            });\r\n        }\r\n        this._ticksLength = ticksLength;\r\n        this._borderValue = borderValue;\r\n        return items;\r\n    }\r\n _computeLabelItems(chartArea) {\r\n        const axis = this.axis;\r\n        const options = this.options;\r\n        const { position , ticks: optionTicks  } = options;\r\n        const isHorizontal = this.isHorizontal();\r\n        const ticks = this.ticks;\r\n        const { align , crossAlign , padding , mirror  } = optionTicks;\r\n        const tl = getTickMarkLength(options.grid);\r\n        const tickAndPadding = tl + padding;\r\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n        const rotation = -toRadians(this.labelRotation);\r\n        const items = [];\r\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n        let textBaseline = 'middle';\r\n        if (position === 'top') {\r\n            y = this.bottom - hTickAndPadding;\r\n            textAlign = this._getXAxisLabelAlignment();\r\n        } else if (position === 'bottom') {\r\n            y = this.top + hTickAndPadding;\r\n            textAlign = this._getXAxisLabelAlignment();\r\n        } else if (position === 'left') {\r\n            const ret = this._getYAxisLabelAlignment(tl);\r\n            textAlign = ret.textAlign;\r\n            x = ret.x;\r\n        } else if (position === 'right') {\r\n            const ret = this._getYAxisLabelAlignment(tl);\r\n            textAlign = ret.textAlign;\r\n            x = ret.x;\r\n        } else if (axis === 'x') {\r\n            if (position === 'center') {\r\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\r\n            } else if (isObject(position)) {\r\n                const positionAxisID = Object.keys(position)[0];\r\n                const value = position[positionAxisID];\r\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n            }\r\n            textAlign = this._getXAxisLabelAlignment();\r\n        } else if (axis === 'y') {\r\n            if (position === 'center') {\r\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\r\n            } else if (isObject(position)) {\r\n                const positionAxisID = Object.keys(position)[0];\r\n                const value = position[positionAxisID];\r\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n            }\r\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n        }\r\n        if (axis === 'y') {\r\n            if (align === 'start') {\r\n                textBaseline = 'top';\r\n            } else if (align === 'end') {\r\n                textBaseline = 'bottom';\r\n            }\r\n        }\r\n        const labelSizes = this._getLabelSizes();\r\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\r\n            tick = ticks[i];\r\n            label = tick.label;\r\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n            font = this._resolveTickFontOptions(i);\r\n            lineHeight = font.lineHeight;\r\n            lineCount = isArray(label) ? label.length : 1;\r\n            const halfCount = lineCount / 2;\r\n            const color = optsAtIndex.color;\r\n            const strokeColor = optsAtIndex.textStrokeColor;\r\n            const strokeWidth = optsAtIndex.textStrokeWidth;\r\n            let tickTextAlign = textAlign;\r\n            if (isHorizontal) {\r\n                x = pixel;\r\n                if (textAlign === 'inner') {\r\n                    if (i === ilen - 1) {\r\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n                    } else if (i === 0) {\r\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n                    } else {\r\n                        tickTextAlign = 'center';\r\n                    }\r\n                }\r\n                if (position === 'top') {\r\n                    if (crossAlign === 'near' || rotation !== 0) {\r\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n                    } else if (crossAlign === 'center') {\r\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n                    } else {\r\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n                    }\r\n                } else {\r\n                    if (crossAlign === 'near' || rotation !== 0) {\r\n                        textOffset = lineHeight / 2;\r\n                    } else if (crossAlign === 'center') {\r\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n                    } else {\r\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n                    }\r\n                }\r\n                if (mirror) {\r\n                    textOffset *= -1;\r\n                }\r\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\r\n                    x += lineHeight / 2 * Math.sin(rotation);\r\n                }\r\n            } else {\r\n                y = pixel;\r\n                textOffset = (1 - lineCount) * lineHeight / 2;\r\n            }\r\n            let backdrop;\r\n            if (optsAtIndex.showLabelBackdrop) {\r\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n                const height = labelSizes.heights[i];\r\n                const width = labelSizes.widths[i];\r\n                let top = textOffset - labelPadding.top;\r\n                let left = 0 - labelPadding.left;\r\n                switch(textBaseline){\r\n                    case 'middle':\r\n                        top -= height / 2;\r\n                        break;\r\n                    case 'bottom':\r\n                        top -= height;\r\n                        break;\r\n                }\r\n                switch(textAlign){\r\n                    case 'center':\r\n                        left -= width / 2;\r\n                        break;\r\n                    case 'right':\r\n                        left -= width;\r\n                        break;\r\n                    case 'inner':\r\n                        if (i === ilen - 1) {\r\n                            left -= width;\r\n                        } else if (i > 0) {\r\n                            left -= width / 2;\r\n                        }\r\n                        break;\r\n                }\r\n                backdrop = {\r\n                    left,\r\n                    top,\r\n                    width: width + labelPadding.width,\r\n                    height: height + labelPadding.height,\r\n                    color: optsAtIndex.backdropColor\r\n                };\r\n            }\r\n            items.push({\r\n                label,\r\n                font,\r\n                textOffset,\r\n                options: {\r\n                    rotation,\r\n                    color,\r\n                    strokeColor,\r\n                    strokeWidth,\r\n                    textAlign: tickTextAlign,\r\n                    textBaseline,\r\n                    translation: [\r\n                        x,\r\n                        y\r\n                    ],\r\n                    backdrop\r\n                }\r\n            });\r\n        }\r\n        return items;\r\n    }\r\n    _getXAxisLabelAlignment() {\r\n        const { position , ticks  } = this.options;\r\n        const rotation = -toRadians(this.labelRotation);\r\n        if (rotation) {\r\n            return position === 'top' ? 'left' : 'right';\r\n        }\r\n        let align = 'center';\r\n        if (ticks.align === 'start') {\r\n            align = 'left';\r\n        } else if (ticks.align === 'end') {\r\n            align = 'right';\r\n        } else if (ticks.align === 'inner') {\r\n            align = 'inner';\r\n        }\r\n        return align;\r\n    }\r\n    _getYAxisLabelAlignment(tl) {\r\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\r\n        const labelSizes = this._getLabelSizes();\r\n        const tickAndPadding = tl + padding;\r\n        const widest = labelSizes.widest.width;\r\n        let textAlign;\r\n        let x;\r\n        if (position === 'left') {\r\n            if (mirror) {\r\n                x = this.right + padding;\r\n                if (crossAlign === 'near') {\r\n                    textAlign = 'left';\r\n                } else if (crossAlign === 'center') {\r\n                    textAlign = 'center';\r\n                    x += widest / 2;\r\n                } else {\r\n                    textAlign = 'right';\r\n                    x += widest;\r\n                }\r\n            } else {\r\n                x = this.right - tickAndPadding;\r\n                if (crossAlign === 'near') {\r\n                    textAlign = 'right';\r\n                } else if (crossAlign === 'center') {\r\n                    textAlign = 'center';\r\n                    x -= widest / 2;\r\n                } else {\r\n                    textAlign = 'left';\r\n                    x = this.left;\r\n                }\r\n            }\r\n        } else if (position === 'right') {\r\n            if (mirror) {\r\n                x = this.left + padding;\r\n                if (crossAlign === 'near') {\r\n                    textAlign = 'right';\r\n                } else if (crossAlign === 'center') {\r\n                    textAlign = 'center';\r\n                    x -= widest / 2;\r\n                } else {\r\n                    textAlign = 'left';\r\n                    x -= widest;\r\n                }\r\n            } else {\r\n                x = this.left + tickAndPadding;\r\n                if (crossAlign === 'near') {\r\n                    textAlign = 'left';\r\n                } else if (crossAlign === 'center') {\r\n                    textAlign = 'center';\r\n                    x += widest / 2;\r\n                } else {\r\n                    textAlign = 'right';\r\n                    x = this.right;\r\n                }\r\n            }\r\n        } else {\r\n            textAlign = 'right';\r\n        }\r\n        return {\r\n            textAlign,\r\n            x\r\n        };\r\n    }\r\n _computeLabelArea() {\r\n        if (this.options.ticks.mirror) {\r\n            return;\r\n        }\r\n        const chart = this.chart;\r\n        const position = this.options.position;\r\n        if (position === 'left' || position === 'right') {\r\n            return {\r\n                top: 0,\r\n                left: this.left,\r\n                bottom: chart.height,\r\n                right: this.right\r\n            };\r\n        }\r\n        if (position === 'top' || position === 'bottom') {\r\n            return {\r\n                top: this.top,\r\n                left: 0,\r\n                bottom: this.bottom,\r\n                right: chart.width\r\n            };\r\n        }\r\n    }\r\n drawBackground() {\r\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\r\n        if (backgroundColor) {\r\n            ctx.save();\r\n            ctx.fillStyle = backgroundColor;\r\n            ctx.fillRect(left, top, width, height);\r\n            ctx.restore();\r\n        }\r\n    }\r\n    getLineWidthForValue(value) {\r\n        const grid = this.options.grid;\r\n        if (!this._isVisible() || !grid.display) {\r\n            return 0;\r\n        }\r\n        const ticks = this.ticks;\r\n        const index = ticks.findIndex((t)=>t.value === value);\r\n        if (index >= 0) {\r\n            const opts = grid.setContext(this.getContext(index));\r\n            return opts.lineWidth;\r\n        }\r\n        return 0;\r\n    }\r\n drawGrid(chartArea) {\r\n        const grid = this.options.grid;\r\n        const ctx = this.ctx;\r\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n        let i, ilen;\r\n        const drawLine = (p1, p2, style)=>{\r\n            if (!style.width || !style.color) {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            ctx.lineWidth = style.width;\r\n            ctx.strokeStyle = style.color;\r\n            ctx.setLineDash(style.borderDash || []);\r\n            ctx.lineDashOffset = style.borderDashOffset;\r\n            ctx.beginPath();\r\n            ctx.moveTo(p1.x, p1.y);\r\n            ctx.lineTo(p2.x, p2.y);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        };\r\n        if (grid.display) {\r\n            for(i = 0, ilen = items.length; i < ilen; ++i){\r\n                const item = items[i];\r\n                if (grid.drawOnChartArea) {\r\n                    drawLine({\r\n                        x: item.x1,\r\n                        y: item.y1\r\n                    }, {\r\n                        x: item.x2,\r\n                        y: item.y2\r\n                    }, item);\r\n                }\r\n                if (grid.drawTicks) {\r\n                    drawLine({\r\n                        x: item.tx1,\r\n                        y: item.ty1\r\n                    }, {\r\n                        x: item.tx2,\r\n                        y: item.ty2\r\n                    }, {\r\n                        color: item.tickColor,\r\n                        width: item.tickWidth,\r\n                        borderDash: item.tickBorderDash,\r\n                        borderDashOffset: item.tickBorderDashOffset\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n drawBorder() {\r\n        const { chart , ctx , options: { border , grid  }  } = this;\r\n        const borderOpts = border.setContext(this.getContext());\r\n        const axisWidth = border.display ? borderOpts.width : 0;\r\n        if (!axisWidth) {\r\n            return;\r\n        }\r\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n        const borderValue = this._borderValue;\r\n        let x1, x2, y1, y2;\r\n        if (this.isHorizontal()) {\r\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n            y1 = y2 = borderValue;\r\n        } else {\r\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n            x1 = x2 = borderValue;\r\n        }\r\n        ctx.save();\r\n        ctx.lineWidth = borderOpts.width;\r\n        ctx.strokeStyle = borderOpts.color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n drawLabels(chartArea) {\r\n        const optionTicks = this.options.ticks;\r\n        if (!optionTicks.display) {\r\n            return;\r\n        }\r\n        const ctx = this.ctx;\r\n        const area = this._computeLabelArea();\r\n        if (area) {\r\n            clipArea(ctx, area);\r\n        }\r\n        const items = this.getLabelItems(chartArea);\r\n        for (const item of items){\r\n            const renderTextOptions = item.options;\r\n            const tickFont = item.font;\r\n            const label = item.label;\r\n            const y = item.textOffset;\r\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\r\n        }\r\n        if (area) {\r\n            unclipArea(ctx);\r\n        }\r\n    }\r\n drawTitle() {\r\n        const { ctx , options: { position , title , reverse  }  } = this;\r\n        if (!title.display) {\r\n            return;\r\n        }\r\n        const font = toFont(title.font);\r\n        const padding = toPadding(title.padding);\r\n        const align = title.align;\r\n        let offset = font.lineHeight / 2;\r\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n            offset += padding.bottom;\r\n            if (isArray(title.text)) {\r\n                offset += font.lineHeight * (title.text.length - 1);\r\n            }\r\n        } else {\r\n            offset += padding.top;\r\n        }\r\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\r\n        renderText(ctx, title.text, 0, 0, font, {\r\n            color: title.color,\r\n            maxWidth,\r\n            rotation,\r\n            textAlign: titleAlign(align, position, reverse),\r\n            textBaseline: 'middle',\r\n            translation: [\r\n                titleX,\r\n                titleY\r\n            ]\r\n        });\r\n    }\r\n    draw(chartArea) {\r\n        if (!this._isVisible()) {\r\n            return;\r\n        }\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawBorder();\r\n        this.drawTitle();\r\n        this.drawLabels(chartArea);\r\n    }\r\n _layers() {\r\n        const opts = this.options;\r\n        const tz = opts.ticks && opts.ticks.z || 0;\r\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\r\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n            return [\r\n                {\r\n                    z: tz,\r\n                    draw: (chartArea)=>{\r\n                        this.draw(chartArea);\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n        return [\r\n            {\r\n                z: gz,\r\n                draw: (chartArea)=>{\r\n                    this.drawBackground();\r\n                    this.drawGrid(chartArea);\r\n                    this.drawTitle();\r\n                }\r\n            },\r\n            {\r\n                z: bz,\r\n                draw: ()=>{\r\n                    this.drawBorder();\r\n                }\r\n            },\r\n            {\r\n                z: tz,\r\n                draw: (chartArea)=>{\r\n                    this.drawLabels(chartArea);\r\n                }\r\n            }\r\n        ];\r\n    }\r\n getMatchingVisibleMetas(type) {\r\n        const metas = this.chart.getSortedVisibleDatasetMetas();\r\n        const axisID = this.axis + 'AxisID';\r\n        const result = [];\r\n        let i, ilen;\r\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\r\n            const meta = metas[i];\r\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n                result.push(meta);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n _resolveTickFontOptions(index) {\r\n        const opts = this.options.ticks.setContext(this.getContext(index));\r\n        return toFont(opts.font);\r\n    }\r\n _maxDigits() {\r\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n    }\r\n}\r\n\r\nclass TypedRegistry {\r\n    constructor(type, scope, override){\r\n        this.type = type;\r\n        this.scope = scope;\r\n        this.override = override;\r\n        this.items = Object.create(null);\r\n    }\r\n    isForType(type) {\r\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n    }\r\n register(item) {\r\n        const proto = Object.getPrototypeOf(item);\r\n        let parentScope;\r\n        if (isIChartComponent(proto)) {\r\n            parentScope = this.register(proto);\r\n        }\r\n        const items = this.items;\r\n        const id = item.id;\r\n        const scope = this.scope + '.' + id;\r\n        if (!id) {\r\n            throw new Error('class does not have id: ' + item);\r\n        }\r\n        if (id in items) {\r\n            return scope;\r\n        }\r\n        items[id] = item;\r\n        registerDefaults(item, scope, parentScope);\r\n        if (this.override) {\r\n            defaults.override(item.id, item.overrides);\r\n        }\r\n        return scope;\r\n    }\r\n get(id) {\r\n        return this.items[id];\r\n    }\r\n unregister(item) {\r\n        const items = this.items;\r\n        const id = item.id;\r\n        const scope = this.scope;\r\n        if (id in items) {\r\n            delete items[id];\r\n        }\r\n        if (scope && id in defaults[scope]) {\r\n            delete defaults[scope][id];\r\n            if (this.override) {\r\n                delete overrides[id];\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n    const itemDefaults = merge(Object.create(null), [\r\n        parentScope ? defaults.get(parentScope) : {},\r\n        defaults.get(scope),\r\n        item.defaults\r\n    ]);\r\n    defaults.set(scope, itemDefaults);\r\n    if (item.defaultRoutes) {\r\n        routeDefaults(scope, item.defaultRoutes);\r\n    }\r\n    if (item.descriptors) {\r\n        defaults.describe(scope, item.descriptors);\r\n    }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n    Object.keys(routes).forEach((property)=>{\r\n        const propertyParts = property.split('.');\r\n        const sourceName = propertyParts.pop();\r\n        const sourceScope = [\r\n            scope\r\n        ].concat(propertyParts).join('.');\r\n        const parts = routes[property].split('.');\r\n        const targetName = parts.pop();\r\n        const targetScope = parts.join('.');\r\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n    });\r\n}\r\nfunction isIChartComponent(proto) {\r\n    return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n    constructor(){\r\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n        this.elements = new TypedRegistry(Element, 'elements');\r\n        this.plugins = new TypedRegistry(Object, 'plugins');\r\n        this.scales = new TypedRegistry(Scale, 'scales');\r\n        this._typedRegistries = [\r\n            this.controllers,\r\n            this.scales,\r\n            this.elements\r\n        ];\r\n    }\r\n add(...args) {\r\n        this._each('register', args);\r\n    }\r\n    remove(...args) {\r\n        this._each('unregister', args);\r\n    }\r\n addControllers(...args) {\r\n        this._each('register', args, this.controllers);\r\n    }\r\n addElements(...args) {\r\n        this._each('register', args, this.elements);\r\n    }\r\n addPlugins(...args) {\r\n        this._each('register', args, this.plugins);\r\n    }\r\n addScales(...args) {\r\n        this._each('register', args, this.scales);\r\n    }\r\n getController(id) {\r\n        return this._get(id, this.controllers, 'controller');\r\n    }\r\n getElement(id) {\r\n        return this._get(id, this.elements, 'element');\r\n    }\r\n getPlugin(id) {\r\n        return this._get(id, this.plugins, 'plugin');\r\n    }\r\n getScale(id) {\r\n        return this._get(id, this.scales, 'scale');\r\n    }\r\n removeControllers(...args) {\r\n        this._each('unregister', args, this.controllers);\r\n    }\r\n removeElements(...args) {\r\n        this._each('unregister', args, this.elements);\r\n    }\r\n removePlugins(...args) {\r\n        this._each('unregister', args, this.plugins);\r\n    }\r\n removeScales(...args) {\r\n        this._each('unregister', args, this.scales);\r\n    }\r\n _each(method, args, typedRegistry) {\r\n        [\r\n            ...args\r\n        ].forEach((arg)=>{\r\n            const reg = typedRegistry || this._getRegistryForType(arg);\r\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\r\n                this._exec(method, reg, arg);\r\n            } else {\r\n                each(arg, (item)=>{\r\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\r\n                    this._exec(method, itemReg, item);\r\n                });\r\n            }\r\n        });\r\n    }\r\n _exec(method, registry, component) {\r\n        const camelMethod = _capitalize(method);\r\n        callback(component['before' + camelMethod], [], component);\r\n        registry[method](component);\r\n        callback(component['after' + camelMethod], [], component);\r\n    }\r\n _getRegistryForType(type) {\r\n        for(let i = 0; i < this._typedRegistries.length; i++){\r\n            const reg = this._typedRegistries[i];\r\n            if (reg.isForType(type)) {\r\n                return reg;\r\n            }\r\n        }\r\n        return this.plugins;\r\n    }\r\n _get(id, typedRegistry, type) {\r\n        const item = typedRegistry.get(id);\r\n        if (item === undefined) {\r\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n        }\r\n        return item;\r\n    }\r\n}\r\nvar registry = /* #__PURE__ */ new Registry();\r\n\r\nclass PluginService {\r\n    constructor(){\r\n        this._init = [];\r\n    }\r\n notify(chart, hook, args, filter) {\r\n        if (hook === 'beforeInit') {\r\n            this._init = this._createDescriptors(chart, true);\r\n            this._notify(this._init, chart, 'install');\r\n        }\r\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n        const result = this._notify(descriptors, chart, hook, args);\r\n        if (hook === 'afterDestroy') {\r\n            this._notify(descriptors, chart, 'stop');\r\n            this._notify(this._init, chart, 'uninstall');\r\n        }\r\n        return result;\r\n    }\r\n _notify(descriptors, chart, hook, args) {\r\n        args = args || {};\r\n        for (const descriptor of descriptors){\r\n            const plugin = descriptor.plugin;\r\n            const method = plugin[hook];\r\n            const params = [\r\n                chart,\r\n                args,\r\n                descriptor.options\r\n            ];\r\n            if (callback(method, params, plugin) === false && args.cancelable) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    invalidate() {\r\n        if (!isNullOrUndef(this._cache)) {\r\n            this._oldCache = this._cache;\r\n            this._cache = undefined;\r\n        }\r\n    }\r\n _descriptors(chart) {\r\n        if (this._cache) {\r\n            return this._cache;\r\n        }\r\n        const descriptors = this._cache = this._createDescriptors(chart);\r\n        this._notifyStateChanges(chart);\r\n        return descriptors;\r\n    }\r\n    _createDescriptors(chart, all) {\r\n        const config = chart && chart.config;\r\n        const options = valueOrDefault(config.options && config.options.plugins, {});\r\n        const plugins = allPlugins(config);\r\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n    }\r\n _notifyStateChanges(chart) {\r\n        const previousDescriptors = this._oldCache || [];\r\n        const descriptors = this._cache;\r\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\r\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n    }\r\n}\r\n function allPlugins(config) {\r\n    const localIds = {};\r\n    const plugins = [];\r\n    const keys = Object.keys(registry.plugins.items);\r\n    for(let i = 0; i < keys.length; i++){\r\n        plugins.push(registry.getPlugin(keys[i]));\r\n    }\r\n    const local = config.plugins || [];\r\n    for(let i = 0; i < local.length; i++){\r\n        const plugin = local[i];\r\n        if (plugins.indexOf(plugin) === -1) {\r\n            plugins.push(plugin);\r\n            localIds[plugin.id] = true;\r\n        }\r\n    }\r\n    return {\r\n        plugins,\r\n        localIds\r\n    };\r\n}\r\nfunction getOpts(options, all) {\r\n    if (!all && options === false) {\r\n        return null;\r\n    }\r\n    if (options === true) {\r\n        return {};\r\n    }\r\n    return options;\r\n}\r\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\r\n    const result = [];\r\n    const context = chart.getContext();\r\n    for (const plugin of plugins){\r\n        const id = plugin.id;\r\n        const opts = getOpts(options[id], all);\r\n        if (opts === null) {\r\n            continue;\r\n        }\r\n        result.push({\r\n            plugin,\r\n            options: pluginOpts(chart.config, {\r\n                plugin,\r\n                local: localIds[id]\r\n            }, opts, context)\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\r\n    const keys = config.pluginScopeKeys(plugin);\r\n    const scopes = config.getOptionScopes(opts, keys);\r\n    if (local && plugin.defaults) {\r\n        scopes.push(plugin.defaults);\r\n    }\r\n    return config.createResolver(scopes, context, [\r\n        ''\r\n    ], {\r\n        scriptable: false,\r\n        indexable: false,\r\n        allKeys: true\r\n    });\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n    const datasetDefaults = defaults.datasets[type] || {};\r\n    const datasetOptions = (options.datasets || {})[type] || {};\r\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n    let axis = id;\r\n    if (id === '_index_') {\r\n        axis = indexAxis;\r\n    } else if (id === '_value_') {\r\n        axis = indexAxis === 'x' ? 'y' : 'x';\r\n    }\r\n    return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n    return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction idMatchesAxis(id) {\r\n    if (id === 'x' || id === 'y' || id === 'r') {\r\n        return id;\r\n    }\r\n}\r\nfunction axisFromPosition(position) {\r\n    if (position === 'top' || position === 'bottom') {\r\n        return 'x';\r\n    }\r\n    if (position === 'left' || position === 'right') {\r\n        return 'y';\r\n    }\r\n}\r\nfunction determineAxis(id, ...scaleOptions) {\r\n    if (idMatchesAxis(id)) {\r\n        return id;\r\n    }\r\n    for (const opts of scaleOptions){\r\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\r\n        if (axis) {\r\n            return axis;\r\n        }\r\n    }\r\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\r\n}\r\nfunction getAxisFromDataset(id, axis, dataset) {\r\n    if (dataset[axis + 'AxisID'] === id) {\r\n        return {\r\n            axis\r\n        };\r\n    }\r\n}\r\nfunction retrieveAxisFromDatasets(id, config) {\r\n    if (config.data && config.data.datasets) {\r\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\r\n        if (boundDs.length) {\r\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\r\n        }\r\n    }\r\n    return {};\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n    const chartDefaults = overrides[config.type] || {\r\n        scales: {}\r\n    };\r\n    const configScales = options.scales || {};\r\n    const chartIndexAxis = getIndexAxis(config.type, options);\r\n    const scales = Object.create(null);\r\n    Object.keys(configScales).forEach((id)=>{\r\n        const scaleConf = configScales[id];\r\n        if (!isObject(scaleConf)) {\r\n            return console.error(`Invalid scale configuration for scale: ${id}`);\r\n        }\r\n        if (scaleConf._proxy) {\r\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n        }\r\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\r\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n        const defaultScaleOptions = chartDefaults.scales || {};\r\n        scales[id] = mergeIf(Object.create(null), [\r\n            {\r\n                axis\r\n            },\r\n            scaleConf,\r\n            defaultScaleOptions[axis],\r\n            defaultScaleOptions[defaultId]\r\n        ]);\r\n    });\r\n    config.data.datasets.forEach((dataset)=>{\r\n        const type = dataset.type || config.type;\r\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n        const datasetDefaults = overrides[type] || {};\r\n        const defaultScaleOptions = datasetDefaults.scales || {};\r\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\r\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n            const id = dataset[axis + 'AxisID'] || axis;\r\n            scales[id] = scales[id] || Object.create(null);\r\n            mergeIf(scales[id], [\r\n                {\r\n                    axis\r\n                },\r\n                configScales[id],\r\n                defaultScaleOptions[defaultID]\r\n            ]);\r\n        });\r\n    });\r\n    Object.keys(scales).forEach((key)=>{\r\n        const scale = scales[key];\r\n        mergeIf(scale, [\r\n            defaults.scales[scale.type],\r\n            defaults.scale\r\n        ]);\r\n    });\r\n    return scales;\r\n}\r\nfunction initOptions(config) {\r\n    const options = config.options || (config.options = {});\r\n    options.plugins = valueOrDefault(options.plugins, {});\r\n    options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n    data = data || {};\r\n    data.datasets = data.datasets || [];\r\n    data.labels = data.labels || [];\r\n    return data;\r\n}\r\nfunction initConfig(config) {\r\n    config = config || {};\r\n    config.data = initData(config.data);\r\n    initOptions(config);\r\n    return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n    let keys = keyCache.get(cacheKey);\r\n    if (!keys) {\r\n        keys = generate();\r\n        keyCache.set(cacheKey, keys);\r\n        keysCached.add(keys);\r\n    }\r\n    return keys;\r\n}\r\nconst addIfFound = (set, obj, key)=>{\r\n    const opts = resolveObjectKey(obj, key);\r\n    if (opts !== undefined) {\r\n        set.add(opts);\r\n    }\r\n};\r\nclass Config {\r\n    constructor(config){\r\n        this._config = initConfig(config);\r\n        this._scopeCache = new Map();\r\n        this._resolverCache = new Map();\r\n    }\r\n    get platform() {\r\n        return this._config.platform;\r\n    }\r\n    get type() {\r\n        return this._config.type;\r\n    }\r\n    set type(type) {\r\n        this._config.type = type;\r\n    }\r\n    get data() {\r\n        return this._config.data;\r\n    }\r\n    set data(data) {\r\n        this._config.data = initData(data);\r\n    }\r\n    get options() {\r\n        return this._config.options;\r\n    }\r\n    set options(options) {\r\n        this._config.options = options;\r\n    }\r\n    get plugins() {\r\n        return this._config.plugins;\r\n    }\r\n    update() {\r\n        const config = this._config;\r\n        this.clearCache();\r\n        initOptions(config);\r\n    }\r\n    clearCache() {\r\n        this._scopeCache.clear();\r\n        this._resolverCache.clear();\r\n    }\r\n datasetScopeKeys(datasetType) {\r\n        return cachedKeys(datasetType, ()=>[\r\n                [\r\n                    `datasets.${datasetType}`,\r\n                    ''\r\n                ]\r\n            ]);\r\n    }\r\n datasetAnimationScopeKeys(datasetType, transition) {\r\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\r\n                [\r\n                    `datasets.${datasetType}.transitions.${transition}`,\r\n                    `transitions.${transition}`\r\n                ],\r\n                [\r\n                    `datasets.${datasetType}`,\r\n                    ''\r\n                ]\r\n            ]);\r\n    }\r\n datasetElementScopeKeys(datasetType, elementType) {\r\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\r\n                [\r\n                    `datasets.${datasetType}.elements.${elementType}`,\r\n                    `datasets.${datasetType}`,\r\n                    `elements.${elementType}`,\r\n                    ''\r\n                ]\r\n            ]);\r\n    }\r\n pluginScopeKeys(plugin) {\r\n        const id = plugin.id;\r\n        const type = this.type;\r\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\r\n                [\r\n                    `plugins.${id}`,\r\n                    ...plugin.additionalOptionScopes || []\r\n                ]\r\n            ]);\r\n    }\r\n _cachedScopes(mainScope, resetCache) {\r\n        const _scopeCache = this._scopeCache;\r\n        let cache = _scopeCache.get(mainScope);\r\n        if (!cache || resetCache) {\r\n            cache = new Map();\r\n            _scopeCache.set(mainScope, cache);\r\n        }\r\n        return cache;\r\n    }\r\n getOptionScopes(mainScope, keyLists, resetCache) {\r\n        const { options , type  } = this;\r\n        const cache = this._cachedScopes(mainScope, resetCache);\r\n        const cached = cache.get(keyLists);\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        const scopes = new Set();\r\n        keyLists.forEach((keys)=>{\r\n            if (mainScope) {\r\n                scopes.add(mainScope);\r\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\r\n            }\r\n            keys.forEach((key)=>addIfFound(scopes, options, key));\r\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\r\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\r\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\r\n        });\r\n        const array = Array.from(scopes);\r\n        if (array.length === 0) {\r\n            array.push(Object.create(null));\r\n        }\r\n        if (keysCached.has(keyLists)) {\r\n            cache.set(keyLists, array);\r\n        }\r\n        return array;\r\n    }\r\n chartOptionScopes() {\r\n        const { options , type  } = this;\r\n        return [\r\n            options,\r\n            overrides[type] || {},\r\n            defaults.datasets[type] || {},\r\n            {\r\n                type\r\n            },\r\n            defaults,\r\n            descriptors\r\n        ];\r\n    }\r\n resolveNamedOptions(scopes, names, context, prefixes = [\r\n        ''\r\n    ]) {\r\n        const result = {\r\n            $shared: true\r\n        };\r\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\r\n        let options = resolver;\r\n        if (needContext(resolver, names)) {\r\n            result.$shared = false;\r\n            context = isFunction(context) ? context() : context;\r\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n            options = _attachContext(resolver, context, subResolver);\r\n        }\r\n        for (const prop of names){\r\n            result[prop] = options[prop];\r\n        }\r\n        return result;\r\n    }\r\n createResolver(scopes, context, prefixes = [\r\n        ''\r\n    ], descriptorDefaults) {\r\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\r\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\r\n    }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n    let cache = resolverCache.get(scopes);\r\n    if (!cache) {\r\n        cache = new Map();\r\n        resolverCache.set(scopes, cache);\r\n    }\r\n    const cacheKey = prefixes.join();\r\n    let cached = cache.get(cacheKey);\r\n    if (!cached) {\r\n        const resolver = _createResolver(scopes, prefixes);\r\n        cached = {\r\n            resolver,\r\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\r\n        };\r\n        cache.set(cacheKey, cached);\r\n    }\r\n    return cached;\r\n}\r\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\r\nfunction needContext(proxy, names) {\r\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\r\n    for (const prop of names){\r\n        const scriptable = isScriptable(prop);\r\n        const indexable = isIndexable(prop);\r\n        const value = (indexable || scriptable) && proxy[prop];\r\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nvar version = \"4.5.0\";\r\n\r\nconst KNOWN_POSITIONS = [\r\n    'top',\r\n    'bottom',\r\n    'left',\r\n    'right',\r\n    'chartArea'\r\n];\r\nfunction positionIsHorizontal(position, axis) {\r\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\r\n}\r\nfunction compare2Level(l1, l2) {\r\n    return function(a, b) {\r\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\r\n    };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n    const chart = context.chart;\r\n    const animationOptions = chart.options.animation;\r\n    chart.notifyPlugins('afterRender');\r\n    callback(animationOptions && animationOptions.onComplete, [\r\n        context\r\n    ], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n    const chart = context.chart;\r\n    const animationOptions = chart.options.animation;\r\n    callback(animationOptions && animationOptions.onProgress, [\r\n        context\r\n    ], chart);\r\n}\r\n function getCanvas(item) {\r\n    if (_isDomSupported() && typeof item === 'string') {\r\n        item = document.getElementById(item);\r\n    } else if (item && item.length) {\r\n        item = item[0];\r\n    }\r\n    if (item && item.canvas) {\r\n        item = item.canvas;\r\n    }\r\n    return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key)=>{\r\n    const canvas = getCanvas(key);\r\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n    const keys = Object.keys(obj);\r\n    for (const key of keys){\r\n        const intKey = +key;\r\n        if (intKey >= start) {\r\n            const value = obj[key];\r\n            delete obj[key];\r\n            if (move > 0 || intKey > start) {\r\n                obj[intKey + move] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n    if (!inChartArea || e.type === 'mouseout') {\r\n        return null;\r\n    }\r\n    if (isClick) {\r\n        return lastEvent;\r\n    }\r\n    return e;\r\n}\r\nclass Chart {\r\n    static defaults = defaults;\r\n    static instances = instances;\r\n    static overrides = overrides;\r\n    static registry = registry;\r\n    static version = version;\r\n    static getChart = getChart;\r\n    static register(...items) {\r\n        registry.add(...items);\r\n        invalidatePlugins();\r\n    }\r\n    static unregister(...items) {\r\n        registry.remove(...items);\r\n        invalidatePlugins();\r\n    }\r\n    constructor(item, userConfig){\r\n        const config = this.config = new Config(userConfig);\r\n        const initialCanvas = getCanvas(item);\r\n        const existingChart = getChart(initialCanvas);\r\n        if (existingChart) {\r\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\r\n        }\r\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n        this.platform.updateConfig(config);\r\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n        const canvas = context && context.canvas;\r\n        const height = canvas && canvas.height;\r\n        const width = canvas && canvas.width;\r\n        this.id = uid();\r\n        this.ctx = context;\r\n        this.canvas = canvas;\r\n        this.width = width;\r\n        this.height = height;\r\n        this._options = options;\r\n        this._aspectRatio = this.aspectRatio;\r\n        this._layers = [];\r\n        this._metasets = [];\r\n        this._stacks = undefined;\r\n        this.boxes = [];\r\n        this.currentDevicePixelRatio = undefined;\r\n        this.chartArea = undefined;\r\n        this._active = [];\r\n        this._lastEvent = undefined;\r\n        this._listeners = {};\r\n         this._responsiveListeners = undefined;\r\n        this._sortedMetasets = [];\r\n        this.scales = {};\r\n        this._plugins = new PluginService();\r\n        this.$proxies = {};\r\n        this._hiddenIndices = {};\r\n        this.attached = false;\r\n        this._animationsDisabled = undefined;\r\n        this.$context = undefined;\r\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\r\n        this._dataChanges = [];\r\n        instances[this.id] = this;\r\n        if (!context || !canvas) {\r\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n            return;\r\n        }\r\n        animator.listen(this, 'complete', onAnimationsComplete);\r\n        animator.listen(this, 'progress', onAnimationProgress);\r\n        this._initialize();\r\n        if (this.attached) {\r\n            this.update();\r\n        }\r\n    }\r\n    get aspectRatio() {\r\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\r\n        if (!isNullOrUndef(aspectRatio)) {\r\n            return aspectRatio;\r\n        }\r\n        if (maintainAspectRatio && _aspectRatio) {\r\n            return _aspectRatio;\r\n        }\r\n        return height ? width / height : null;\r\n    }\r\n    get data() {\r\n        return this.config.data;\r\n    }\r\n    set data(data) {\r\n        this.config.data = data;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    set options(options) {\r\n        this.config.options = options;\r\n    }\r\n    get registry() {\r\n        return registry;\r\n    }\r\n _initialize() {\r\n        this.notifyPlugins('beforeInit');\r\n        if (this.options.responsive) {\r\n            this.resize();\r\n        } else {\r\n            retinaScale(this, this.options.devicePixelRatio);\r\n        }\r\n        this.bindEvents();\r\n        this.notifyPlugins('afterInit');\r\n        return this;\r\n    }\r\n    clear() {\r\n        clearCanvas(this.canvas, this.ctx);\r\n        return this;\r\n    }\r\n    stop() {\r\n        animator.stop(this);\r\n        return this;\r\n    }\r\n resize(width, height) {\r\n        if (!animator.running(this)) {\r\n            this._resize(width, height);\r\n        } else {\r\n            this._resizeBeforeDraw = {\r\n                width,\r\n                height\r\n            };\r\n        }\r\n    }\r\n    _resize(width, height) {\r\n        const options = this.options;\r\n        const canvas = this.canvas;\r\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n        const mode = this.width ? 'resize' : 'attach';\r\n        this.width = newSize.width;\r\n        this.height = newSize.height;\r\n        this._aspectRatio = this.aspectRatio;\r\n        if (!retinaScale(this, newRatio, true)) {\r\n            return;\r\n        }\r\n        this.notifyPlugins('resize', {\r\n            size: newSize\r\n        });\r\n        callback(options.onResize, [\r\n            this,\r\n            newSize\r\n        ], this);\r\n        if (this.attached) {\r\n            if (this._doResize(mode)) {\r\n                this.render();\r\n            }\r\n        }\r\n    }\r\n    ensureScalesHaveIDs() {\r\n        const options = this.options;\r\n        const scalesOptions = options.scales || {};\r\n        each(scalesOptions, (axisOptions, axisID)=>{\r\n            axisOptions.id = axisID;\r\n        });\r\n    }\r\n buildOrUpdateScales() {\r\n        const options = this.options;\r\n        const scaleOpts = options.scales;\r\n        const scales = this.scales;\r\n        const updated = Object.keys(scales).reduce((obj, id)=>{\r\n            obj[id] = false;\r\n            return obj;\r\n        }, {});\r\n        let items = [];\r\n        if (scaleOpts) {\r\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\r\n                const scaleOptions = scaleOpts[id];\r\n                const axis = determineAxis(id, scaleOptions);\r\n                const isRadial = axis === 'r';\r\n                const isHorizontal = axis === 'x';\r\n                return {\r\n                    options: scaleOptions,\r\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n                };\r\n            }));\r\n        }\r\n        each(items, (item)=>{\r\n            const scaleOptions = item.options;\r\n            const id = scaleOptions.id;\r\n            const axis = determineAxis(id, scaleOptions);\r\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n                scaleOptions.position = item.dposition;\r\n            }\r\n            updated[id] = true;\r\n            let scale = null;\r\n            if (id in scales && scales[id].type === scaleType) {\r\n                scale = scales[id];\r\n            } else {\r\n                const scaleClass = registry.getScale(scaleType);\r\n                scale = new scaleClass({\r\n                    id,\r\n                    type: scaleType,\r\n                    ctx: this.ctx,\r\n                    chart: this\r\n                });\r\n                scales[scale.id] = scale;\r\n            }\r\n            scale.init(scaleOptions, options);\r\n        });\r\n        each(updated, (hasUpdated, id)=>{\r\n            if (!hasUpdated) {\r\n                delete scales[id];\r\n            }\r\n        });\r\n        each(scales, (scale)=>{\r\n            layouts.configure(this, scale, scale.options);\r\n            layouts.addBox(this, scale);\r\n        });\r\n    }\r\n _updateMetasets() {\r\n        const metasets = this._metasets;\r\n        const numData = this.data.datasets.length;\r\n        const numMeta = metasets.length;\r\n        metasets.sort((a, b)=>a.index - b.index);\r\n        if (numMeta > numData) {\r\n            for(let i = numData; i < numMeta; ++i){\r\n                this._destroyDatasetMeta(i);\r\n            }\r\n            metasets.splice(numData, numMeta - numData);\r\n        }\r\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n    }\r\n _removeUnreferencedMetasets() {\r\n        const { _metasets: metasets , data: { datasets  }  } = this;\r\n        if (metasets.length > datasets.length) {\r\n            delete this._stacks;\r\n        }\r\n        metasets.forEach((meta, index)=>{\r\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\r\n                this._destroyDatasetMeta(index);\r\n            }\r\n        });\r\n    }\r\n    buildOrUpdateControllers() {\r\n        const newControllers = [];\r\n        const datasets = this.data.datasets;\r\n        let i, ilen;\r\n        this._removeUnreferencedMetasets();\r\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\r\n            const dataset = datasets[i];\r\n            let meta = this.getDatasetMeta(i);\r\n            const type = dataset.type || this.config.type;\r\n            if (meta.type && meta.type !== type) {\r\n                this._destroyDatasetMeta(i);\r\n                meta = this.getDatasetMeta(i);\r\n            }\r\n            meta.type = type;\r\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n            meta.order = dataset.order || 0;\r\n            meta.index = i;\r\n            meta.label = '' + dataset.label;\r\n            meta.visible = this.isDatasetVisible(i);\r\n            if (meta.controller) {\r\n                meta.controller.updateIndex(i);\r\n                meta.controller.linkScales();\r\n            } else {\r\n                const ControllerClass = registry.getController(type);\r\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\r\n                Object.assign(ControllerClass, {\r\n                    dataElementType: registry.getElement(dataElementType),\r\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n                });\r\n                meta.controller = new ControllerClass(this, i);\r\n                newControllers.push(meta.controller);\r\n            }\r\n        }\r\n        this._updateMetasets();\r\n        return newControllers;\r\n    }\r\n _resetElements() {\r\n        each(this.data.datasets, (dataset, datasetIndex)=>{\r\n            this.getDatasetMeta(datasetIndex).controller.reset();\r\n        }, this);\r\n    }\r\n reset() {\r\n        this._resetElements();\r\n        this.notifyPlugins('reset');\r\n    }\r\n    update(mode) {\r\n        const config = this.config;\r\n        config.update();\r\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n        const animsDisabled = this._animationsDisabled = !options.animation;\r\n        this._updateScales();\r\n        this._checkEventBindings();\r\n        this._updateHiddenIndices();\r\n        this._plugins.invalidate();\r\n        if (this.notifyPlugins('beforeUpdate', {\r\n            mode,\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        const newControllers = this.buildOrUpdateControllers();\r\n        this.notifyPlugins('beforeElementsUpdate');\r\n        let minPadding = 0;\r\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\r\n            const { controller  } = this.getDatasetMeta(i);\r\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n            controller.buildOrUpdateElements(reset);\r\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n        }\r\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n        this._updateLayout(minPadding);\r\n        if (!animsDisabled) {\r\n            each(newControllers, (controller)=>{\r\n                controller.reset();\r\n            });\r\n        }\r\n        this._updateDatasets(mode);\r\n        this.notifyPlugins('afterUpdate', {\r\n            mode\r\n        });\r\n        this._layers.sort(compare2Level('z', '_idx'));\r\n        const { _active , _lastEvent  } = this;\r\n        if (_lastEvent) {\r\n            this._eventHandler(_lastEvent, true);\r\n        } else if (_active.length) {\r\n            this._updateHoverStyles(_active, _active, true);\r\n        }\r\n        this.render();\r\n    }\r\n _updateScales() {\r\n        each(this.scales, (scale)=>{\r\n            layouts.removeBox(this, scale);\r\n        });\r\n        this.ensureScalesHaveIDs();\r\n        this.buildOrUpdateScales();\r\n    }\r\n _checkEventBindings() {\r\n        const options = this.options;\r\n        const existingEvents = new Set(Object.keys(this._listeners));\r\n        const newEvents = new Set(options.events);\r\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n            this.unbindEvents();\r\n            this.bindEvents();\r\n        }\r\n    }\r\n _updateHiddenIndices() {\r\n        const { _hiddenIndices  } = this;\r\n        const changes = this._getUniformDataChanges() || [];\r\n        for (const { method , start , count  } of changes){\r\n            const move = method === '_removeElements' ? -count : count;\r\n            moveNumericKeys(_hiddenIndices, start, move);\r\n        }\r\n    }\r\n _getUniformDataChanges() {\r\n        const _dataChanges = this._dataChanges;\r\n        if (!_dataChanges || !_dataChanges.length) {\r\n            return;\r\n        }\r\n        this._dataChanges = [];\r\n        const datasetCount = this.data.datasets.length;\r\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\r\n        const changeSet = makeSet(0);\r\n        for(let i = 1; i < datasetCount; i++){\r\n            if (!setsEqual(changeSet, makeSet(i))) {\r\n                return;\r\n            }\r\n        }\r\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\r\n                method: a[1],\r\n                start: +a[2],\r\n                count: +a[3]\r\n            }));\r\n    }\r\n _updateLayout(minPadding) {\r\n        if (this.notifyPlugins('beforeLayout', {\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        layouts.update(this, this.width, this.height, minPadding);\r\n        const area = this.chartArea;\r\n        const noArea = area.width <= 0 || area.height <= 0;\r\n        this._layers = [];\r\n        each(this.boxes, (box)=>{\r\n            if (noArea && box.position === 'chartArea') {\r\n                return;\r\n            }\r\n            if (box.configure) {\r\n                box.configure();\r\n            }\r\n            this._layers.push(...box._layers());\r\n        }, this);\r\n        this._layers.forEach((item, index)=>{\r\n            item._idx = index;\r\n        });\r\n        this.notifyPlugins('afterLayout');\r\n    }\r\n _updateDatasets(mode) {\r\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\r\n            mode,\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\r\n            this.getDatasetMeta(i).controller.configure();\r\n        }\r\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\r\n            this._updateDataset(i, isFunction(mode) ? mode({\r\n                datasetIndex: i\r\n            }) : mode);\r\n        }\r\n        this.notifyPlugins('afterDatasetsUpdate', {\r\n            mode\r\n        });\r\n    }\r\n _updateDataset(index, mode) {\r\n        const meta = this.getDatasetMeta(index);\r\n        const args = {\r\n            meta,\r\n            index,\r\n            mode,\r\n            cancelable: true\r\n        };\r\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n            return;\r\n        }\r\n        meta.controller._update(mode);\r\n        args.cancelable = false;\r\n        this.notifyPlugins('afterDatasetUpdate', args);\r\n    }\r\n    render() {\r\n        if (this.notifyPlugins('beforeRender', {\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        if (animator.has(this)) {\r\n            if (this.attached && !animator.running(this)) {\r\n                animator.start(this);\r\n            }\r\n        } else {\r\n            this.draw();\r\n            onAnimationsComplete({\r\n                chart: this\r\n            });\r\n        }\r\n    }\r\n    draw() {\r\n        let i;\r\n        if (this._resizeBeforeDraw) {\r\n            const { width , height  } = this._resizeBeforeDraw;\r\n            this._resizeBeforeDraw = null;\r\n            this._resize(width, height);\r\n        }\r\n        this.clear();\r\n        if (this.width <= 0 || this.height <= 0) {\r\n            return;\r\n        }\r\n        if (this.notifyPlugins('beforeDraw', {\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        const layers = this._layers;\r\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\r\n            layers[i].draw(this.chartArea);\r\n        }\r\n        this._drawDatasets();\r\n        for(; i < layers.length; ++i){\r\n            layers[i].draw(this.chartArea);\r\n        }\r\n        this.notifyPlugins('afterDraw');\r\n    }\r\n _getSortedDatasetMetas(filterVisible) {\r\n        const metasets = this._sortedMetasets;\r\n        const result = [];\r\n        let i, ilen;\r\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\r\n            const meta = metasets[i];\r\n            if (!filterVisible || meta.visible) {\r\n                result.push(meta);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n getSortedVisibleDatasetMetas() {\r\n        return this._getSortedDatasetMetas(true);\r\n    }\r\n _drawDatasets() {\r\n        if (this.notifyPlugins('beforeDatasetsDraw', {\r\n            cancelable: true\r\n        }) === false) {\r\n            return;\r\n        }\r\n        const metasets = this.getSortedVisibleDatasetMetas();\r\n        for(let i = metasets.length - 1; i >= 0; --i){\r\n            this._drawDataset(metasets[i]);\r\n        }\r\n        this.notifyPlugins('afterDatasetsDraw');\r\n    }\r\n _drawDataset(meta) {\r\n        const ctx = this.ctx;\r\n        const args = {\r\n            meta,\r\n            index: meta.index,\r\n            cancelable: true\r\n        };\r\n        const clip = getDatasetClipArea(this, meta);\r\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n            return;\r\n        }\r\n        if (clip) {\r\n            clipArea(ctx, clip);\r\n        }\r\n        meta.controller.draw();\r\n        if (clip) {\r\n            unclipArea(ctx);\r\n        }\r\n        args.cancelable = false;\r\n        this.notifyPlugins('afterDatasetDraw', args);\r\n    }\r\n isPointInArea(point) {\r\n        return _isPointInArea(point, this.chartArea, this._minPadding);\r\n    }\r\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n        const method = Interaction.modes[mode];\r\n        if (typeof method === 'function') {\r\n            return method(this, e, options, useFinalPosition);\r\n        }\r\n        return [];\r\n    }\r\n    getDatasetMeta(datasetIndex) {\r\n        const dataset = this.data.datasets[datasetIndex];\r\n        const metasets = this._metasets;\r\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\r\n        if (!meta) {\r\n            meta = {\r\n                type: null,\r\n                data: [],\r\n                dataset: null,\r\n                controller: null,\r\n                hidden: null,\r\n                xAxisID: null,\r\n                yAxisID: null,\r\n                order: dataset && dataset.order || 0,\r\n                index: datasetIndex,\r\n                _dataset: dataset,\r\n                _parsed: [],\r\n                _sorted: false\r\n            };\r\n            metasets.push(meta);\r\n        }\r\n        return meta;\r\n    }\r\n    getContext() {\r\n        return this.$context || (this.$context = createContext(null, {\r\n            chart: this,\r\n            type: 'chart'\r\n        }));\r\n    }\r\n    getVisibleDatasetCount() {\r\n        return this.getSortedVisibleDatasetMetas().length;\r\n    }\r\n    isDatasetVisible(datasetIndex) {\r\n        const dataset = this.data.datasets[datasetIndex];\r\n        if (!dataset) {\r\n            return false;\r\n        }\r\n        const meta = this.getDatasetMeta(datasetIndex);\r\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n    }\r\n    setDatasetVisibility(datasetIndex, visible) {\r\n        const meta = this.getDatasetMeta(datasetIndex);\r\n        meta.hidden = !visible;\r\n    }\r\n    toggleDataVisibility(index) {\r\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n    }\r\n    getDataVisibility(index) {\r\n        return !this._hiddenIndices[index];\r\n    }\r\n _updateVisibility(datasetIndex, dataIndex, visible) {\r\n        const mode = visible ? 'show' : 'hide';\r\n        const meta = this.getDatasetMeta(datasetIndex);\r\n        const anims = meta.controller._resolveAnimations(undefined, mode);\r\n        if (defined(dataIndex)) {\r\n            meta.data[dataIndex].hidden = !visible;\r\n            this.update();\r\n        } else {\r\n            this.setDatasetVisibility(datasetIndex, visible);\r\n            anims.update(meta, {\r\n                visible\r\n            });\r\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n        }\r\n    }\r\n    hide(datasetIndex, dataIndex) {\r\n        this._updateVisibility(datasetIndex, dataIndex, false);\r\n    }\r\n    show(datasetIndex, dataIndex) {\r\n        this._updateVisibility(datasetIndex, dataIndex, true);\r\n    }\r\n _destroyDatasetMeta(datasetIndex) {\r\n        const meta = this._metasets[datasetIndex];\r\n        if (meta && meta.controller) {\r\n            meta.controller._destroy();\r\n        }\r\n        delete this._metasets[datasetIndex];\r\n    }\r\n    _stop() {\r\n        let i, ilen;\r\n        this.stop();\r\n        animator.remove(this);\r\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\r\n            this._destroyDatasetMeta(i);\r\n        }\r\n    }\r\n    destroy() {\r\n        this.notifyPlugins('beforeDestroy');\r\n        const { canvas , ctx  } = this;\r\n        this._stop();\r\n        this.config.clearCache();\r\n        if (canvas) {\r\n            this.unbindEvents();\r\n            clearCanvas(canvas, ctx);\r\n            this.platform.releaseContext(ctx);\r\n            this.canvas = null;\r\n            this.ctx = null;\r\n        }\r\n        delete instances[this.id];\r\n        this.notifyPlugins('afterDestroy');\r\n    }\r\n    toBase64Image(...args) {\r\n        return this.canvas.toDataURL(...args);\r\n    }\r\n bindEvents() {\r\n        this.bindUserEvents();\r\n        if (this.options.responsive) {\r\n            this.bindResponsiveEvents();\r\n        } else {\r\n            this.attached = true;\r\n        }\r\n    }\r\n bindUserEvents() {\r\n        const listeners = this._listeners;\r\n        const platform = this.platform;\r\n        const _add = (type, listener)=>{\r\n            platform.addEventListener(this, type, listener);\r\n            listeners[type] = listener;\r\n        };\r\n        const listener = (e, x, y)=>{\r\n            e.offsetX = x;\r\n            e.offsetY = y;\r\n            this._eventHandler(e);\r\n        };\r\n        each(this.options.events, (type)=>_add(type, listener));\r\n    }\r\n bindResponsiveEvents() {\r\n        if (!this._responsiveListeners) {\r\n            this._responsiveListeners = {};\r\n        }\r\n        const listeners = this._responsiveListeners;\r\n        const platform = this.platform;\r\n        const _add = (type, listener)=>{\r\n            platform.addEventListener(this, type, listener);\r\n            listeners[type] = listener;\r\n        };\r\n        const _remove = (type, listener)=>{\r\n            if (listeners[type]) {\r\n                platform.removeEventListener(this, type, listener);\r\n                delete listeners[type];\r\n            }\r\n        };\r\n        const listener = (width, height)=>{\r\n            if (this.canvas) {\r\n                this.resize(width, height);\r\n            }\r\n        };\r\n        let detached;\r\n        const attached = ()=>{\r\n            _remove('attach', attached);\r\n            this.attached = true;\r\n            this.resize();\r\n            _add('resize', listener);\r\n            _add('detach', detached);\r\n        };\r\n        detached = ()=>{\r\n            this.attached = false;\r\n            _remove('resize', listener);\r\n            this._stop();\r\n            this._resize(0, 0);\r\n            _add('attach', attached);\r\n        };\r\n        if (platform.isAttached(this.canvas)) {\r\n            attached();\r\n        } else {\r\n            detached();\r\n        }\r\n    }\r\n unbindEvents() {\r\n        each(this._listeners, (listener, type)=>{\r\n            this.platform.removeEventListener(this, type, listener);\r\n        });\r\n        this._listeners = {};\r\n        each(this._responsiveListeners, (listener, type)=>{\r\n            this.platform.removeEventListener(this, type, listener);\r\n        });\r\n        this._responsiveListeners = undefined;\r\n    }\r\n    updateHoverStyle(items, mode, enabled) {\r\n        const prefix = enabled ? 'set' : 'remove';\r\n        let meta, item, i, ilen;\r\n        if (mode === 'dataset') {\r\n            meta = this.getDatasetMeta(items[0].datasetIndex);\r\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n        }\r\n        for(i = 0, ilen = items.length; i < ilen; ++i){\r\n            item = items[i];\r\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n            if (controller) {\r\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n            }\r\n        }\r\n    }\r\n getActiveElements() {\r\n        return this._active || [];\r\n    }\r\n setActiveElements(activeElements) {\r\n        const lastActive = this._active || [];\r\n        const active = activeElements.map(({ datasetIndex , index  })=>{\r\n            const meta = this.getDatasetMeta(datasetIndex);\r\n            if (!meta) {\r\n                throw new Error('No dataset found at index ' + datasetIndex);\r\n            }\r\n            return {\r\n                datasetIndex,\r\n                element: meta.data[index],\r\n                index\r\n            };\r\n        });\r\n        const changed = !_elementsEqual(active, lastActive);\r\n        if (changed) {\r\n            this._active = active;\r\n            this._lastEvent = null;\r\n            this._updateHoverStyles(active, lastActive);\r\n        }\r\n    }\r\n notifyPlugins(hook, args, filter) {\r\n        return this._plugins.notify(this, hook, args, filter);\r\n    }\r\n isPluginEnabled(pluginId) {\r\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\r\n    }\r\n _updateHoverStyles(active, lastActive, replay) {\r\n        const hoverOptions = this.options.hover;\r\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n        const deactivated = diff(lastActive, active);\r\n        const activated = replay ? active : diff(active, lastActive);\r\n        if (deactivated.length) {\r\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n        }\r\n        if (activated.length && hoverOptions.mode) {\r\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n        }\r\n    }\r\n _eventHandler(e, replay) {\r\n        const args = {\r\n            event: e,\r\n            replay,\r\n            cancelable: true,\r\n            inChartArea: this.isPointInArea(e)\r\n        };\r\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\r\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n            return;\r\n        }\r\n        const changed = this._handleEvent(e, replay, args.inChartArea);\r\n        args.cancelable = false;\r\n        this.notifyPlugins('afterEvent', args, eventFilter);\r\n        if (changed || args.changed) {\r\n            this.render();\r\n        }\r\n        return this;\r\n    }\r\n _handleEvent(e, replay, inChartArea) {\r\n        const { _active: lastActive = [] , options  } = this;\r\n        const useFinalPosition = replay;\r\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n        const isClick = _isClickEvent(e);\r\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n        if (inChartArea) {\r\n            this._lastEvent = null;\r\n            callback(options.onHover, [\r\n                e,\r\n                active,\r\n                this\r\n            ], this);\r\n            if (isClick) {\r\n                callback(options.onClick, [\r\n                    e,\r\n                    active,\r\n                    this\r\n                ], this);\r\n            }\r\n        }\r\n        const changed = !_elementsEqual(active, lastActive);\r\n        if (changed || replay) {\r\n            this._active = active;\r\n            this._updateHoverStyles(active, lastActive, replay);\r\n        }\r\n        this._lastEvent = lastEvent;\r\n        return changed;\r\n    }\r\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n        if (e.type === 'mouseout') {\r\n            return [];\r\n        }\r\n        if (!inChartArea) {\r\n            return lastActive;\r\n        }\r\n        const hoverOptions = this.options.hover;\r\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n    }\r\n}\r\nfunction invalidatePlugins() {\r\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\r\n}\r\n\r\n/**\r\n * @namespace Chart._adapters\r\n * @since 2.8.0\r\n * @private\r\n */ function abstract() {\r\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\n/**\r\n * Date adapter (current used by the time scale)\r\n * @namespace Chart._adapters._date\r\n * @memberof Chart._adapters\r\n * @private\r\n */ class DateAdapterBase {\r\n    /**\r\n   * Override default date adapter methods.\r\n   * Accepts type parameter to define options type.\r\n   * @example\r\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\r\n   *   init() {\r\n   *     console.log(this.options.myAdapterOption);\r\n   *   }\r\n   * })\r\n   */ static override(members) {\r\n        Object.assign(DateAdapterBase.prototype, members);\r\n    }\r\n    options;\r\n    constructor(options){\r\n        this.options = options || {};\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    init() {}\r\n    formats() {\r\n        return abstract();\r\n    }\r\n    parse() {\r\n        return abstract();\r\n    }\r\n    format() {\r\n        return abstract();\r\n    }\r\n    add() {\r\n        return abstract();\r\n    }\r\n    diff() {\r\n        return abstract();\r\n    }\r\n    startOf() {\r\n        return abstract();\r\n    }\r\n    endOf() {\r\n        return abstract();\r\n    }\r\n}\r\nvar _adapters = {\r\n    _date: DateAdapterBase\r\n};\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n    if (!scale._cache.$bar) {\r\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n        let values = [];\r\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\r\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n        }\r\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\r\n    }\r\n    return scale._cache.$bar;\r\n}\r\n function computeMinSampleSize(meta) {\r\n    const scale = meta.iScale;\r\n    const values = getAllScaleValues(scale, meta.type);\r\n    let min = scale._length;\r\n    let i, ilen, curr, prev;\r\n    const updateMinAndPrev = ()=>{\r\n        if (curr === 32767 || curr === -32768) {\r\n            return;\r\n        }\r\n        if (defined(prev)) {\r\n            min = Math.min(min, Math.abs(curr - prev) || min);\r\n        }\r\n        prev = curr;\r\n    };\r\n    for(i = 0, ilen = values.length; i < ilen; ++i){\r\n        curr = scale.getPixelForValue(values[i]);\r\n        updateMinAndPrev();\r\n    }\r\n    prev = undefined;\r\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\r\n        curr = scale.getPixelForTick(i);\r\n        updateMinAndPrev();\r\n    }\r\n    return min;\r\n}\r\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n    const thickness = options.barThickness;\r\n    let size, ratio;\r\n    if (isNullOrUndef(thickness)) {\r\n        size = ruler.min * options.categoryPercentage;\r\n        ratio = options.barPercentage;\r\n    } else {\r\n        size = thickness * stackCount;\r\n        ratio = 1;\r\n    }\r\n    return {\r\n        chunk: size / stackCount,\r\n        ratio,\r\n        start: ruler.pixels[index] - size / 2\r\n    };\r\n}\r\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n    const pixels = ruler.pixels;\r\n    const curr = pixels[index];\r\n    let prev = index > 0 ? pixels[index - 1] : null;\r\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n    const percent = options.categoryPercentage;\r\n    if (prev === null) {\r\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n    }\r\n    if (next === null) {\r\n        next = curr + curr - prev;\r\n    }\r\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n    const size = Math.abs(next - prev) / 2 * percent;\r\n    return {\r\n        chunk: size / stackCount,\r\n        ratio: options.barPercentage,\r\n        start\r\n    };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n    const startValue = vScale.parse(entry[0], i);\r\n    const endValue = vScale.parse(entry[1], i);\r\n    const min = Math.min(startValue, endValue);\r\n    const max = Math.max(startValue, endValue);\r\n    let barStart = min;\r\n    let barEnd = max;\r\n    if (Math.abs(min) > Math.abs(max)) {\r\n        barStart = max;\r\n        barEnd = min;\r\n    }\r\n    item[vScale.axis] = barEnd;\r\n    item._custom = {\r\n        barStart,\r\n        barEnd,\r\n        start: startValue,\r\n        end: endValue,\r\n        min,\r\n        max\r\n    };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n    if (isArray(entry)) {\r\n        parseFloatBar(entry, item, vScale, i);\r\n    } else {\r\n        item[vScale.axis] = vScale.parse(entry, i);\r\n    }\r\n    return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = [];\r\n    let i, ilen, item, entry;\r\n    for(i = start, ilen = start + count; i < ilen; ++i){\r\n        entry = data[i];\r\n        item = {};\r\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n        parsed.push(parseValue(entry, item, vScale, i));\r\n    }\r\n    return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n    if (size !== 0) {\r\n        return sign(size);\r\n    }\r\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n    let reverse, start, end, top, bottom;\r\n    if (properties.horizontal) {\r\n        reverse = properties.base > properties.x;\r\n        start = 'left';\r\n        end = 'right';\r\n    } else {\r\n        reverse = properties.base < properties.y;\r\n        start = 'bottom';\r\n        end = 'top';\r\n    }\r\n    if (reverse) {\r\n        top = 'end';\r\n        bottom = 'start';\r\n    } else {\r\n        top = 'start';\r\n        bottom = 'end';\r\n    }\r\n    return {\r\n        start,\r\n        end,\r\n        reverse,\r\n        top,\r\n        bottom\r\n    };\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n    let edge = options.borderSkipped;\r\n    const res = {};\r\n    if (!edge) {\r\n        properties.borderSkipped = res;\r\n        return;\r\n    }\r\n    if (edge === true) {\r\n        properties.borderSkipped = {\r\n            top: true,\r\n            right: true,\r\n            bottom: true,\r\n            left: true\r\n        };\r\n        return;\r\n    }\r\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\r\n    if (edge === 'middle' && stack) {\r\n        properties.enableBorderRadius = true;\r\n        if ((stack._top || 0) === index) {\r\n            edge = top;\r\n        } else if ((stack._bottom || 0) === index) {\r\n            edge = bottom;\r\n        } else {\r\n            res[parseEdge(bottom, start, end, reverse)] = true;\r\n            edge = top;\r\n        }\r\n    }\r\n    res[parseEdge(edge, start, end, reverse)] = true;\r\n    properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n    if (reverse) {\r\n        edge = swap(edge, a, b);\r\n        edge = startEnd(edge, b, a);\r\n    } else {\r\n        edge = startEnd(edge, a, b);\r\n    }\r\n    return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n    return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\r\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n    static id = 'bar';\r\n static defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'bar',\r\n        categoryPercentage: 0.8,\r\n        barPercentage: 0.9,\r\n        grouped: true,\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: [\r\n                    'x',\r\n                    'y',\r\n                    'base',\r\n                    'width',\r\n                    'height'\r\n                ]\r\n            }\r\n        }\r\n    };\r\n static overrides = {\r\n        scales: {\r\n            _index_: {\r\n                type: 'category',\r\n                offset: true,\r\n                grid: {\r\n                    offset: true\r\n                }\r\n            },\r\n            _value_: {\r\n                type: 'linear',\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    };\r\n parsePrimitiveData(meta, data, start, count) {\r\n        return parseArrayOrPrimitive(meta, data, start, count);\r\n    }\r\n parseArrayData(meta, data, start, count) {\r\n        return parseArrayOrPrimitive(meta, data, start, count);\r\n    }\r\n parseObjectData(meta, data, start, count) {\r\n        const { iScale , vScale  } = meta;\r\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\r\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n        const parsed = [];\r\n        let i, ilen, item, obj;\r\n        for(i = start, ilen = start + count; i < ilen; ++i){\r\n            obj = data[i];\r\n            item = {};\r\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n        }\r\n        return parsed;\r\n    }\r\n updateRangeFromParsed(range, scale, parsed, stack) {\r\n        super.updateRangeFromParsed(range, scale, parsed, stack);\r\n        const custom = parsed._custom;\r\n        if (custom && scale === this._cachedMeta.vScale) {\r\n            range.min = Math.min(range.min, custom.min);\r\n            range.max = Math.max(range.max, custom.max);\r\n        }\r\n    }\r\n getMaxOverflow() {\r\n        return 0;\r\n    }\r\n getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const { iScale , vScale  } = meta;\r\n        const parsed = this.getParsed(index);\r\n        const custom = parsed._custom;\r\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n        return {\r\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n            value\r\n        };\r\n    }\r\n    initialize() {\r\n        this.enableOptionSharing = true;\r\n        super.initialize();\r\n        const meta = this._cachedMeta;\r\n        meta.stack = this.getDataset().stack;\r\n    }\r\n    update(mode) {\r\n        const meta = this._cachedMeta;\r\n        this.updateElements(meta.data, 0, meta.data.length, mode);\r\n    }\r\n    updateElements(bars, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const { index , _cachedMeta: { vScale  }  } = this;\r\n        const base = vScale.getBasePixel();\r\n        const horizontal = vScale.isHorizontal();\r\n        const ruler = this._getRuler();\r\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\r\n        for(let i = start; i < start + count; i++){\r\n            const parsed = this.getParsed(i);\r\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\r\n                base,\r\n                head: base\r\n            } : this._calculateBarValuePixels(i);\r\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n            const stack = (parsed._stacks || {})[vScale.axis];\r\n            const properties = {\r\n                horizontal,\r\n                base: vpixels.base,\r\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\r\n                x: horizontal ? vpixels.head : ipixels.center,\r\n                y: horizontal ? ipixels.center : vpixels.head,\r\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n            };\r\n            if (includeOptions) {\r\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n            }\r\n            const options = properties.options || bars[i].options;\r\n            setBorderSkipped(properties, options, stack, index);\r\n            setInflateAmount(properties, options, ruler.ratio);\r\n            this.updateElement(bars[i], i, properties, mode);\r\n        }\r\n    }\r\n _getStacks(last, dataIndex) {\r\n        const { iScale  } = this._cachedMeta;\r\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\r\n        const stacked = iScale.options.stacked;\r\n        const stacks = [];\r\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\r\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\r\n        const skipNull = (meta)=>{\r\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\r\n            const val = parsed && parsed[meta.vScale.axis];\r\n            if (isNullOrUndef(val) || isNaN(val)) {\r\n                return true;\r\n            }\r\n        };\r\n        for (const meta of metasets){\r\n            if (dataIndex !== undefined && skipNull(meta)) {\r\n                continue;\r\n            }\r\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\r\n                stacks.push(meta.stack);\r\n            }\r\n            if (meta.index === last) {\r\n                break;\r\n            }\r\n        }\r\n        if (!stacks.length) {\r\n            stacks.push(undefined);\r\n        }\r\n        return stacks;\r\n    }\r\n _getStackCount(index) {\r\n        return this._getStacks(undefined, index).length;\r\n    }\r\n    _getAxisCount() {\r\n        return this._getAxis().length;\r\n    }\r\n    getFirstScaleIdForIndexAxis() {\r\n        const scales = this.chart.scales;\r\n        const indexScaleId = this.chart.options.indexAxis;\r\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\r\n    }\r\n    _getAxis() {\r\n        const axis = {};\r\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\r\n        for (const dataset of this.chart.data.datasets){\r\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\r\n        }\r\n        return Object.keys(axis);\r\n    }\r\n _getStackIndex(datasetIndex, name, dataIndex) {\r\n        const stacks = this._getStacks(datasetIndex, dataIndex);\r\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\r\n        return index === -1 ? stacks.length - 1 : index;\r\n    }\r\n _getRuler() {\r\n        const opts = this.options;\r\n        const meta = this._cachedMeta;\r\n        const iScale = meta.iScale;\r\n        const pixels = [];\r\n        let i, ilen;\r\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\r\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n        }\r\n        const barThickness = opts.barThickness;\r\n        const min = barThickness || computeMinSampleSize(meta);\r\n        return {\r\n            min,\r\n            pixels,\r\n            start: iScale._startPixel,\r\n            end: iScale._endPixel,\r\n            stackCount: this._getStackCount(),\r\n            scale: iScale,\r\n            grouped: opts.grouped,\r\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n        };\r\n    }\r\n _calculateBarValuePixels(index) {\r\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\r\n        const actualBase = baseValue || 0;\r\n        const parsed = this.getParsed(index);\r\n        const custom = parsed._custom;\r\n        const floating = isFloatBar(custom);\r\n        let value = parsed[vScale.axis];\r\n        let start = 0;\r\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n        let head, size;\r\n        if (length !== value) {\r\n            start = length - value;\r\n            length = value;\r\n        }\r\n        if (floating) {\r\n            value = custom.barStart;\r\n            length = custom.barEnd - custom.barStart;\r\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n                start = 0;\r\n            }\r\n            start += value;\r\n        }\r\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n        let base = vScale.getPixelForValue(startValue);\r\n        if (this.chart.getDataVisibility(index)) {\r\n            head = vScale.getPixelForValue(start + length);\r\n        } else {\r\n            head = base;\r\n        }\r\n        size = head - base;\r\n        if (Math.abs(size) < minBarLength) {\r\n            size = barSign(size, vScale, actualBase) * minBarLength;\r\n            if (value === actualBase) {\r\n                base -= size / 2;\r\n            }\r\n            const startPixel = vScale.getPixelForDecimal(0);\r\n            const endPixel = vScale.getPixelForDecimal(1);\r\n            const min = Math.min(startPixel, endPixel);\r\n            const max = Math.max(startPixel, endPixel);\r\n            base = Math.max(Math.min(base, max), min);\r\n            head = base + size;\r\n            if (_stacked && !floating) {\r\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\r\n            }\r\n        }\r\n        if (base === vScale.getPixelForValue(actualBase)) {\r\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n            base += halfGrid;\r\n            size -= halfGrid;\r\n        }\r\n        return {\r\n            size,\r\n            base,\r\n            head,\r\n            center: head + size / 2\r\n        };\r\n    }\r\n _calculateBarIndexPixels(index, ruler) {\r\n        const scale = ruler.scale;\r\n        const options = this.options;\r\n        const skipNull = options.skipNull;\r\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n        let center, size;\r\n        const axisCount = this._getAxisCount();\r\n        if (ruler.grouped) {\r\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\r\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\r\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\r\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\r\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\r\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n        } else {\r\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n        }\r\n        return {\r\n            base: center - size / 2,\r\n            head: center + size / 2,\r\n            center,\r\n            size\r\n        };\r\n    }\r\n    draw() {\r\n        const meta = this._cachedMeta;\r\n        const vScale = meta.vScale;\r\n        const rects = meta.data;\r\n        const ilen = rects.length;\r\n        let i = 0;\r\n        for(; i < ilen; ++i){\r\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\r\n                rects[i].draw(this._ctx);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass BubbleController extends DatasetController {\r\n    static id = 'bubble';\r\n static defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'point',\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: [\r\n                    'x',\r\n                    'y',\r\n                    'borderWidth',\r\n                    'radius'\r\n                ]\r\n            }\r\n        }\r\n    };\r\n static overrides = {\r\n        scales: {\r\n            x: {\r\n                type: 'linear'\r\n            },\r\n            y: {\r\n                type: 'linear'\r\n            }\r\n        }\r\n    };\r\n    initialize() {\r\n        this.enableOptionSharing = true;\r\n        super.initialize();\r\n    }\r\n parsePrimitiveData(meta, data, start, count) {\r\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n        for(let i = 0; i < parsed.length; i++){\r\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n        }\r\n        return parsed;\r\n    }\r\n parseArrayData(meta, data, start, count) {\r\n        const parsed = super.parseArrayData(meta, data, start, count);\r\n        for(let i = 0; i < parsed.length; i++){\r\n            const item = data[start + i];\r\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n        }\r\n        return parsed;\r\n    }\r\n parseObjectData(meta, data, start, count) {\r\n        const parsed = super.parseObjectData(meta, data, start, count);\r\n        for(let i = 0; i < parsed.length; i++){\r\n            const item = data[start + i];\r\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n        }\r\n        return parsed;\r\n    }\r\n getMaxOverflow() {\r\n        const data = this._cachedMeta.data;\r\n        let max = 0;\r\n        for(let i = data.length - 1; i >= 0; --i){\r\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n        }\r\n        return max > 0 && max;\r\n    }\r\n getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const labels = this.chart.data.labels || [];\r\n        const { xScale , yScale  } = meta;\r\n        const parsed = this.getParsed(index);\r\n        const x = xScale.getLabelForValue(parsed.x);\r\n        const y = yScale.getLabelForValue(parsed.y);\r\n        const r = parsed._custom;\r\n        return {\r\n            label: labels[index] || '',\r\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n        };\r\n    }\r\n    update(mode) {\r\n        const points = this._cachedMeta.data;\r\n        this.updateElements(points, 0, points.length, mode);\r\n    }\r\n    updateElements(points, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const { iScale , vScale  } = this._cachedMeta;\r\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\r\n        const iAxis = iScale.axis;\r\n        const vAxis = vScale.axis;\r\n        for(let i = start; i < start + count; i++){\r\n            const point = points[i];\r\n            const parsed = !reset && this.getParsed(i);\r\n            const properties = {};\r\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n            if (includeOptions) {\r\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n                if (reset) {\r\n                    properties.options.radius = 0;\r\n                }\r\n            }\r\n            this.updateElement(point, i, properties, mode);\r\n        }\r\n    }\r\n resolveDataElementOptions(index, mode) {\r\n        const parsed = this.getParsed(index);\r\n        let values = super.resolveDataElementOptions(index, mode);\r\n        if (values.$shared) {\r\n            values = Object.assign({}, values, {\r\n                $shared: false\r\n            });\r\n        }\r\n        const radius = values.radius;\r\n        if (mode !== 'active') {\r\n            values.radius = 0;\r\n        }\r\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n        return values;\r\n    }\r\n}\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n    let ratioX = 1;\r\n    let ratioY = 1;\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n    if (circumference < TAU) {\r\n        const startAngle = rotation;\r\n        const endAngle = startAngle + circumference;\r\n        const startX = Math.cos(startAngle);\r\n        const startY = Math.sin(startAngle);\r\n        const endX = Math.cos(endAngle);\r\n        const endY = Math.sin(endAngle);\r\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n        const maxX = calcMax(0, startX, endX);\r\n        const maxY = calcMax(HALF_PI, startY, endY);\r\n        const minX = calcMin(PI, startX, endX);\r\n        const minY = calcMin(PI + HALF_PI, startY, endY);\r\n        ratioX = (maxX - minX) / 2;\r\n        ratioY = (maxY - minY) / 2;\r\n        offsetX = -(maxX + minX) / 2;\r\n        offsetY = -(maxY + minY) / 2;\r\n    }\r\n    return {\r\n        ratioX,\r\n        ratioY,\r\n        offsetX,\r\n        offsetY\r\n    };\r\n}\r\nclass DoughnutController extends DatasetController {\r\n    static id = 'doughnut';\r\n static defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'arc',\r\n        animation: {\r\n            animateRotate: true,\r\n            animateScale: false\r\n        },\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: [\r\n                    'circumference',\r\n                    'endAngle',\r\n                    'innerRadius',\r\n                    'outerRadius',\r\n                    'startAngle',\r\n                    'x',\r\n                    'y',\r\n                    'offset',\r\n                    'borderWidth',\r\n                    'spacing'\r\n                ]\r\n            }\r\n        },\r\n        cutout: '50%',\r\n        rotation: 0,\r\n        circumference: 360,\r\n        radius: '100%',\r\n        spacing: 0,\r\n        indexAxis: 'r'\r\n    };\r\n    static descriptors = {\r\n        _scriptable: (name)=>name !== 'spacing',\r\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\r\n    };\r\n static overrides = {\r\n        aspectRatio: 1,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    generateLabels (chart) {\r\n                        const data = chart.data;\r\n                        if (data.labels.length && data.datasets.length) {\r\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\r\n                            return data.labels.map((label, i)=>{\r\n                                const meta = chart.getDatasetMeta(0);\r\n                                const style = meta.controller.getStyle(i);\r\n                                return {\r\n                                    text: label,\r\n                                    fillStyle: style.backgroundColor,\r\n                                    strokeStyle: style.borderColor,\r\n                                    fontColor: color,\r\n                                    lineWidth: style.borderWidth,\r\n                                    pointStyle: pointStyle,\r\n                                    hidden: !chart.getDataVisibility(i),\r\n                                    index: i\r\n                                };\r\n                            });\r\n                        }\r\n                        return [];\r\n                    }\r\n                },\r\n                onClick (e, legendItem, legend) {\r\n                    legend.chart.toggleDataVisibility(legendItem.index);\r\n                    legend.chart.update();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    constructor(chart, datasetIndex){\r\n        super(chart, datasetIndex);\r\n        this.enableOptionSharing = true;\r\n        this.innerRadius = undefined;\r\n        this.outerRadius = undefined;\r\n        this.offsetX = undefined;\r\n        this.offsetY = undefined;\r\n    }\r\n    linkScales() {}\r\n parse(start, count) {\r\n        const data = this.getDataset().data;\r\n        const meta = this._cachedMeta;\r\n        if (this._parsing === false) {\r\n            meta._parsed = data;\r\n        } else {\r\n            let getter = (i)=>+data[i];\r\n            if (isObject(data[start])) {\r\n                const { key ='value'  } = this._parsing;\r\n                getter = (i)=>+resolveObjectKey(data[i], key);\r\n            }\r\n            let i, ilen;\r\n            for(i = start, ilen = start + count; i < ilen; ++i){\r\n                meta._parsed[i] = getter(i);\r\n            }\r\n        }\r\n    }\r\n _getRotation() {\r\n        return toRadians(this.options.rotation - 90);\r\n    }\r\n _getCircumference() {\r\n        return toRadians(this.options.circumference);\r\n    }\r\n _getRotationExtents() {\r\n        let min = TAU;\r\n        let max = -TAU;\r\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\r\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\r\n                const controller = this.chart.getDatasetMeta(i).controller;\r\n                const rotation = controller._getRotation();\r\n                const circumference = controller._getCircumference();\r\n                min = Math.min(min, rotation);\r\n                max = Math.max(max, rotation + circumference);\r\n            }\r\n        }\r\n        return {\r\n            rotation: min,\r\n            circumference: max - min\r\n        };\r\n    }\r\n update(mode) {\r\n        const chart = this.chart;\r\n        const { chartArea  } = chart;\r\n        const meta = this._cachedMeta;\r\n        const arcs = meta.data;\r\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n        const chartWeight = this._getRingWeight(this.index);\r\n        const { circumference , rotation  } = this._getRotationExtents();\r\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\r\n        const maxWidth = (chartArea.width - spacing) / ratioX;\r\n        const maxHeight = (chartArea.height - spacing) / ratioY;\r\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n        const outerRadius = toDimension(this.options.radius, maxRadius);\r\n        const innerRadius = Math.max(outerRadius * cutout, 0);\r\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n        this.offsetX = offsetX * outerRadius;\r\n        this.offsetY = offsetY * outerRadius;\r\n        meta.total = this.calculateTotal();\r\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n        this.updateElements(arcs, 0, arcs.length, mode);\r\n    }\r\n _circumference(i, reset) {\r\n        const opts = this.options;\r\n        const meta = this._cachedMeta;\r\n        const circumference = this._getCircumference();\r\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n            return 0;\r\n        }\r\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n    }\r\n    updateElements(arcs, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const chart = this.chart;\r\n        const chartArea = chart.chartArea;\r\n        const opts = chart.options;\r\n        const animationOpts = opts.animation;\r\n        const centerX = (chartArea.left + chartArea.right) / 2;\r\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n        const animateScale = reset && animationOpts.animateScale;\r\n        const innerRadius = animateScale ? 0 : this.innerRadius;\r\n        const outerRadius = animateScale ? 0 : this.outerRadius;\r\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\r\n        let startAngle = this._getRotation();\r\n        let i;\r\n        for(i = 0; i < start; ++i){\r\n            startAngle += this._circumference(i, reset);\r\n        }\r\n        for(i = start; i < start + count; ++i){\r\n            const circumference = this._circumference(i, reset);\r\n            const arc = arcs[i];\r\n            const properties = {\r\n                x: centerX + this.offsetX,\r\n                y: centerY + this.offsetY,\r\n                startAngle,\r\n                endAngle: startAngle + circumference,\r\n                circumference,\r\n                outerRadius,\r\n                innerRadius\r\n            };\r\n            if (includeOptions) {\r\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n            }\r\n            startAngle += circumference;\r\n            this.updateElement(arc, i, properties, mode);\r\n        }\r\n    }\r\n    calculateTotal() {\r\n        const meta = this._cachedMeta;\r\n        const metaData = meta.data;\r\n        let total = 0;\r\n        let i;\r\n        for(i = 0; i < metaData.length; i++){\r\n            const value = meta._parsed[i];\r\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n                total += Math.abs(value);\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n    calculateCircumference(value) {\r\n        const total = this._cachedMeta.total;\r\n        if (total > 0 && !isNaN(value)) {\r\n            return TAU * (Math.abs(value) / total);\r\n        }\r\n        return 0;\r\n    }\r\n    getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const chart = this.chart;\r\n        const labels = chart.data.labels || [];\r\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n        return {\r\n            label: labels[index] || '',\r\n            value\r\n        };\r\n    }\r\n    getMaxBorderWidth(arcs) {\r\n        let max = 0;\r\n        const chart = this.chart;\r\n        let i, ilen, meta, controller, options;\r\n        if (!arcs) {\r\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\r\n                if (chart.isDatasetVisible(i)) {\r\n                    meta = chart.getDatasetMeta(i);\r\n                    arcs = meta.data;\r\n                    controller = meta.controller;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!arcs) {\r\n            return 0;\r\n        }\r\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\r\n            options = controller.resolveDataElementOptions(i);\r\n            if (options.borderAlign !== 'inner') {\r\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n    getMaxOffset(arcs) {\r\n        let max = 0;\r\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\r\n            const options = this.resolveDataElementOptions(i);\r\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n        }\r\n        return max;\r\n    }\r\n _getRingWeightOffset(datasetIndex) {\r\n        let ringWeightOffset = 0;\r\n        for(let i = 0; i < datasetIndex; ++i){\r\n            if (this.chart.isDatasetVisible(i)) {\r\n                ringWeightOffset += this._getRingWeight(i);\r\n            }\r\n        }\r\n        return ringWeightOffset;\r\n    }\r\n _getRingWeight(datasetIndex) {\r\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n    }\r\n _getVisibleDatasetWeightTotal() {\r\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n    }\r\n}\r\n\r\nclass LineController extends DatasetController {\r\n    static id = 'line';\r\n static defaults = {\r\n        datasetElementType: 'line',\r\n        dataElementType: 'point',\r\n        showLine: true,\r\n        spanGaps: false\r\n    };\r\n static overrides = {\r\n        scales: {\r\n            _index_: {\r\n                type: 'category'\r\n            },\r\n            _value_: {\r\n                type: 'linear'\r\n            }\r\n        }\r\n    };\r\n    initialize() {\r\n        this.enableOptionSharing = true;\r\n        this.supportsDecimation = true;\r\n        super.initialize();\r\n    }\r\n    update(mode) {\r\n        const meta = this._cachedMeta;\r\n        const { dataset: line , data: points = [] , _dataset  } = meta;\r\n        const animationsDisabled = this.chart._animationsDisabled;\r\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n        this._drawStart = start;\r\n        this._drawCount = count;\r\n        if (_scaleRangesChanged(meta)) {\r\n            start = 0;\r\n            count = points.length;\r\n        }\r\n        line._chart = this.chart;\r\n        line._datasetIndex = this.index;\r\n        line._decimated = !!_dataset._decimated;\r\n        line.points = points;\r\n        const options = this.resolveDatasetElementOptions(mode);\r\n        if (!this.options.showLine) {\r\n            options.borderWidth = 0;\r\n        }\r\n        options.segment = this.options.segment;\r\n        this.updateElement(line, undefined, {\r\n            animated: !animationsDisabled,\r\n            options\r\n        }, mode);\r\n        this.updateElements(points, start, count, mode);\r\n    }\r\n    updateElements(points, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\r\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\r\n        const iAxis = iScale.axis;\r\n        const vAxis = vScale.axis;\r\n        const { spanGaps , segment  } = this.options;\r\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n        const end = start + count;\r\n        const pointsCount = points.length;\r\n        let prevParsed = start > 0 && this.getParsed(start - 1);\r\n        for(let i = 0; i < pointsCount; ++i){\r\n            const point = points[i];\r\n            const properties = directUpdate ? point : {};\r\n            if (i < start || i >= end) {\r\n                properties.skip = true;\r\n                continue;\r\n            }\r\n            const parsed = this.getParsed(i);\r\n            const nullData = isNullOrUndef(parsed[vAxis]);\r\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n            if (segment) {\r\n                properties.parsed = parsed;\r\n                properties.raw = _dataset.data[i];\r\n            }\r\n            if (includeOptions) {\r\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n            }\r\n            if (!directUpdate) {\r\n                this.updateElement(point, i, properties, mode);\r\n            }\r\n            prevParsed = parsed;\r\n        }\r\n    }\r\n getMaxOverflow() {\r\n        const meta = this._cachedMeta;\r\n        const dataset = meta.dataset;\r\n        const border = dataset.options && dataset.options.borderWidth || 0;\r\n        const data = meta.data || [];\r\n        if (!data.length) {\r\n            return border;\r\n        }\r\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n        return Math.max(border, firstPoint, lastPoint) / 2;\r\n    }\r\n    draw() {\r\n        const meta = this._cachedMeta;\r\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n        super.draw();\r\n    }\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n    static id = 'polarArea';\r\n static defaults = {\r\n        dataElementType: 'arc',\r\n        animation: {\r\n            animateRotate: true,\r\n            animateScale: true\r\n        },\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: [\r\n                    'x',\r\n                    'y',\r\n                    'startAngle',\r\n                    'endAngle',\r\n                    'innerRadius',\r\n                    'outerRadius'\r\n                ]\r\n            }\r\n        },\r\n        indexAxis: 'r',\r\n        startAngle: 0\r\n    };\r\n static overrides = {\r\n        aspectRatio: 1,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    generateLabels (chart) {\r\n                        const data = chart.data;\r\n                        if (data.labels.length && data.datasets.length) {\r\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\r\n                            return data.labels.map((label, i)=>{\r\n                                const meta = chart.getDatasetMeta(0);\r\n                                const style = meta.controller.getStyle(i);\r\n                                return {\r\n                                    text: label,\r\n                                    fillStyle: style.backgroundColor,\r\n                                    strokeStyle: style.borderColor,\r\n                                    fontColor: color,\r\n                                    lineWidth: style.borderWidth,\r\n                                    pointStyle: pointStyle,\r\n                                    hidden: !chart.getDataVisibility(i),\r\n                                    index: i\r\n                                };\r\n                            });\r\n                        }\r\n                        return [];\r\n                    }\r\n                },\r\n                onClick (e, legendItem, legend) {\r\n                    legend.chart.toggleDataVisibility(legendItem.index);\r\n                    legend.chart.update();\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            r: {\r\n                type: 'radialLinear',\r\n                angleLines: {\r\n                    display: false\r\n                },\r\n                beginAtZero: true,\r\n                grid: {\r\n                    circular: true\r\n                },\r\n                pointLabels: {\r\n                    display: false\r\n                },\r\n                startAngle: 0\r\n            }\r\n        }\r\n    };\r\n    constructor(chart, datasetIndex){\r\n        super(chart, datasetIndex);\r\n        this.innerRadius = undefined;\r\n        this.outerRadius = undefined;\r\n    }\r\n    getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const chart = this.chart;\r\n        const labels = chart.data.labels || [];\r\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n        return {\r\n            label: labels[index] || '',\r\n            value\r\n        };\r\n    }\r\n    parseObjectData(meta, data, start, count) {\r\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n    }\r\n    update(mode) {\r\n        const arcs = this._cachedMeta.data;\r\n        this._updateRadius();\r\n        this.updateElements(arcs, 0, arcs.length, mode);\r\n    }\r\n getMinMax() {\r\n        const meta = this._cachedMeta;\r\n        const range = {\r\n            min: Number.POSITIVE_INFINITY,\r\n            max: Number.NEGATIVE_INFINITY\r\n        };\r\n        meta.data.forEach((element, index)=>{\r\n            const parsed = this.getParsed(index).r;\r\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n                if (parsed < range.min) {\r\n                    range.min = parsed;\r\n                }\r\n                if (parsed > range.max) {\r\n                    range.max = parsed;\r\n                }\r\n            }\r\n        });\r\n        return range;\r\n    }\r\n _updateRadius() {\r\n        const chart = this.chart;\r\n        const chartArea = chart.chartArea;\r\n        const opts = chart.options;\r\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n        const outerRadius = Math.max(minSize / 2, 0);\r\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\r\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n        this.outerRadius = outerRadius - radiusLength * this.index;\r\n        this.innerRadius = this.outerRadius - radiusLength;\r\n    }\r\n    updateElements(arcs, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const chart = this.chart;\r\n        const opts = chart.options;\r\n        const animationOpts = opts.animation;\r\n        const scale = this._cachedMeta.rScale;\r\n        const centerX = scale.xCenter;\r\n        const centerY = scale.yCenter;\r\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n        let angle = datasetStartAngle;\r\n        let i;\r\n        const defaultAngle = 360 / this.countVisibleElements();\r\n        for(i = 0; i < start; ++i){\r\n            angle += this._computeAngle(i, mode, defaultAngle);\r\n        }\r\n        for(i = start; i < start + count; i++){\r\n            const arc = arcs[i];\r\n            let startAngle = angle;\r\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n            angle = endAngle;\r\n            if (reset) {\r\n                if (animationOpts.animateScale) {\r\n                    outerRadius = 0;\r\n                }\r\n                if (animationOpts.animateRotate) {\r\n                    startAngle = endAngle = datasetStartAngle;\r\n                }\r\n            }\r\n            const properties = {\r\n                x: centerX,\r\n                y: centerY,\r\n                innerRadius: 0,\r\n                outerRadius,\r\n                startAngle,\r\n                endAngle,\r\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n            };\r\n            this.updateElement(arc, i, properties, mode);\r\n        }\r\n    }\r\n    countVisibleElements() {\r\n        const meta = this._cachedMeta;\r\n        let count = 0;\r\n        meta.data.forEach((element, index)=>{\r\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n _computeAngle(index, mode, defaultAngle) {\r\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\r\n    }\r\n}\r\n\r\nclass PieController extends DoughnutController {\r\n    static id = 'pie';\r\n static defaults = {\r\n        cutout: 0,\r\n        rotation: 0,\r\n        circumference: 360,\r\n        radius: '100%'\r\n    };\r\n}\r\n\r\nclass RadarController extends DatasetController {\r\n    static id = 'radar';\r\n static defaults = {\r\n        datasetElementType: 'line',\r\n        dataElementType: 'point',\r\n        indexAxis: 'r',\r\n        showLine: true,\r\n        elements: {\r\n            line: {\r\n                fill: 'start'\r\n            }\r\n        }\r\n    };\r\n static overrides = {\r\n        aspectRatio: 1,\r\n        scales: {\r\n            r: {\r\n                type: 'radialLinear'\r\n            }\r\n        }\r\n    };\r\n getLabelAndValue(index) {\r\n        const vScale = this._cachedMeta.vScale;\r\n        const parsed = this.getParsed(index);\r\n        return {\r\n            label: vScale.getLabels()[index],\r\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n        };\r\n    }\r\n    parseObjectData(meta, data, start, count) {\r\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n    }\r\n    update(mode) {\r\n        const meta = this._cachedMeta;\r\n        const line = meta.dataset;\r\n        const points = meta.data || [];\r\n        const labels = meta.iScale.getLabels();\r\n        line.points = points;\r\n        if (mode !== 'resize') {\r\n            const options = this.resolveDatasetElementOptions(mode);\r\n            if (!this.options.showLine) {\r\n                options.borderWidth = 0;\r\n            }\r\n            const properties = {\r\n                _loop: true,\r\n                _fullLoop: labels.length === points.length,\r\n                options\r\n            };\r\n            this.updateElement(line, undefined, properties, mode);\r\n        }\r\n        this.updateElements(points, 0, points.length, mode);\r\n    }\r\n    updateElements(points, start, count, mode) {\r\n        const scale = this._cachedMeta.rScale;\r\n        const reset = mode === 'reset';\r\n        for(let i = start; i < start + count; i++){\r\n            const point = points[i];\r\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n            const x = reset ? scale.xCenter : pointPosition.x;\r\n            const y = reset ? scale.yCenter : pointPosition.y;\r\n            const properties = {\r\n                x,\r\n                y,\r\n                angle: pointPosition.angle,\r\n                skip: isNaN(x) || isNaN(y),\r\n                options\r\n            };\r\n            this.updateElement(point, i, properties, mode);\r\n        }\r\n    }\r\n}\r\n\r\nclass ScatterController extends DatasetController {\r\n    static id = 'scatter';\r\n static defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'point',\r\n        showLine: false,\r\n        fill: false\r\n    };\r\n static overrides = {\r\n        interaction: {\r\n            mode: 'point'\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: 'linear'\r\n            },\r\n            y: {\r\n                type: 'linear'\r\n            }\r\n        }\r\n    };\r\n getLabelAndValue(index) {\r\n        const meta = this._cachedMeta;\r\n        const labels = this.chart.data.labels || [];\r\n        const { xScale , yScale  } = meta;\r\n        const parsed = this.getParsed(index);\r\n        const x = xScale.getLabelForValue(parsed.x);\r\n        const y = yScale.getLabelForValue(parsed.y);\r\n        return {\r\n            label: labels[index] || '',\r\n            value: '(' + x + ', ' + y + ')'\r\n        };\r\n    }\r\n    update(mode) {\r\n        const meta = this._cachedMeta;\r\n        const { data: points = []  } = meta;\r\n        const animationsDisabled = this.chart._animationsDisabled;\r\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n        this._drawStart = start;\r\n        this._drawCount = count;\r\n        if (_scaleRangesChanged(meta)) {\r\n            start = 0;\r\n            count = points.length;\r\n        }\r\n        if (this.options.showLine) {\r\n            if (!this.datasetElementType) {\r\n                this.addElements();\r\n            }\r\n            const { dataset: line , _dataset  } = meta;\r\n            line._chart = this.chart;\r\n            line._datasetIndex = this.index;\r\n            line._decimated = !!_dataset._decimated;\r\n            line.points = points;\r\n            const options = this.resolveDatasetElementOptions(mode);\r\n            options.segment = this.options.segment;\r\n            this.updateElement(line, undefined, {\r\n                animated: !animationsDisabled,\r\n                options\r\n            }, mode);\r\n        } else if (this.datasetElementType) {\r\n            delete meta.dataset;\r\n            this.datasetElementType = false;\r\n        }\r\n        this.updateElements(points, start, count, mode);\r\n    }\r\n    addElements() {\r\n        const { showLine  } = this.options;\r\n        if (!this.datasetElementType && showLine) {\r\n            this.datasetElementType = this.chart.registry.getElement('line');\r\n        }\r\n        super.addElements();\r\n    }\r\n    updateElements(points, start, count, mode) {\r\n        const reset = mode === 'reset';\r\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\r\n        const firstOpts = this.resolveDataElementOptions(start, mode);\r\n        const sharedOptions = this.getSharedOptions(firstOpts);\r\n        const includeOptions = this.includeOptions(mode, sharedOptions);\r\n        const iAxis = iScale.axis;\r\n        const vAxis = vScale.axis;\r\n        const { spanGaps , segment  } = this.options;\r\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n        let prevParsed = start > 0 && this.getParsed(start - 1);\r\n        for(let i = start; i < start + count; ++i){\r\n            const point = points[i];\r\n            const parsed = this.getParsed(i);\r\n            const properties = directUpdate ? point : {};\r\n            const nullData = isNullOrUndef(parsed[vAxis]);\r\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n            if (segment) {\r\n                properties.parsed = parsed;\r\n                properties.raw = _dataset.data[i];\r\n            }\r\n            if (includeOptions) {\r\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n            }\r\n            if (!directUpdate) {\r\n                this.updateElement(point, i, properties, mode);\r\n            }\r\n            prevParsed = parsed;\r\n        }\r\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    }\r\n getMaxOverflow() {\r\n        const meta = this._cachedMeta;\r\n        const data = meta.data || [];\r\n        if (!this.options.showLine) {\r\n            let max = 0;\r\n            for(let i = data.length - 1; i >= 0; --i){\r\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n            }\r\n            return max > 0 && max;\r\n        }\r\n        const dataset = meta.dataset;\r\n        const border = dataset.options && dataset.options.borderWidth || 0;\r\n        if (!data.length) {\r\n            return border;\r\n        }\r\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n        return Math.max(border, firstPoint, lastPoint) / 2;\r\n    }\r\n}\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPieController: PieController,\r\nPolarAreaController: PolarAreaController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction clipSelf(ctx, element, endAngle) {\r\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\r\n    const { borderWidth , borderJoinStyle  } = options;\r\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\r\n    if (innerRadius > 0) {\r\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\r\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\r\n    } else {\r\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\r\n        if (borderJoinStyle === 'round') {\r\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\r\n        } else if (borderJoinStyle === 'bevel') {\r\n            const r = 2 * clipWidth * clipWidth;\r\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\r\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\r\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\r\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\r\n            ctx.lineTo(endX, endY);\r\n            ctx.lineTo(startX, startY);\r\n        }\r\n    }\r\n    ctx.closePath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    ctx.clip('evenodd');\r\n}\r\nfunction clipArc(ctx, element, endAngle) {\r\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\r\n    let angleMargin = pixelMargin / outerRadius;\r\n    // Draw an inner border by clipping the arc and drawing a double-width border\r\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n    if (innerRadius > pixelMargin) {\r\n        angleMargin = pixelMargin / innerRadius;\r\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n    } else {\r\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n    }\r\n    ctx.closePath();\r\n    ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n    return _readValueToProps(value, [\r\n        'outerStart',\r\n        'outerEnd',\r\n        'innerStart',\r\n        'innerEnd'\r\n    ]);\r\n}\r\n/**\r\n * Parse border radius from the provided options\r\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n    const o = toRadiusCorners(arc.options.borderRadius);\r\n    const halfThickness = (outerRadius - innerRadius) / 2;\r\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n    // Outer limits are complicated. We want to compute the available angular distance at\r\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\r\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\r\n    //\r\n    // If the borderRadius is large, that value can become negative.\r\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\r\n    // we know that the thickness term will dominate and compute the limits at that point\r\n    const computeOuterLimit = (val)=>{\r\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n    };\r\n    return {\r\n        outerStart: computeOuterLimit(o.outerStart),\r\n        outerEnd: computeOuterLimit(o.outerEnd),\r\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\r\n    };\r\n}\r\n/**\r\n * Convert (r, 𝜃) to (x, y)\r\n */ function rThetaToXY(r, theta, x, y) {\r\n    return {\r\n        x: x + r * Math.cos(theta),\r\n        y: y + r * Math.sin(theta)\r\n    };\r\n}\r\n/**\r\n * Path the arc, respecting border radius by separating into left and right halves.\r\n *\r\n *   Start      End\r\n *\r\n *    1--->a--->2    Outer\r\n *   /           \\\r\n *   8           3\r\n *   |           |\r\n *   |           |\r\n *   7           4\r\n *   \\           /\r\n *    6<---b<---5    Inner\r\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\r\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\r\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n    let spacingOffset = 0;\r\n    const alpha = end - start;\r\n    if (spacing) {\r\n        // When spacing is present, it is the same for all items\r\n        // So we adjust the start and end angle of the arc such that\r\n        // the distance is the same as it would be without the spacing\r\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\r\n        spacingOffset = (alpha - adjustedAngle) / 2;\r\n    }\r\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n    const angleOffset = (alpha - beta) / 2;\r\n    const startAngle = start + angleOffset + spacingOffset;\r\n    const endAngle = end - angleOffset - spacingOffset;\r\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n    const outerStartAdjustedRadius = outerRadius - outerStart;\r\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n    const innerStartAdjustedRadius = innerRadius + innerStart;\r\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n    ctx.beginPath();\r\n    if (circular) {\r\n        // The first arc segments from point 1 to point a to point 2\r\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\r\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\r\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\r\n        // The corner segment from point 2 to point 3\r\n        if (outerEnd > 0) {\r\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n        }\r\n        // The line from point 3 to point 4\r\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n        ctx.lineTo(p4.x, p4.y);\r\n        // The corner segment from point 4 to point 5\r\n        if (innerEnd > 0) {\r\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n        }\r\n        // The inner arc from point 5 to point b to point 6\r\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\r\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\r\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\r\n        // The corner segment from point 6 to point 7\r\n        if (innerStart > 0) {\r\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n        }\r\n        // The line from point 7 to point 8\r\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n        ctx.lineTo(p8.x, p8.y);\r\n        // The corner segment from point 8 to point 1\r\n        if (outerStart > 0) {\r\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n        }\r\n    } else {\r\n        ctx.moveTo(x, y);\r\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n        ctx.lineTo(outerStartX, outerStartY);\r\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n        ctx.lineTo(outerEndX, outerEndY);\r\n    }\r\n    ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing, circular) {\r\n    const { fullCircles , startAngle , circumference  } = element;\r\n    let endAngle = element.endAngle;\r\n    if (fullCircles) {\r\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n        for(let i = 0; i < fullCircles; ++i){\r\n            ctx.fill();\r\n        }\r\n        if (!isNaN(circumference)) {\r\n            endAngle = startAngle + (circumference % TAU || TAU);\r\n        }\r\n    }\r\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n    ctx.fill();\r\n    return endAngle;\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, circular) {\r\n    const { fullCircles , startAngle , circumference , options  } = element;\r\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\r\n    const inner = options.borderAlign === 'inner';\r\n    if (!borderWidth) {\r\n        return;\r\n    }\r\n    ctx.setLineDash(borderDash || []);\r\n    ctx.lineDashOffset = borderDashOffset;\r\n    if (inner) {\r\n        ctx.lineWidth = borderWidth * 2;\r\n        ctx.lineJoin = borderJoinStyle || 'round';\r\n    } else {\r\n        ctx.lineWidth = borderWidth;\r\n        ctx.lineJoin = borderJoinStyle || 'bevel';\r\n    }\r\n    let endAngle = element.endAngle;\r\n    if (fullCircles) {\r\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n        for(let i = 0; i < fullCircles; ++i){\r\n            ctx.stroke();\r\n        }\r\n        if (!isNaN(circumference)) {\r\n            endAngle = startAngle + (circumference % TAU || TAU);\r\n        }\r\n    }\r\n    if (inner) {\r\n        clipArc(ctx, element, endAngle);\r\n    }\r\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\r\n        clipSelf(ctx, element, endAngle);\r\n    }\r\n    if (!fullCircles) {\r\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n        ctx.stroke();\r\n    }\r\n}\r\nclass ArcElement extends Element {\r\n    static id = 'arc';\r\n    static defaults = {\r\n        borderAlign: 'center',\r\n        borderColor: '#fff',\r\n        borderDash: [],\r\n        borderDashOffset: 0,\r\n        borderJoinStyle: undefined,\r\n        borderRadius: 0,\r\n        borderWidth: 2,\r\n        offset: 0,\r\n        spacing: 0,\r\n        angle: undefined,\r\n        circular: true,\r\n        selfJoin: false\r\n    };\r\n    static defaultRoutes = {\r\n        backgroundColor: 'backgroundColor'\r\n    };\r\n    static descriptors = {\r\n        _scriptable: true,\r\n        _indexable: (name)=>name !== 'borderDash'\r\n    };\r\n    circumference;\r\n    endAngle;\r\n    fullCircles;\r\n    innerRadius;\r\n    outerRadius;\r\n    pixelMargin;\r\n    startAngle;\r\n    constructor(cfg){\r\n        super();\r\n        this.options = undefined;\r\n        this.circumference = undefined;\r\n        this.startAngle = undefined;\r\n        this.endAngle = undefined;\r\n        this.innerRadius = undefined;\r\n        this.outerRadius = undefined;\r\n        this.pixelMargin = 0;\r\n        this.fullCircles = 0;\r\n        if (cfg) {\r\n            Object.assign(this, cfg);\r\n        }\r\n    }\r\n    inRange(chartX, chartY, useFinalPosition) {\r\n        const point = this.getProps([\r\n            'x',\r\n            'y'\r\n        ], useFinalPosition);\r\n        const { angle , distance  } = getAngleFromPoint(point, {\r\n            x: chartX,\r\n            y: chartY\r\n        });\r\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\r\n            'startAngle',\r\n            'endAngle',\r\n            'innerRadius',\r\n            'outerRadius',\r\n            'circumference'\r\n        ], useFinalPosition);\r\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\r\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\r\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\r\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n        return betweenAngles && withinRadius;\r\n    }\r\n    getCenterPoint(useFinalPosition) {\r\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\r\n            'x',\r\n            'y',\r\n            'startAngle',\r\n            'endAngle',\r\n            'innerRadius',\r\n            'outerRadius'\r\n        ], useFinalPosition);\r\n        const { offset , spacing  } = this.options;\r\n        const halfAngle = (startAngle + endAngle) / 2;\r\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n        return {\r\n            x: x + Math.cos(halfAngle) * halfRadius,\r\n            y: y + Math.sin(halfAngle) * halfRadius\r\n        };\r\n    }\r\n    tooltipPosition(useFinalPosition) {\r\n        return this.getCenterPoint(useFinalPosition);\r\n    }\r\n    draw(ctx) {\r\n        const { options , circumference  } = this;\r\n        const offset = (options.offset || 0) / 4;\r\n        const spacing = (options.spacing || 0) / 2;\r\n        const circular = options.circular;\r\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\r\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n            return;\r\n        }\r\n        ctx.save();\r\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\r\n        const radiusOffset = offset * fix;\r\n        ctx.fillStyle = options.backgroundColor;\r\n        ctx.strokeStyle = options.borderColor;\r\n        drawArc(ctx, this, radiusOffset, spacing, circular);\r\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n    ctx.lineTo(target.x, target.y);\r\n}\r\n function getLineMethod(options) {\r\n    if (options.stepped) {\r\n        return _steppedLineTo;\r\n    }\r\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n        return _bezierCurveTo;\r\n    }\r\n    return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n    const count = points.length;\r\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\r\n    const { start: segmentStart , end: segmentEnd  } = segment;\r\n    const start = Math.max(paramsStart, segmentStart);\r\n    const end = Math.min(paramsEnd, segmentEnd);\r\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n    return {\r\n        count,\r\n        start,\r\n        loop: segment.loop,\r\n        ilen: end < start && !outside ? count + end - start : end - start\r\n    };\r\n}\r\n function pathSegment(ctx, line, segment, params) {\r\n    const { points , options  } = line;\r\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\r\n    const lineMethod = getLineMethod(options);\r\n    let { move =true , reverse  } = params || {};\r\n    let i, point, prev;\r\n    for(i = 0; i <= ilen; ++i){\r\n        point = points[(start + (reverse ? ilen - i : i)) % count];\r\n        if (point.skip) {\r\n            continue;\r\n        } else if (move) {\r\n            ctx.moveTo(point.x, point.y);\r\n            move = false;\r\n        } else {\r\n            lineMethod(ctx, prev, point, reverse, options.stepped);\r\n        }\r\n        prev = point;\r\n    }\r\n    if (loop) {\r\n        point = points[(start + (reverse ? ilen : 0)) % count];\r\n        lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    return !!loop;\r\n}\r\n function fastPathSegment(ctx, line, segment, params) {\r\n    const points = line.points;\r\n    const { count , start , ilen  } = pathVars(points, segment, params);\r\n    const { move =true , reverse  } = params || {};\r\n    let avgX = 0;\r\n    let countX = 0;\r\n    let i, point, prevX, minY, maxY, lastY;\r\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\r\n    const drawX = ()=>{\r\n        if (minY !== maxY) {\r\n            ctx.lineTo(avgX, maxY);\r\n            ctx.lineTo(avgX, minY);\r\n            ctx.lineTo(avgX, lastY);\r\n        }\r\n    };\r\n    if (move) {\r\n        point = points[pointIndex(0)];\r\n        ctx.moveTo(point.x, point.y);\r\n    }\r\n    for(i = 0; i <= ilen; ++i){\r\n        point = points[pointIndex(i)];\r\n        if (point.skip) {\r\n            continue;\r\n        }\r\n        const x = point.x;\r\n        const y = point.y;\r\n        const truncX = x | 0;\r\n        if (truncX === prevX) {\r\n            if (y < minY) {\r\n                minY = y;\r\n            } else if (y > maxY) {\r\n                maxY = y;\r\n            }\r\n            avgX = (countX * avgX + x) / ++countX;\r\n        } else {\r\n            drawX();\r\n            ctx.lineTo(x, y);\r\n            prevX = truncX;\r\n            countX = 0;\r\n            minY = maxY = y;\r\n        }\r\n        lastY = y;\r\n    }\r\n    drawX();\r\n}\r\n function _getSegmentMethod(line) {\r\n    const opts = line.options;\r\n    const borderDash = opts.borderDash && opts.borderDash.length;\r\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n    return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\n function _getInterpolationMethod(options) {\r\n    if (options.stepped) {\r\n        return _steppedInterpolation;\r\n    }\r\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n        return _bezierInterpolation;\r\n    }\r\n    return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n    let path = line._path;\r\n    if (!path) {\r\n        path = line._path = new Path2D();\r\n        if (line.path(path, start, count)) {\r\n            path.closePath();\r\n        }\r\n    }\r\n    setStyle(ctx, line.options);\r\n    ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n    const { segments , options  } = line;\r\n    const segmentMethod = _getSegmentMethod(line);\r\n    for (const segment of segments){\r\n        setStyle(ctx, options, segment.style);\r\n        ctx.beginPath();\r\n        if (segmentMethod(ctx, line, segment, {\r\n            start,\r\n            end: start + count - 1\r\n        })) {\r\n            ctx.closePath();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n    if (usePath2D && !line.options.segment) {\r\n        strokePathWithCache(ctx, line, start, count);\r\n    } else {\r\n        strokePathDirect(ctx, line, start, count);\r\n    }\r\n}\r\nclass LineElement extends Element {\r\n    static id = 'line';\r\n static defaults = {\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0,\r\n        borderJoinStyle: 'miter',\r\n        borderWidth: 3,\r\n        capBezierPoints: true,\r\n        cubicInterpolationMode: 'default',\r\n        fill: false,\r\n        spanGaps: false,\r\n        stepped: false,\r\n        tension: 0\r\n    };\r\n static defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n    static descriptors = {\r\n        _scriptable: true,\r\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\r\n    };\r\n    constructor(cfg){\r\n        super();\r\n        this.animated = true;\r\n        this.options = undefined;\r\n        this._chart = undefined;\r\n        this._loop = undefined;\r\n        this._fullLoop = undefined;\r\n        this._path = undefined;\r\n        this._points = undefined;\r\n        this._segments = undefined;\r\n        this._decimated = false;\r\n        this._pointsUpdated = false;\r\n        this._datasetIndex = undefined;\r\n        if (cfg) {\r\n            Object.assign(this, cfg);\r\n        }\r\n    }\r\n    updateControlPoints(chartArea, indexAxis) {\r\n        const options = this.options;\r\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n            this._pointsUpdated = true;\r\n        }\r\n    }\r\n    set points(points) {\r\n        this._points = points;\r\n        delete this._segments;\r\n        delete this._path;\r\n        this._pointsUpdated = false;\r\n    }\r\n    get points() {\r\n        return this._points;\r\n    }\r\n    get segments() {\r\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n    }\r\n first() {\r\n        const segments = this.segments;\r\n        const points = this.points;\r\n        return segments.length && points[segments[0].start];\r\n    }\r\n last() {\r\n        const segments = this.segments;\r\n        const points = this.points;\r\n        const count = segments.length;\r\n        return count && points[segments[count - 1].end];\r\n    }\r\n interpolate(point, property) {\r\n        const options = this.options;\r\n        const value = point[property];\r\n        const points = this.points;\r\n        const segments = _boundSegments(this, {\r\n            property,\r\n            start: value,\r\n            end: value\r\n        });\r\n        if (!segments.length) {\r\n            return;\r\n        }\r\n        const result = [];\r\n        const _interpolate = _getInterpolationMethod(options);\r\n        let i, ilen;\r\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\r\n            const { start , end  } = segments[i];\r\n            const p1 = points[start];\r\n            const p2 = points[end];\r\n            if (p1 === p2) {\r\n                result.push(p1);\r\n                continue;\r\n            }\r\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n            interpolated[property] = point[property];\r\n            result.push(interpolated);\r\n        }\r\n        return result.length === 1 ? result[0] : result;\r\n    }\r\n pathSegment(ctx, segment, params) {\r\n        const segmentMethod = _getSegmentMethod(this);\r\n        return segmentMethod(ctx, this, segment, params);\r\n    }\r\n path(ctx, start, count) {\r\n        const segments = this.segments;\r\n        const segmentMethod = _getSegmentMethod(this);\r\n        let loop = this._loop;\r\n        start = start || 0;\r\n        count = count || this.points.length - start;\r\n        for (const segment of segments){\r\n            loop &= segmentMethod(ctx, this, segment, {\r\n                start,\r\n                end: start + count - 1\r\n            });\r\n        }\r\n        return !!loop;\r\n    }\r\n draw(ctx, chartArea, start, count) {\r\n        const options = this.options || {};\r\n        const points = this.points || [];\r\n        if (points.length && options.borderWidth) {\r\n            ctx.save();\r\n            draw(ctx, this, start, count);\r\n            ctx.restore();\r\n        }\r\n        if (this.animated) {\r\n            this._pointsUpdated = false;\r\n            this._path = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n    const options = el.options;\r\n    const { [axis]: value  } = el.getProps([\r\n        axis\r\n    ], useFinalPosition);\r\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\r\n}\r\nclass PointElement extends Element {\r\n    static id = 'point';\r\n    parsed;\r\n    skip;\r\n    stop;\r\n    /**\r\n   * @type {any}\r\n   */ static defaults = {\r\n        borderWidth: 1,\r\n        hitRadius: 1,\r\n        hoverBorderWidth: 1,\r\n        hoverRadius: 4,\r\n        pointStyle: 'circle',\r\n        radius: 3,\r\n        rotation: 0\r\n    };\r\n    /**\r\n   * @type {any}\r\n   */ static defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n    constructor(cfg){\r\n        super();\r\n        this.options = undefined;\r\n        this.parsed = undefined;\r\n        this.skip = undefined;\r\n        this.stop = undefined;\r\n        if (cfg) {\r\n            Object.assign(this, cfg);\r\n        }\r\n    }\r\n    inRange(mouseX, mouseY, useFinalPosition) {\r\n        const options = this.options;\r\n        const { x , y  } = this.getProps([\r\n            'x',\r\n            'y'\r\n        ], useFinalPosition);\r\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\r\n    }\r\n    inXRange(mouseX, useFinalPosition) {\r\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n    }\r\n    inYRange(mouseY, useFinalPosition) {\r\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n    }\r\n    getCenterPoint(useFinalPosition) {\r\n        const { x , y  } = this.getProps([\r\n            'x',\r\n            'y'\r\n        ], useFinalPosition);\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n    size(options) {\r\n        options = options || this.options || {};\r\n        let radius = options.radius || 0;\r\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n        const borderWidth = radius && options.borderWidth || 0;\r\n        return (radius + borderWidth) * 2;\r\n    }\r\n    draw(ctx, area) {\r\n        const options = this.options;\r\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n            return;\r\n        }\r\n        ctx.strokeStyle = options.borderColor;\r\n        ctx.lineWidth = options.borderWidth;\r\n        ctx.fillStyle = options.backgroundColor;\r\n        drawPoint(ctx, options, this.x, this.y);\r\n    }\r\n    getRange() {\r\n        const options = this.options || {};\r\n        // @ts-expect-error Fallbacks should never be hit in practice\r\n        return options.radius + options.hitRadius;\r\n    }\r\n}\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n    const { x , y , base , width , height  } =  bar.getProps([\r\n        'x',\r\n        'y',\r\n        'base',\r\n        'width',\r\n        'height'\r\n    ], useFinalPosition);\r\n    let left, right, top, bottom, half;\r\n    if (bar.horizontal) {\r\n        half = height / 2;\r\n        left = Math.min(x, base);\r\n        right = Math.max(x, base);\r\n        top = y - half;\r\n        bottom = y + half;\r\n    } else {\r\n        half = width / 2;\r\n        left = x - half;\r\n        right = x + half;\r\n        top = Math.min(y, base);\r\n        bottom = Math.max(y, base);\r\n    }\r\n    return {\r\n        left,\r\n        top,\r\n        right,\r\n        bottom\r\n    };\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n    return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n    const value = bar.options.borderWidth;\r\n    const skip = bar.borderSkipped;\r\n    const o = toTRBL(value);\r\n    return {\r\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n    };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n    const { enableBorderRadius  } = bar.getProps([\r\n        'enableBorderRadius'\r\n    ]);\r\n    const value = bar.options.borderRadius;\r\n    const o = toTRBLCorners(value);\r\n    const maxR = Math.min(maxW, maxH);\r\n    const skip = bar.borderSkipped;\r\n    const enableBorder = enableBorderRadius || isObject(value);\r\n    return {\r\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n    };\r\n}\r\nfunction boundingRects(bar) {\r\n    const bounds = getBarBounds(bar);\r\n    const width = bounds.right - bounds.left;\r\n    const height = bounds.bottom - bounds.top;\r\n    const border = parseBorderWidth(bar, width / 2, height / 2);\r\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n    return {\r\n        outer: {\r\n            x: bounds.left,\r\n            y: bounds.top,\r\n            w: width,\r\n            h: height,\r\n            radius\r\n        },\r\n        inner: {\r\n            x: bounds.left + border.l,\r\n            y: bounds.top + border.t,\r\n            w: width - border.l - border.r,\r\n            h: height - border.t - border.b,\r\n            radius: {\r\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n    const skipX = x === null;\r\n    const skipY = y === null;\r\n    const skipBoth = skipX && skipY;\r\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\n function addNormalRectPath(ctx, rect) {\r\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n    const x = rect.x !== refRect.x ? -amount : 0;\r\n    const y = rect.y !== refRect.y ? -amount : 0;\r\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n    return {\r\n        x: rect.x + x,\r\n        y: rect.y + y,\r\n        w: rect.w + w,\r\n        h: rect.h + h,\r\n        radius: rect.radius\r\n    };\r\n}\r\nclass BarElement extends Element {\r\n    static id = 'bar';\r\n static defaults = {\r\n        borderSkipped: 'start',\r\n        borderWidth: 0,\r\n        borderRadius: 0,\r\n        inflateAmount: 'auto',\r\n        pointStyle: undefined\r\n    };\r\n static defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n    constructor(cfg){\r\n        super();\r\n        this.options = undefined;\r\n        this.horizontal = undefined;\r\n        this.base = undefined;\r\n        this.width = undefined;\r\n        this.height = undefined;\r\n        this.inflateAmount = undefined;\r\n        if (cfg) {\r\n            Object.assign(this, cfg);\r\n        }\r\n    }\r\n    draw(ctx) {\r\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\r\n        const { inner , outer  } = boundingRects(this);\r\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n        ctx.save();\r\n        if (outer.w !== inner.w || outer.h !== inner.h) {\r\n            ctx.beginPath();\r\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n            ctx.clip();\r\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n            ctx.fillStyle = borderColor;\r\n            ctx.fill('evenodd');\r\n        }\r\n        ctx.beginPath();\r\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n    inRange(mouseX, mouseY, useFinalPosition) {\r\n        return inRange(this, mouseX, mouseY, useFinalPosition);\r\n    }\r\n    inXRange(mouseX, useFinalPosition) {\r\n        return inRange(this, mouseX, null, useFinalPosition);\r\n    }\r\n    inYRange(mouseY, useFinalPosition) {\r\n        return inRange(this, null, mouseY, useFinalPosition);\r\n    }\r\n    getCenterPoint(useFinalPosition) {\r\n        const { x , y , base , horizontal  } =  this.getProps([\r\n            'x',\r\n            'y',\r\n            'base',\r\n            'horizontal'\r\n        ], useFinalPosition);\r\n        return {\r\n            x: horizontal ? (x + base) / 2 : x,\r\n            y: horizontal ? y : (y + base) / 2\r\n        };\r\n    }\r\n    getRange(axis) {\r\n        return axis === 'x' ? this.width / 2 : this.height / 2;\r\n    }\r\n}\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nBarElement: BarElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels)=>{\r\n    if (typeof raw === 'string') {\r\n        index = labels.push(raw) - 1;\r\n        addedLabels.unshift({\r\n            index,\r\n            label: raw\r\n        });\r\n    } else if (isNaN(raw)) {\r\n        index = null;\r\n    }\r\n    return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n    const first = labels.indexOf(raw);\r\n    if (first === -1) {\r\n        return addIfString(labels, raw, index, addedLabels);\r\n    }\r\n    const last = labels.lastIndexOf(raw);\r\n    return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\r\nfunction _getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n        return labels[value];\r\n    }\r\n    return value;\r\n}\r\nclass CategoryScale extends Scale {\r\n    static id = 'category';\r\n static defaults = {\r\n        ticks: {\r\n            callback: _getLabelForValue\r\n        }\r\n    };\r\n    constructor(cfg){\r\n        super(cfg);\r\n         this._startValue = undefined;\r\n        this._valueRange = 0;\r\n        this._addedLabels = [];\r\n    }\r\n    init(scaleOptions) {\r\n        const added = this._addedLabels;\r\n        if (added.length) {\r\n            const labels = this.getLabels();\r\n            for (const { index , label  } of added){\r\n                if (labels[index] === label) {\r\n                    labels.splice(index, 1);\r\n                }\r\n            }\r\n            this._addedLabels = [];\r\n        }\r\n        super.init(scaleOptions);\r\n    }\r\n    parse(raw, index) {\r\n        if (isNullOrUndef(raw)) {\r\n            return null;\r\n        }\r\n        const labels = this.getLabels();\r\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n        return validIndex(index, labels.length - 1);\r\n    }\r\n    determineDataLimits() {\r\n        const { minDefined , maxDefined  } = this.getUserBounds();\r\n        let { min , max  } = this.getMinMax(true);\r\n        if (this.options.bounds === 'ticks') {\r\n            if (!minDefined) {\r\n                min = 0;\r\n            }\r\n            if (!maxDefined) {\r\n                max = this.getLabels().length - 1;\r\n            }\r\n        }\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    buildTicks() {\r\n        const min = this.min;\r\n        const max = this.max;\r\n        const offset = this.options.offset;\r\n        const ticks = [];\r\n        let labels = this.getLabels();\r\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\r\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n        this._startValue = this.min - (offset ? 0.5 : 0);\r\n        for(let value = min; value <= max; value++){\r\n            ticks.push({\r\n                value\r\n            });\r\n        }\r\n        return ticks;\r\n    }\r\n    getLabelForValue(value) {\r\n        return _getLabelForValue.call(this, value);\r\n    }\r\n configure() {\r\n        super.configure();\r\n        if (!this.isHorizontal()) {\r\n            this._reversePixels = !this._reversePixels;\r\n        }\r\n    }\r\n    getPixelForValue(value) {\r\n        if (typeof value !== 'number') {\r\n            value = this.parse(value);\r\n        }\r\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n    }\r\n    getPixelForTick(index) {\r\n        const ticks = this.ticks;\r\n        if (index < 0 || index > ticks.length - 1) {\r\n            return null;\r\n        }\r\n        return this.getPixelForValue(ticks[index].value);\r\n    }\r\n    getValueForPixel(pixel) {\r\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n    }\r\n    getBasePixel() {\r\n        return this.bottom;\r\n    }\r\n}\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n    const ticks = [];\r\n    const MIN_SPACING = 1e-14;\r\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\r\n    const unit = step || 1;\r\n    const maxSpaces = maxTicks - 1;\r\n    const { min: rmin , max: rmax  } = dataRange;\r\n    const minDefined = !isNullOrUndef(min);\r\n    const maxDefined = !isNullOrUndef(max);\r\n    const countDefined = !isNullOrUndef(count);\r\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n    let factor, niceMin, niceMax, numSpaces;\r\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n        return [\r\n            {\r\n                value: rmin\r\n            },\r\n            {\r\n                value: rmax\r\n            }\r\n        ];\r\n    }\r\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n    if (numSpaces > maxSpaces) {\r\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n    }\r\n    if (!isNullOrUndef(precision)) {\r\n        factor = Math.pow(10, precision);\r\n        spacing = Math.ceil(spacing * factor) / factor;\r\n    }\r\n    if (bounds === 'ticks') {\r\n        niceMin = Math.floor(rmin / spacing) * spacing;\r\n        niceMax = Math.ceil(rmax / spacing) * spacing;\r\n    } else {\r\n        niceMin = rmin;\r\n        niceMax = rmax;\r\n    }\r\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n        spacing = (max - min) / numSpaces;\r\n        niceMin = min;\r\n        niceMax = max;\r\n    } else if (countDefined) {\r\n        niceMin = minDefined ? min : niceMin;\r\n        niceMax = maxDefined ? max : niceMax;\r\n        numSpaces = count - 1;\r\n        spacing = (niceMax - niceMin) / numSpaces;\r\n    } else {\r\n        numSpaces = (niceMax - niceMin) / spacing;\r\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n            numSpaces = Math.round(numSpaces);\r\n        } else {\r\n            numSpaces = Math.ceil(numSpaces);\r\n        }\r\n    }\r\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\r\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n    niceMin = Math.round(niceMin * factor) / factor;\r\n    niceMax = Math.round(niceMax * factor) / factor;\r\n    let j = 0;\r\n    if (minDefined) {\r\n        if (includeBounds && niceMin !== min) {\r\n            ticks.push({\r\n                value: min\r\n            });\r\n            if (niceMin < min) {\r\n                j++;\r\n            }\r\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n                j++;\r\n            }\r\n        } else if (niceMin < min) {\r\n            j++;\r\n        }\r\n    }\r\n    for(; j < numSpaces; ++j){\r\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\r\n        if (maxDefined && tickValue > max) {\r\n            break;\r\n        }\r\n        ticks.push({\r\n            value: tickValue\r\n        });\r\n    }\r\n    if (maxDefined && includeBounds && niceMax !== max) {\r\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n            ticks[ticks.length - 1].value = max;\r\n        } else {\r\n            ticks.push({\r\n                value: max\r\n            });\r\n        }\r\n    } else if (!maxDefined || niceMax === max) {\r\n        ticks.push({\r\n            value: niceMax\r\n        });\r\n    }\r\n    return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\r\n    const rad = toRadians(minRotation);\r\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n    const length = 0.75 * minSpacing * ('' + value).length;\r\n    return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n    constructor(cfg){\r\n        super(cfg);\r\n         this.start = undefined;\r\n         this.end = undefined;\r\n         this._startValue = undefined;\r\n         this._endValue = undefined;\r\n        this._valueRange = 0;\r\n    }\r\n    parse(raw, index) {\r\n        if (isNullOrUndef(raw)) {\r\n            return null;\r\n        }\r\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n            return null;\r\n        }\r\n        return +raw;\r\n    }\r\n    handleTickRangeOptions() {\r\n        const { beginAtZero  } = this.options;\r\n        const { minDefined , maxDefined  } = this.getUserBounds();\r\n        let { min , max  } = this;\r\n        const setMin = (v)=>min = minDefined ? min : v;\r\n        const setMax = (v)=>max = maxDefined ? max : v;\r\n        if (beginAtZero) {\r\n            const minSign = sign(min);\r\n            const maxSign = sign(max);\r\n            if (minSign < 0 && maxSign < 0) {\r\n                setMax(0);\r\n            } else if (minSign > 0 && maxSign > 0) {\r\n                setMin(0);\r\n            }\r\n        }\r\n        if (min === max) {\r\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\r\n            setMax(max + offset);\r\n            if (!beginAtZero) {\r\n                setMin(min - offset);\r\n            }\r\n        }\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    getTickLimit() {\r\n        const tickOpts = this.options.ticks;\r\n        let { maxTicksLimit , stepSize  } = tickOpts;\r\n        let maxTicks;\r\n        if (stepSize) {\r\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n            if (maxTicks > 1000) {\r\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n                maxTicks = 1000;\r\n            }\r\n        } else {\r\n            maxTicks = this.computeTickLimit();\r\n            maxTicksLimit = maxTicksLimit || 11;\r\n        }\r\n        if (maxTicksLimit) {\r\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n        }\r\n        return maxTicks;\r\n    }\r\n computeTickLimit() {\r\n        return Number.POSITIVE_INFINITY;\r\n    }\r\n    buildTicks() {\r\n        const opts = this.options;\r\n        const tickOpts = opts.ticks;\r\n        let maxTicks = this.getTickLimit();\r\n        maxTicks = Math.max(2, maxTicks);\r\n        const numericGeneratorOptions = {\r\n            maxTicks,\r\n            bounds: opts.bounds,\r\n            min: opts.min,\r\n            max: opts.max,\r\n            precision: tickOpts.precision,\r\n            step: tickOpts.stepSize,\r\n            count: tickOpts.count,\r\n            maxDigits: this._maxDigits(),\r\n            horizontal: this.isHorizontal(),\r\n            minRotation: tickOpts.minRotation || 0,\r\n            includeBounds: tickOpts.includeBounds !== false\r\n        };\r\n        const dataRange = this._range || this;\r\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n        if (opts.bounds === 'ticks') {\r\n            _setMinAndMaxByKey(ticks, this, 'value');\r\n        }\r\n        if (opts.reverse) {\r\n            ticks.reverse();\r\n            this.start = this.max;\r\n            this.end = this.min;\r\n        } else {\r\n            this.start = this.min;\r\n            this.end = this.max;\r\n        }\r\n        return ticks;\r\n    }\r\n configure() {\r\n        const ticks = this.ticks;\r\n        let start = this.min;\r\n        let end = this.max;\r\n        super.configure();\r\n        if (this.options.offset && ticks.length) {\r\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n            start -= offset;\r\n            end += offset;\r\n        }\r\n        this._startValue = start;\r\n        this._endValue = end;\r\n        this._valueRange = end - start;\r\n    }\r\n    getLabelForValue(value) {\r\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n    }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n    static id = 'linear';\r\n static defaults = {\r\n        ticks: {\r\n            callback: Ticks.formatters.numeric\r\n        }\r\n    };\r\n    determineDataLimits() {\r\n        const { min , max  } = this.getMinMax(true);\r\n        this.min = isNumberFinite(min) ? min : 0;\r\n        this.max = isNumberFinite(max) ? max : 1;\r\n        this.handleTickRangeOptions();\r\n    }\r\n computeTickLimit() {\r\n        const horizontal = this.isHorizontal();\r\n        const length = horizontal ? this.width : this.height;\r\n        const minRotation = toRadians(this.options.ticks.minRotation);\r\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n        const tickFont = this._resolveTickFontOptions(0);\r\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n    }\r\n    getPixelForValue(value) {\r\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n    }\r\n    getValueForPixel(pixel) {\r\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n    }\r\n}\r\n\r\nconst log10Floor = (v)=>Math.floor(log10(v));\r\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\r\nfunction isMajor(tickVal) {\r\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\r\n    return remain === 1;\r\n}\r\nfunction steps(min, max, rangeExp) {\r\n    const rangeStep = Math.pow(10, rangeExp);\r\n    const start = Math.floor(min / rangeStep);\r\n    const end = Math.ceil(max / rangeStep);\r\n    return end - start;\r\n}\r\nfunction startExp(min, max) {\r\n    const range = max - min;\r\n    let rangeExp = log10Floor(range);\r\n    while(steps(min, max, rangeExp) > 10){\r\n        rangeExp++;\r\n    }\r\n    while(steps(min, max, rangeExp) < 10){\r\n        rangeExp--;\r\n    }\r\n    return Math.min(rangeExp, log10Floor(min));\r\n}\r\n function generateTicks(generationOptions, { min , max  }) {\r\n    min = finiteOrDefault(generationOptions.min, min);\r\n    const ticks = [];\r\n    const minExp = log10Floor(min);\r\n    let exp = startExp(min, max);\r\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n    const stepSize = Math.pow(10, exp);\r\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\r\n    const start = Math.round((min - base) * precision) / precision;\r\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\r\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\r\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\r\n    while(value < max){\r\n        ticks.push({\r\n            value,\r\n            major: isMajor(value),\r\n            significand\r\n        });\r\n        if (significand >= 10) {\r\n            significand = significand < 15 ? 15 : 20;\r\n        } else {\r\n            significand++;\r\n        }\r\n        if (significand >= 20) {\r\n            exp++;\r\n            significand = 2;\r\n            precision = exp >= 0 ? 1 : precision;\r\n        }\r\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\r\n    }\r\n    const lastTick = finiteOrDefault(generationOptions.max, value);\r\n    ticks.push({\r\n        value: lastTick,\r\n        major: isMajor(lastTick),\r\n        significand\r\n    });\r\n    return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n    static id = 'logarithmic';\r\n static defaults = {\r\n        ticks: {\r\n            callback: Ticks.formatters.logarithmic,\r\n            major: {\r\n                enabled: true\r\n            }\r\n        }\r\n    };\r\n    constructor(cfg){\r\n        super(cfg);\r\n         this.start = undefined;\r\n         this.end = undefined;\r\n         this._startValue = undefined;\r\n        this._valueRange = 0;\r\n    }\r\n    parse(raw, index) {\r\n        const value = LinearScaleBase.prototype.parse.apply(this, [\r\n            raw,\r\n            index\r\n        ]);\r\n        if (value === 0) {\r\n            this._zero = true;\r\n            return undefined;\r\n        }\r\n        return isNumberFinite(value) && value > 0 ? value : null;\r\n    }\r\n    determineDataLimits() {\r\n        const { min , max  } = this.getMinMax(true);\r\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n        if (this.options.beginAtZero) {\r\n            this._zero = true;\r\n        }\r\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\r\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\r\n        }\r\n        this.handleTickRangeOptions();\r\n    }\r\n    handleTickRangeOptions() {\r\n        const { minDefined , maxDefined  } = this.getUserBounds();\r\n        let min = this.min;\r\n        let max = this.max;\r\n        const setMin = (v)=>min = minDefined ? min : v;\r\n        const setMax = (v)=>max = maxDefined ? max : v;\r\n        if (min === max) {\r\n            if (min <= 0) {\r\n                setMin(1);\r\n                setMax(10);\r\n            } else {\r\n                setMin(changeExponent(min, -1));\r\n                setMax(changeExponent(max, +1));\r\n            }\r\n        }\r\n        if (min <= 0) {\r\n            setMin(changeExponent(max, -1));\r\n        }\r\n        if (max <= 0) {\r\n            setMax(changeExponent(min, +1));\r\n        }\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    buildTicks() {\r\n        const opts = this.options;\r\n        const generationOptions = {\r\n            min: this._userMin,\r\n            max: this._userMax\r\n        };\r\n        const ticks = generateTicks(generationOptions, this);\r\n        if (opts.bounds === 'ticks') {\r\n            _setMinAndMaxByKey(ticks, this, 'value');\r\n        }\r\n        if (opts.reverse) {\r\n            ticks.reverse();\r\n            this.start = this.max;\r\n            this.end = this.min;\r\n        } else {\r\n            this.start = this.min;\r\n            this.end = this.max;\r\n        }\r\n        return ticks;\r\n    }\r\n getLabelForValue(value) {\r\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n    }\r\n configure() {\r\n        const start = this.min;\r\n        super.configure();\r\n        this._startValue = log10(start);\r\n        this._valueRange = log10(this.max) - log10(start);\r\n    }\r\n    getPixelForValue(value) {\r\n        if (value === undefined || value === 0) {\r\n            value = this.min;\r\n        }\r\n        if (value === null || isNaN(value)) {\r\n            return NaN;\r\n        }\r\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\r\n    }\r\n    getValueForPixel(pixel) {\r\n        const decimal = this.getDecimalForPixel(pixel);\r\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n    }\r\n}\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n    const tickOpts = opts.ticks;\r\n    if (tickOpts.display && opts.display) {\r\n        const padding = toPadding(tickOpts.backdropPadding);\r\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n    }\r\n    return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n    label = isArray(label) ? label : [\r\n        label\r\n    ];\r\n    return {\r\n        w: _longestText(ctx, font.string, label),\r\n        h: label.length * font.lineHeight\r\n    };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n    if (angle === min || angle === max) {\r\n        return {\r\n            start: pos - size / 2,\r\n            end: pos + size / 2\r\n        };\r\n    } else if (angle < min || angle > max) {\r\n        return {\r\n            start: pos - size,\r\n            end: pos\r\n        };\r\n    }\r\n    return {\r\n        start: pos,\r\n        end: pos + size\r\n    };\r\n}\r\n function fitWithPointLabels(scale) {\r\n    const orig = {\r\n        l: scale.left + scale._padding.left,\r\n        r: scale.right - scale._padding.right,\r\n        t: scale.top + scale._padding.top,\r\n        b: scale.bottom - scale._padding.bottom\r\n    };\r\n    const limits = Object.assign({}, orig);\r\n    const labelSizes = [];\r\n    const padding = [];\r\n    const valueCount = scale._pointLabels.length;\r\n    const pointLabelOpts = scale.options.pointLabels;\r\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n    for(let i = 0; i < valueCount; i++){\r\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n        padding[i] = opts.padding;\r\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n        const plFont = toFont(opts.font);\r\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n        labelSizes[i] = textSize;\r\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n        const angle = Math.round(toDegrees(angleRadians));\r\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n    }\r\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\r\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n    const sin = Math.abs(Math.sin(angle));\r\n    const cos = Math.abs(Math.cos(angle));\r\n    let x = 0;\r\n    let y = 0;\r\n    if (hLimits.start < orig.l) {\r\n        x = (orig.l - hLimits.start) / sin;\r\n        limits.l = Math.min(limits.l, orig.l - x);\r\n    } else if (hLimits.end > orig.r) {\r\n        x = (hLimits.end - orig.r) / sin;\r\n        limits.r = Math.max(limits.r, orig.r + x);\r\n    }\r\n    if (vLimits.start < orig.t) {\r\n        y = (orig.t - vLimits.start) / cos;\r\n        limits.t = Math.min(limits.t, orig.t - y);\r\n    } else if (vLimits.end > orig.b) {\r\n        y = (vLimits.end - orig.b) / cos;\r\n        limits.b = Math.max(limits.b, orig.b + y);\r\n    }\r\n}\r\nfunction createPointLabelItem(scale, index, itemOpts) {\r\n    const outerDistance = scale.drawingArea;\r\n    const { extra , additionalAngle , padding , size  } = itemOpts;\r\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    return {\r\n        visible: true,\r\n        x: pointLabelPosition.x,\r\n        y,\r\n        textAlign,\r\n        left,\r\n        top: y,\r\n        right: left + size.w,\r\n        bottom: y + size.h\r\n    };\r\n}\r\nfunction isNotOverlapped(item, area) {\r\n    if (!area) {\r\n        return true;\r\n    }\r\n    const { left , top , right , bottom  } = item;\r\n    const apexesInArea = _isPointInArea({\r\n        x: left,\r\n        y: top\r\n    }, area) || _isPointInArea({\r\n        x: left,\r\n        y: bottom\r\n    }, area) || _isPointInArea({\r\n        x: right,\r\n        y: top\r\n    }, area) || _isPointInArea({\r\n        x: right,\r\n        y: bottom\r\n    }, area);\r\n    return !apexesInArea;\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n    const items = [];\r\n    const valueCount = scale._pointLabels.length;\r\n    const opts = scale.options;\r\n    const { centerPointLabels , display  } = opts.pointLabels;\r\n    const itemOpts = {\r\n        extra: getTickBackdropHeight(opts) / 2,\r\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\r\n    };\r\n    let area;\r\n    for(let i = 0; i < valueCount; i++){\r\n        itemOpts.padding = padding[i];\r\n        itemOpts.size = labelSizes[i];\r\n        const item = createPointLabelItem(scale, i, itemOpts);\r\n        items.push(item);\r\n        if (display === 'auto') {\r\n            item.visible = isNotOverlapped(item, area);\r\n            if (item.visible) {\r\n                area = item;\r\n            }\r\n        }\r\n    }\r\n    return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n    if (angle === 0 || angle === 180) {\r\n        return 'center';\r\n    } else if (angle < 180) {\r\n        return 'left';\r\n    }\r\n    return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n    if (align === 'right') {\r\n        x -= w;\r\n    } else if (align === 'center') {\r\n        x -= w / 2;\r\n    }\r\n    return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n    if (angle === 90 || angle === 270) {\r\n        y -= h / 2;\r\n    } else if (angle > 270 || angle < 90) {\r\n        y -= h;\r\n    }\r\n    return y;\r\n}\r\nfunction drawPointLabelBox(ctx, opts, item) {\r\n    const { left , top , right , bottom  } = item;\r\n    const { backdropColor  } = opts;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n        const borderRadius = toTRBLCorners(opts.borderRadius);\r\n        const padding = toPadding(opts.backdropPadding);\r\n        ctx.fillStyle = backdropColor;\r\n        const backdropLeft = left - padding.left;\r\n        const backdropTop = top - padding.top;\r\n        const backdropWidth = right - left + padding.width;\r\n        const backdropHeight = bottom - top + padding.height;\r\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\r\n            ctx.beginPath();\r\n            addRoundedRectPath(ctx, {\r\n                x: backdropLeft,\r\n                y: backdropTop,\r\n                w: backdropWidth,\r\n                h: backdropHeight,\r\n                radius: borderRadius\r\n            });\r\n            ctx.fill();\r\n        } else {\r\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n        }\r\n    }\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n    const { ctx , options: { pointLabels  }  } = scale;\r\n    for(let i = labelCount - 1; i >= 0; i--){\r\n        const item = scale._pointLabelItems[i];\r\n        if (!item.visible) {\r\n            continue;\r\n        }\r\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n        drawPointLabelBox(ctx, optsAtIndex, item);\r\n        const plFont = toFont(optsAtIndex.font);\r\n        const { x , y , textAlign  } = item;\r\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\r\n            color: optsAtIndex.color,\r\n            textAlign: textAlign,\r\n            textBaseline: 'middle'\r\n        });\r\n    }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n    const { ctx  } = scale;\r\n    if (circular) {\r\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n    } else {\r\n        let pointPosition = scale.getPointPosition(0, radius);\r\n        ctx.moveTo(pointPosition.x, pointPosition.y);\r\n        for(let i = 1; i < labelCount; i++){\r\n            pointPosition = scale.getPointPosition(i, radius);\r\n            ctx.lineTo(pointPosition.x, pointPosition.y);\r\n        }\r\n    }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\r\n    const ctx = scale.ctx;\r\n    const circular = gridLineOpts.circular;\r\n    const { color , lineWidth  } = gridLineOpts;\r\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\r\n        return;\r\n    }\r\n    ctx.save();\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.setLineDash(borderOpts.dash || []);\r\n    ctx.lineDashOffset = borderOpts.dashOffset;\r\n    ctx.beginPath();\r\n    pathRadiusLine(scale, radius, circular, labelCount);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n    return createContext(parent, {\r\n        label,\r\n        index,\r\n        type: 'pointLabel'\r\n    });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n    static id = 'radialLinear';\r\n static defaults = {\r\n        display: true,\r\n        animate: true,\r\n        position: 'chartArea',\r\n        angleLines: {\r\n            display: true,\r\n            lineWidth: 1,\r\n            borderDash: [],\r\n            borderDashOffset: 0.0\r\n        },\r\n        grid: {\r\n            circular: false\r\n        },\r\n        startAngle: 0,\r\n        ticks: {\r\n            showLabelBackdrop: true,\r\n            callback: Ticks.formatters.numeric\r\n        },\r\n        pointLabels: {\r\n            backdropColor: undefined,\r\n            backdropPadding: 2,\r\n            display: true,\r\n            font: {\r\n                size: 10\r\n            },\r\n            callback (label) {\r\n                return label;\r\n            },\r\n            padding: 5,\r\n            centerPointLabels: false\r\n        }\r\n    };\r\n    static defaultRoutes = {\r\n        'angleLines.color': 'borderColor',\r\n        'pointLabels.color': 'color',\r\n        'ticks.color': 'color'\r\n    };\r\n    static descriptors = {\r\n        angleLines: {\r\n            _fallback: 'grid'\r\n        }\r\n    };\r\n    constructor(cfg){\r\n        super(cfg);\r\n         this.xCenter = undefined;\r\n         this.yCenter = undefined;\r\n         this.drawingArea = undefined;\r\n         this._pointLabels = [];\r\n        this._pointLabelItems = [];\r\n    }\r\n    setDimensions() {\r\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n        const w = this.width = this.maxWidth - padding.width;\r\n        const h = this.height = this.maxHeight - padding.height;\r\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n    }\r\n    determineDataLimits() {\r\n        const { min , max  } = this.getMinMax(false);\r\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n        this.handleTickRangeOptions();\r\n    }\r\n computeTickLimit() {\r\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n    }\r\n    generateTickLabels(ticks) {\r\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n        this._pointLabels = this.getLabels().map((value, index)=>{\r\n            const label = callback(this.options.pointLabels.callback, [\r\n                value,\r\n                index\r\n            ], this);\r\n            return label || label === 0 ? label : '';\r\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\r\n    }\r\n    fit() {\r\n        const opts = this.options;\r\n        if (opts.display && opts.pointLabels.display) {\r\n            fitWithPointLabels(this);\r\n        } else {\r\n            this.setCenterPoint(0, 0, 0, 0);\r\n        }\r\n    }\r\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n    }\r\n    getIndexAngle(index) {\r\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n        const startAngle = this.options.startAngle || 0;\r\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n    }\r\n    getDistanceFromCenterForValue(value) {\r\n        if (isNullOrUndef(value)) {\r\n            return NaN;\r\n        }\r\n        const scalingFactor = this.drawingArea / (this.max - this.min);\r\n        if (this.options.reverse) {\r\n            return (this.max - value) * scalingFactor;\r\n        }\r\n        return (value - this.min) * scalingFactor;\r\n    }\r\n    getValueForDistanceFromCenter(distance) {\r\n        if (isNullOrUndef(distance)) {\r\n            return NaN;\r\n        }\r\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n    }\r\n    getPointLabelContext(index) {\r\n        const pointLabels = this._pointLabels || [];\r\n        if (index >= 0 && index < pointLabels.length) {\r\n            const pointLabel = pointLabels[index];\r\n            return createPointLabelContext(this.getContext(), index, pointLabel);\r\n        }\r\n    }\r\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n        return {\r\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n            angle\r\n        };\r\n    }\r\n    getPointPositionForValue(index, value) {\r\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n    }\r\n    getBasePosition(index) {\r\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n    }\r\n    getPointLabelPosition(index) {\r\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\r\n        return {\r\n            left,\r\n            top,\r\n            right,\r\n            bottom\r\n        };\r\n    }\r\n drawBackground() {\r\n        const { backgroundColor , grid: { circular  }  } = this.options;\r\n        if (backgroundColor) {\r\n            const ctx = this.ctx;\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n            ctx.closePath();\r\n            ctx.fillStyle = backgroundColor;\r\n            ctx.fill();\r\n            ctx.restore();\r\n        }\r\n    }\r\n drawGrid() {\r\n        const ctx = this.ctx;\r\n        const opts = this.options;\r\n        const { angleLines , grid , border  } = opts;\r\n        const labelCount = this._pointLabels.length;\r\n        let i, offset, position;\r\n        if (opts.pointLabels.display) {\r\n            drawPointLabels(this, labelCount);\r\n        }\r\n        if (grid.display) {\r\n            this.ticks.forEach((tick, index)=>{\r\n                if (index !== 0 || index === 0 && this.min < 0) {\r\n                    offset = this.getDistanceFromCenterForValue(tick.value);\r\n                    const context = this.getContext(index);\r\n                    const optsAtIndex = grid.setContext(context);\r\n                    const optsAtIndexBorder = border.setContext(context);\r\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\r\n                }\r\n            });\r\n        }\r\n        if (angleLines.display) {\r\n            ctx.save();\r\n            for(i = labelCount - 1; i >= 0; i--){\r\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n                const { color , lineWidth  } = optsAtIndex;\r\n                if (!lineWidth || !color) {\r\n                    continue;\r\n                }\r\n                ctx.lineWidth = lineWidth;\r\n                ctx.strokeStyle = color;\r\n                ctx.setLineDash(optsAtIndex.borderDash);\r\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\r\n                position = this.getPointPosition(i, offset);\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.xCenter, this.yCenter);\r\n                ctx.lineTo(position.x, position.y);\r\n                ctx.stroke();\r\n            }\r\n            ctx.restore();\r\n        }\r\n    }\r\n drawBorder() {}\r\n drawLabels() {\r\n        const ctx = this.ctx;\r\n        const opts = this.options;\r\n        const tickOpts = opts.ticks;\r\n        if (!tickOpts.display) {\r\n            return;\r\n        }\r\n        const startAngle = this.getIndexAngle(0);\r\n        let offset, width;\r\n        ctx.save();\r\n        ctx.translate(this.xCenter, this.yCenter);\r\n        ctx.rotate(startAngle);\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        this.ticks.forEach((tick, index)=>{\r\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\r\n                return;\r\n            }\r\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n            const tickFont = toFont(optsAtIndex.font);\r\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n            if (optsAtIndex.showLabelBackdrop) {\r\n                ctx.font = tickFont.string;\r\n                width = ctx.measureText(tick.label).width;\r\n                ctx.fillStyle = optsAtIndex.backdropColor;\r\n                const padding = toPadding(optsAtIndex.backdropPadding);\r\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\r\n            }\r\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n                color: optsAtIndex.color,\r\n                strokeColor: optsAtIndex.textStrokeColor,\r\n                strokeWidth: optsAtIndex.textStrokeWidth\r\n            });\r\n        });\r\n        ctx.restore();\r\n    }\r\n drawTitle() {}\r\n}\r\n\r\nconst INTERVALS = {\r\n    millisecond: {\r\n        common: true,\r\n        size: 1,\r\n        steps: 1000\r\n    },\r\n    second: {\r\n        common: true,\r\n        size: 1000,\r\n        steps: 60\r\n    },\r\n    minute: {\r\n        common: true,\r\n        size: 60000,\r\n        steps: 60\r\n    },\r\n    hour: {\r\n        common: true,\r\n        size: 3600000,\r\n        steps: 24\r\n    },\r\n    day: {\r\n        common: true,\r\n        size: 86400000,\r\n        steps: 30\r\n    },\r\n    week: {\r\n        common: false,\r\n        size: 604800000,\r\n        steps: 4\r\n    },\r\n    month: {\r\n        common: true,\r\n        size: 2.628e9,\r\n        steps: 12\r\n    },\r\n    quarter: {\r\n        common: false,\r\n        size: 7.884e9,\r\n        steps: 4\r\n    },\r\n    year: {\r\n        common: true,\r\n        size: 3.154e10\r\n    }\r\n};\r\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\r\n function sorter(a, b) {\r\n    return a - b;\r\n}\r\n function parse(scale, input) {\r\n    if (isNullOrUndef(input)) {\r\n        return null;\r\n    }\r\n    const adapter = scale._adapter;\r\n    const { parser , round , isoWeekday  } = scale._parseOpts;\r\n    let value = input;\r\n    if (typeof parser === 'function') {\r\n        value = parser(value);\r\n    }\r\n    if (!isNumberFinite(value)) {\r\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    if (round) {\r\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\r\n    }\r\n    return +value;\r\n}\r\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n    const ilen = UNITS.length;\r\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\r\n        const interval = INTERVALS[UNITS[i]];\r\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n            return UNITS[i];\r\n        }\r\n    }\r\n    return UNITS[ilen - 1];\r\n}\r\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\r\n        const unit = UNITS[i];\r\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n            return unit;\r\n        }\r\n    }\r\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\n function determineMajorUnit(unit) {\r\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\r\n        if (INTERVALS[UNITS[i]].common) {\r\n            return UNITS[i];\r\n        }\r\n    }\r\n}\r\n function addTick(ticks, time, timestamps) {\r\n    if (!timestamps) {\r\n        ticks[time] = true;\r\n    } else if (timestamps.length) {\r\n        const { lo , hi  } = _lookup(timestamps, time);\r\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n        ticks[timestamp] = true;\r\n    }\r\n}\r\n function setMajorTicks(scale, ticks, map, majorUnit) {\r\n    const adapter = scale._adapter;\r\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n    const last = ticks[ticks.length - 1].value;\r\n    let major, index;\r\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\r\n        index = map[major];\r\n        if (index >= 0) {\r\n            ticks[index].major = true;\r\n        }\r\n    }\r\n    return ticks;\r\n}\r\n function ticksFromTimestamps(scale, values, majorUnit) {\r\n    const ticks = [];\r\n     const map = {};\r\n    const ilen = values.length;\r\n    let i, value;\r\n    for(i = 0; i < ilen; ++i){\r\n        value = values[i];\r\n        map[value] = i;\r\n        ticks.push({\r\n            value,\r\n            major: false\r\n        });\r\n    }\r\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n    static id = 'time';\r\n static defaults = {\r\n bounds: 'data',\r\n        adapters: {},\r\n        time: {\r\n            parser: false,\r\n            unit: false,\r\n            round: false,\r\n            isoWeekday: false,\r\n            minUnit: 'millisecond',\r\n            displayFormats: {}\r\n        },\r\n        ticks: {\r\n source: 'auto',\r\n            callback: false,\r\n            major: {\r\n                enabled: false\r\n            }\r\n        }\r\n    };\r\n constructor(props){\r\n        super(props);\r\n         this._cache = {\r\n            data: [],\r\n            labels: [],\r\n            all: []\r\n        };\r\n         this._unit = 'day';\r\n         this._majorUnit = undefined;\r\n        this._offsets = {};\r\n        this._normalized = false;\r\n        this._parseOpts = undefined;\r\n    }\r\n    init(scaleOpts, opts = {}) {\r\n        const time = scaleOpts.time || (scaleOpts.time = {});\r\n         const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\r\n        adapter.init(opts);\r\n        mergeIf(time.displayFormats, adapter.formats());\r\n        this._parseOpts = {\r\n            parser: time.parser,\r\n            round: time.round,\r\n            isoWeekday: time.isoWeekday\r\n        };\r\n        super.init(scaleOpts);\r\n        this._normalized = opts.normalized;\r\n    }\r\n parse(raw, index) {\r\n        if (raw === undefined) {\r\n            return null;\r\n        }\r\n        return parse(this, raw);\r\n    }\r\n    beforeLayout() {\r\n        super.beforeLayout();\r\n        this._cache = {\r\n            data: [],\r\n            labels: [],\r\n            all: []\r\n        };\r\n    }\r\n    determineDataLimits() {\r\n        const options = this.options;\r\n        const adapter = this._adapter;\r\n        const unit = options.time.unit || 'day';\r\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\r\n function _applyBounds(bounds) {\r\n            if (!minDefined && !isNaN(bounds.min)) {\r\n                min = Math.min(min, bounds.min);\r\n            }\r\n            if (!maxDefined && !isNaN(bounds.max)) {\r\n                max = Math.max(max, bounds.max);\r\n            }\r\n        }\r\n        if (!minDefined || !maxDefined) {\r\n            _applyBounds(this._getLabelBounds());\r\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n                _applyBounds(this.getMinMax(false));\r\n            }\r\n        }\r\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n        this.min = Math.min(min, max - 1);\r\n        this.max = Math.max(min + 1, max);\r\n    }\r\n _getLabelBounds() {\r\n        const arr = this.getLabelTimestamps();\r\n        let min = Number.POSITIVE_INFINITY;\r\n        let max = Number.NEGATIVE_INFINITY;\r\n        if (arr.length) {\r\n            min = arr[0];\r\n            max = arr[arr.length - 1];\r\n        }\r\n        return {\r\n            min,\r\n            max\r\n        };\r\n    }\r\n buildTicks() {\r\n        const options = this.options;\r\n        const timeOpts = options.time;\r\n        const tickOpts = options.ticks;\r\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n        if (options.bounds === 'ticks' && timestamps.length) {\r\n            this.min = this._userMin || timestamps[0];\r\n            this.max = this._userMax || timestamps[timestamps.length - 1];\r\n        }\r\n        const min = this.min;\r\n        const max = this.max;\r\n        const ticks = _filterBetween(timestamps, min, max);\r\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\r\n        this.initOffsets(timestamps);\r\n        if (options.reverse) {\r\n            ticks.reverse();\r\n        }\r\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n    }\r\n    afterAutoSkip() {\r\n        if (this.options.offsetAfterAutoskip) {\r\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\r\n        }\r\n    }\r\n initOffsets(timestamps = []) {\r\n        let start = 0;\r\n        let end = 0;\r\n        let first, last;\r\n        if (this.options.offset && timestamps.length) {\r\n            first = this.getDecimalForValue(timestamps[0]);\r\n            if (timestamps.length === 1) {\r\n                start = 1 - first;\r\n            } else {\r\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n            }\r\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n            if (timestamps.length === 1) {\r\n                end = last;\r\n            } else {\r\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n            }\r\n        }\r\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n        start = _limitValue(start, 0, limit);\r\n        end = _limitValue(end, 0, limit);\r\n        this._offsets = {\r\n            start,\r\n            end,\r\n            factor: 1 / (start + 1 + end)\r\n        };\r\n    }\r\n _generate() {\r\n        const adapter = this._adapter;\r\n        const min = this.min;\r\n        const max = this.max;\r\n        const options = this.options;\r\n        const timeOpts = options.time;\r\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\r\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n        const hasWeekday = isNumber(weekday) || weekday === true;\r\n        const ticks = {};\r\n        let first = min;\r\n        let time, count;\r\n        if (hasWeekday) {\r\n            first = +adapter.startOf(first, 'isoWeek', weekday);\r\n        }\r\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n        }\r\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\r\n            addTick(ticks, time, timestamps);\r\n        }\r\n        if (time === max || options.bounds === 'ticks' || count === 1) {\r\n            addTick(ticks, time, timestamps);\r\n        }\r\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\r\n    }\r\n getLabelForValue(value) {\r\n        const adapter = this._adapter;\r\n        const timeOpts = this.options.time;\r\n        if (timeOpts.tooltipFormat) {\r\n            return adapter.format(value, timeOpts.tooltipFormat);\r\n        }\r\n        return adapter.format(value, timeOpts.displayFormats.datetime);\r\n    }\r\n format(value, format) {\r\n        const options = this.options;\r\n        const formats = options.time.displayFormats;\r\n        const unit = this._unit;\r\n        const fmt = format || formats[unit];\r\n        return this._adapter.format(value, fmt);\r\n    }\r\n _tickFormatFunction(time, index, ticks, format) {\r\n        const options = this.options;\r\n        const formatter = options.ticks.callback;\r\n        if (formatter) {\r\n            return callback(formatter, [\r\n                time,\r\n                index,\r\n                ticks\r\n            ], this);\r\n        }\r\n        const formats = options.time.displayFormats;\r\n        const unit = this._unit;\r\n        const majorUnit = this._majorUnit;\r\n        const minorFormat = unit && formats[unit];\r\n        const majorFormat = majorUnit && formats[majorUnit];\r\n        const tick = ticks[index];\r\n        const major = majorUnit && majorFormat && tick && tick.major;\r\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    }\r\n generateTickLabels(ticks) {\r\n        let i, ilen, tick;\r\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\r\n            tick = ticks[i];\r\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n        }\r\n    }\r\n getDecimalForValue(value) {\r\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n    }\r\n getPixelForValue(value) {\r\n        const offsets = this._offsets;\r\n        const pos = this.getDecimalForValue(value);\r\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n    }\r\n getValueForPixel(pixel) {\r\n        const offsets = this._offsets;\r\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n        return this.min + pos * (this.max - this.min);\r\n    }\r\n _getLabelSize(label) {\r\n        const ticksOpts = this.options.ticks;\r\n        const tickLabelWidth = this.ctx.measureText(label).width;\r\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n        const cosRotation = Math.cos(angle);\r\n        const sinRotation = Math.sin(angle);\r\n        const tickFontSize = this._resolveTickFontOptions(0).size;\r\n        return {\r\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\r\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\r\n        };\r\n    }\r\n _getLabelCapacity(exampleTime) {\r\n        const timeOpts = this.options.time;\r\n        const displayFormats = timeOpts.displayFormats;\r\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\r\n            exampleTime\r\n        ], this._majorUnit), format);\r\n        const size = this._getLabelSize(exampleLabel);\r\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n        return capacity > 0 ? capacity : 1;\r\n    }\r\n getDataTimestamps() {\r\n        let timestamps = this._cache.data || [];\r\n        let i, ilen;\r\n        if (timestamps.length) {\r\n            return timestamps;\r\n        }\r\n        const metas = this.getMatchingVisibleMetas();\r\n        if (this._normalized && metas.length) {\r\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\r\n        }\r\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\r\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n        }\r\n        return this._cache.data = this.normalize(timestamps);\r\n    }\r\n getLabelTimestamps() {\r\n        const timestamps = this._cache.labels || [];\r\n        let i, ilen;\r\n        if (timestamps.length) {\r\n            return timestamps;\r\n        }\r\n        const labels = this.getLabels();\r\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\r\n            timestamps.push(parse(this, labels[i]));\r\n        }\r\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\r\n    }\r\n normalize(values) {\r\n        return _arrayUnique(values.sort(sorter));\r\n    }\r\n}\r\n\r\nfunction interpolate(table, val, reverse) {\r\n    let lo = 0;\r\n    let hi = table.length - 1;\r\n    let prevSource, nextSource, prevTarget, nextTarget;\r\n    if (reverse) {\r\n        if (val >= table[lo].pos && val <= table[hi].pos) {\r\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\r\n        }\r\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\r\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\r\n    } else {\r\n        if (val >= table[lo].time && val <= table[hi].time) {\r\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\r\n        }\r\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\r\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\r\n    }\r\n    const span = nextSource - prevSource;\r\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n    static id = 'timeseries';\r\n static defaults = TimeScale.defaults;\r\n constructor(props){\r\n        super(props);\r\n         this._table = [];\r\n         this._minPos = undefined;\r\n         this._tableRange = undefined;\r\n    }\r\n initOffsets() {\r\n        const timestamps = this._getTimestampsForTable();\r\n        const table = this._table = this.buildLookupTable(timestamps);\r\n        this._minPos = interpolate(table, this.min);\r\n        this._tableRange = interpolate(table, this.max) - this._minPos;\r\n        super.initOffsets(timestamps);\r\n    }\r\n buildLookupTable(timestamps) {\r\n        const { min , max  } = this;\r\n        const items = [];\r\n        const table = [];\r\n        let i, ilen, prev, curr, next;\r\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\r\n            curr = timestamps[i];\r\n            if (curr >= min && curr <= max) {\r\n                items.push(curr);\r\n            }\r\n        }\r\n        if (items.length < 2) {\r\n            return [\r\n                {\r\n                    time: min,\r\n                    pos: 0\r\n                },\r\n                {\r\n                    time: max,\r\n                    pos: 1\r\n                }\r\n            ];\r\n        }\r\n        for(i = 0, ilen = items.length; i < ilen; ++i){\r\n            next = items[i + 1];\r\n            prev = items[i - 1];\r\n            curr = items[i];\r\n            if (Math.round((next + prev) / 2) !== curr) {\r\n                table.push({\r\n                    time: curr,\r\n                    pos: i / (ilen - 1)\r\n                });\r\n            }\r\n        }\r\n        return table;\r\n    }\r\n _generate() {\r\n        const min = this.min;\r\n        const max = this.max;\r\n        let timestamps = super.getDataTimestamps();\r\n        if (!timestamps.includes(min) || !timestamps.length) {\r\n            timestamps.splice(0, 0, min);\r\n        }\r\n        if (!timestamps.includes(max) || timestamps.length === 1) {\r\n            timestamps.push(max);\r\n        }\r\n        return timestamps.sort((a, b)=>a - b);\r\n    }\r\n _getTimestampsForTable() {\r\n        let timestamps = this._cache.all || [];\r\n        if (timestamps.length) {\r\n            return timestamps;\r\n        }\r\n        const data = this.getDataTimestamps();\r\n        const label = this.getLabelTimestamps();\r\n        if (data.length && label.length) {\r\n            timestamps = this.normalize(data.concat(label));\r\n        } else {\r\n            timestamps = data.length ? data : label;\r\n        }\r\n        timestamps = this._cache.all = timestamps;\r\n        return timestamps;\r\n    }\r\n getDecimalForValue(value) {\r\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n    }\r\n getValueForPixel(pixel) {\r\n        const offsets = this._offsets;\r\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n    }\r\n}\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst BORDER_COLORS = [\r\n    'rgb(54, 162, 235)',\r\n    'rgb(255, 99, 132)',\r\n    'rgb(255, 159, 64)',\r\n    'rgb(255, 205, 86)',\r\n    'rgb(75, 192, 192)',\r\n    'rgb(153, 102, 255)',\r\n    'rgb(201, 203, 207)' // grey\r\n];\r\n// Border colors with 50% transparency\r\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\r\nfunction getBorderColor(i) {\r\n    return BORDER_COLORS[i % BORDER_COLORS.length];\r\n}\r\nfunction getBackgroundColor(i) {\r\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\r\n}\r\nfunction colorizeDefaultDataset(dataset, i) {\r\n    dataset.borderColor = getBorderColor(i);\r\n    dataset.backgroundColor = getBackgroundColor(i);\r\n    return ++i;\r\n}\r\nfunction colorizeDoughnutDataset(dataset, i) {\r\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\r\n    return i;\r\n}\r\nfunction colorizePolarAreaDataset(dataset, i) {\r\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\r\n    return i;\r\n}\r\nfunction getColorizer(chart) {\r\n    let i = 0;\r\n    return (dataset, datasetIndex)=>{\r\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n        if (controller instanceof DoughnutController) {\r\n            i = colorizeDoughnutDataset(dataset, i);\r\n        } else if (controller instanceof PolarAreaController) {\r\n            i = colorizePolarAreaDataset(dataset, i);\r\n        } else if (controller) {\r\n            i = colorizeDefaultDataset(dataset, i);\r\n        }\r\n    };\r\n}\r\nfunction containsColorsDefinitions(descriptors) {\r\n    let k;\r\n    for(k in descriptors){\r\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction containsColorsDefinition(descriptor) {\r\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\r\n}\r\nfunction containsDefaultColorsDefenitions() {\r\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\r\n}\r\nvar plugin_colors = {\r\n    id: 'colors',\r\n    defaults: {\r\n        enabled: true,\r\n        forceOverride: false\r\n    },\r\n    beforeLayout (chart, _args, options) {\r\n        if (!options.enabled) {\r\n            return;\r\n        }\r\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\r\n        const { elements  } = chartOptions;\r\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\r\n        if (!options.forceOverride && containsColorDefenition) {\r\n            return;\r\n        }\r\n        const colorizer = getColorizer(chart);\r\n        datasets.forEach(colorizer);\r\n    }\r\n};\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n const samples = options.samples || availableWidth;\r\n    if (samples >= count) {\r\n        return data.slice(start, start + count);\r\n    }\r\n    const decimated = [];\r\n    const bucketWidth = (count - 2) / (samples - 2);\r\n    let sampledIndex = 0;\r\n    const endIndex = start + count - 1;\r\n    let a = start;\r\n    let i, maxAreaPoint, maxArea, area, nextA;\r\n    decimated[sampledIndex++] = data[a];\r\n    for(i = 0; i < samples - 2; i++){\r\n        let avgX = 0;\r\n        let avgY = 0;\r\n        let j;\r\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\r\n            avgX += data[j].x;\r\n            avgY += data[j].y;\r\n        }\r\n        avgX /= avgRangeLength;\r\n        avgY /= avgRangeLength;\r\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n        const { x: pointAx , y: pointAy  } = data[a];\r\n        maxArea = area = -1;\r\n        for(j = rangeOffs; j < rangeTo; j++){\r\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\r\n            if (area > maxArea) {\r\n                maxArea = area;\r\n                maxAreaPoint = data[j];\r\n                nextA = j;\r\n            }\r\n        }\r\n        decimated[sampledIndex++] = maxAreaPoint;\r\n        a = nextA;\r\n    }\r\n    decimated[sampledIndex++] = data[endIndex];\r\n    return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n    let avgX = 0;\r\n    let countX = 0;\r\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n    const decimated = [];\r\n    const endIndex = start + count - 1;\r\n    const xMin = data[start].x;\r\n    const xMax = data[endIndex].x;\r\n    const dx = xMax - xMin;\r\n    for(i = start; i < start + count; ++i){\r\n        point = data[i];\r\n        x = (point.x - xMin) / dx * availableWidth;\r\n        y = point.y;\r\n        const truncX = x | 0;\r\n        if (truncX === prevX) {\r\n            if (y < minY) {\r\n                minY = y;\r\n                minIndex = i;\r\n            } else if (y > maxY) {\r\n                maxY = y;\r\n                maxIndex = i;\r\n            }\r\n            avgX = (countX * avgX + point.x) / ++countX;\r\n        } else {\r\n            const lastIndex = i - 1;\r\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n                    decimated.push({\r\n                        ...data[intermediateIndex1],\r\n                        x: avgX\r\n                    });\r\n                }\r\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n                    decimated.push({\r\n                        ...data[intermediateIndex2],\r\n                        x: avgX\r\n                    });\r\n                }\r\n            }\r\n            if (i > 0 && lastIndex !== startIndex) {\r\n                decimated.push(data[lastIndex]);\r\n            }\r\n            decimated.push(point);\r\n            prevX = truncX;\r\n            countX = 0;\r\n            minY = maxY = y;\r\n            minIndex = maxIndex = startIndex = i;\r\n        }\r\n    }\r\n    return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n    if (dataset._decimated) {\r\n        const data = dataset._data;\r\n        delete dataset._decimated;\r\n        delete dataset._data;\r\n        Object.defineProperty(dataset, 'data', {\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true,\r\n            value: data\r\n        });\r\n    }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n    chart.data.datasets.forEach((dataset)=>{\r\n        cleanDecimatedDataset(dataset);\r\n    });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n    const pointCount = points.length;\r\n    let start = 0;\r\n    let count;\r\n    const { iScale  } = meta;\r\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\r\n    if (minDefined) {\r\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n    } else {\r\n        count = pointCount - start;\r\n    }\r\n    return {\r\n        start,\r\n        count\r\n    };\r\n}\r\nvar plugin_decimation = {\r\n    id: 'decimation',\r\n    defaults: {\r\n        algorithm: 'min-max',\r\n        enabled: false\r\n    },\r\n    beforeElementsUpdate: (chart, args, options)=>{\r\n        if (!options.enabled) {\r\n            cleanDecimatedData(chart);\r\n            return;\r\n        }\r\n        const availableWidth = chart.width;\r\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\r\n            const { _data , indexAxis  } = dataset;\r\n            const meta = chart.getDatasetMeta(datasetIndex);\r\n            const data = _data || dataset.data;\r\n            if (resolve([\r\n                indexAxis,\r\n                chart.options.indexAxis\r\n            ]) === 'y') {\r\n                return;\r\n            }\r\n            if (!meta.controller.supportsDecimation) {\r\n                return;\r\n            }\r\n            const xAxis = chart.scales[meta.xAxisID];\r\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n                return;\r\n            }\r\n            if (chart.options.parsing) {\r\n                return;\r\n            }\r\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n            const threshold = options.threshold || 4 * availableWidth;\r\n            if (count <= threshold) {\r\n                cleanDecimatedDataset(dataset);\r\n                return;\r\n            }\r\n            if (isNullOrUndef(_data)) {\r\n                dataset._data = data;\r\n                delete dataset.data;\r\n                Object.defineProperty(dataset, 'data', {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get: function() {\r\n                        return this._decimated;\r\n                    },\r\n                    set: function(d) {\r\n                        this._data = d;\r\n                    }\r\n                });\r\n            }\r\n            let decimated;\r\n            switch(options.algorithm){\r\n                case 'lttb':\r\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n                    break;\r\n                case 'min-max':\r\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n            }\r\n            dataset._decimated = decimated;\r\n        });\r\n    },\r\n    destroy (chart) {\r\n        cleanDecimatedData(chart);\r\n    }\r\n};\r\n\r\nfunction _segments(line, target, property) {\r\n    const segments = line.segments;\r\n    const points = line.points;\r\n    const tpoints = target.points;\r\n    const parts = [];\r\n    for (const segment of segments){\r\n        let { start , end  } = segment;\r\n        end = _findSegmentEnd(start, end, points);\r\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n        if (!target.segments) {\r\n            parts.push({\r\n                source: segment,\r\n                target: bounds,\r\n                start: points[start],\r\n                end: points[end]\r\n            });\r\n            continue;\r\n        }\r\n        const targetSegments = _boundSegments(target, bounds);\r\n        for (const tgt of targetSegments){\r\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n            const fillSources = _boundSegment(segment, points, subBounds);\r\n            for (const fillSource of fillSources){\r\n                parts.push({\r\n                    source: fillSource,\r\n                    target: tgt,\r\n                    start: {\r\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n                    },\r\n                    end: {\r\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return parts;\r\n}\r\nfunction _getBounds(property, first, last, loop) {\r\n    if (loop) {\r\n        return;\r\n    }\r\n    let start = first[property];\r\n    let end = last[property];\r\n    if (property === 'angle') {\r\n        start = _normalizeAngle(start);\r\n        end = _normalizeAngle(end);\r\n    }\r\n    return {\r\n        property,\r\n        start,\r\n        end\r\n    };\r\n}\r\nfunction _pointsFromSegments(boundary, line) {\r\n    const { x =null , y =null  } = boundary || {};\r\n    const linePoints = line.points;\r\n    const points = [];\r\n    line.segments.forEach(({ start , end  })=>{\r\n        end = _findSegmentEnd(start, end, linePoints);\r\n        const first = linePoints[start];\r\n        const last = linePoints[end];\r\n        if (y !== null) {\r\n            points.push({\r\n                x: first.x,\r\n                y\r\n            });\r\n            points.push({\r\n                x: last.x,\r\n                y\r\n            });\r\n        } else if (x !== null) {\r\n            points.push({\r\n                x,\r\n                y: first.y\r\n            });\r\n            points.push({\r\n                x,\r\n                y: last.y\r\n            });\r\n        }\r\n    });\r\n    return points;\r\n}\r\nfunction _findSegmentEnd(start, end, points) {\r\n    for(; end > start; end--){\r\n        const point = points[end];\r\n        if (!isNaN(point.x) && !isNaN(point.y)) {\r\n            break;\r\n        }\r\n    }\r\n    return end;\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n    if (a && b) {\r\n        return fn(a[prop], b[prop]);\r\n    }\r\n    return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n\r\nfunction _createBoundaryLine(boundary, line) {\r\n    let points = [];\r\n    let _loop = false;\r\n    if (isArray(boundary)) {\r\n        _loop = true;\r\n        points = boundary;\r\n    } else {\r\n        points = _pointsFromSegments(boundary, line);\r\n    }\r\n    return points.length ? new LineElement({\r\n        points,\r\n        options: {\r\n            tension: 0\r\n        },\r\n        _loop,\r\n        _fullLoop: _loop\r\n    }) : null;\r\n}\r\nfunction _shouldApplyFill(source) {\r\n    return source && source.fill !== false;\r\n}\r\n\r\nfunction _resolveTarget(sources, index, propagate) {\r\n    const source = sources[index];\r\n    let fill = source.fill;\r\n    const visited = [\r\n        index\r\n    ];\r\n    let target;\r\n    if (!propagate) {\r\n        return fill;\r\n    }\r\n    while(fill !== false && visited.indexOf(fill) === -1){\r\n        if (!isNumberFinite(fill)) {\r\n            return fill;\r\n        }\r\n        target = sources[fill];\r\n        if (!target) {\r\n            return false;\r\n        }\r\n        if (target.visible) {\r\n            return fill;\r\n        }\r\n        visited.push(fill);\r\n        fill = target.fill;\r\n    }\r\n    return false;\r\n}\r\n function _decodeFill(line, index, count) {\r\n     const fill = parseFillOption(line);\r\n    if (isObject(fill)) {\r\n        return isNaN(fill.value) ? false : fill;\r\n    }\r\n    let target = parseFloat(fill);\r\n    if (isNumberFinite(target) && Math.floor(target) === target) {\r\n        return decodeTargetIndex(fill[0], index, target, count);\r\n    }\r\n    return [\r\n        'origin',\r\n        'start',\r\n        'end',\r\n        'stack',\r\n        'shape'\r\n    ].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n    if (firstCh === '-' || firstCh === '+') {\r\n        target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n        return false;\r\n    }\r\n    return target;\r\n}\r\n function _getTargetPixel(fill, scale) {\r\n    let pixel = null;\r\n    if (fill === 'start') {\r\n        pixel = scale.bottom;\r\n    } else if (fill === 'end') {\r\n        pixel = scale.top;\r\n    } else if (isObject(fill)) {\r\n        pixel = scale.getPixelForValue(fill.value);\r\n    } else if (scale.getBasePixel) {\r\n        pixel = scale.getBasePixel();\r\n    }\r\n    return pixel;\r\n}\r\n function _getTargetValue(fill, scale, startValue) {\r\n    let value;\r\n    if (fill === 'start') {\r\n        value = startValue;\r\n    } else if (fill === 'end') {\r\n        value = scale.options.reverse ? scale.min : scale.max;\r\n    } else if (isObject(fill)) {\r\n        value = fill.value;\r\n    } else {\r\n        value = scale.getBaseValue();\r\n    }\r\n    return value;\r\n}\r\n function parseFillOption(line) {\r\n    const options = line.options;\r\n    const fillOption = options.fill;\r\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n    if (fill === undefined) {\r\n        fill = !!options.backgroundColor;\r\n    }\r\n    if (fill === false || fill === null) {\r\n        return false;\r\n    }\r\n    if (fill === true) {\r\n        return 'origin';\r\n    }\r\n    return fill;\r\n}\r\n\r\nfunction _buildStackLine(source) {\r\n    const { scale , index , line  } = source;\r\n    const points = [];\r\n    const segments = line.segments;\r\n    const sourcePoints = line.points;\r\n    const linesBelow = getLinesBelow(scale, index);\r\n    linesBelow.push(_createBoundaryLine({\r\n        x: null,\r\n        y: scale.bottom\r\n    }, line));\r\n    for(let i = 0; i < segments.length; i++){\r\n        const segment = segments[i];\r\n        for(let j = segment.start; j <= segment.end; j++){\r\n            addPointsBelow(points, sourcePoints[j], linesBelow);\r\n        }\r\n    }\r\n    return new LineElement({\r\n        points,\r\n        options: {}\r\n    });\r\n}\r\n function getLinesBelow(scale, index) {\r\n    const below = [];\r\n    const metas = scale.getMatchingVisibleMetas('line');\r\n    for(let i = 0; i < metas.length; i++){\r\n        const meta = metas[i];\r\n        if (meta.index === index) {\r\n            break;\r\n        }\r\n        if (!meta.hidden) {\r\n            below.unshift(meta.dataset);\r\n        }\r\n    }\r\n    return below;\r\n}\r\n function addPointsBelow(points, sourcePoint, linesBelow) {\r\n    const postponed = [];\r\n    for(let j = 0; j < linesBelow.length; j++){\r\n        const line = linesBelow[j];\r\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\r\n        if (!point || first && last) {\r\n            continue;\r\n        }\r\n        if (first) {\r\n            postponed.unshift(point);\r\n        } else {\r\n            points.push(point);\r\n            if (!last) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    points.push(...postponed);\r\n}\r\n function findPoint(line, sourcePoint, property) {\r\n    const point = line.interpolate(sourcePoint, property);\r\n    if (!point) {\r\n        return {};\r\n    }\r\n    const pointValue = point[property];\r\n    const segments = line.segments;\r\n    const linePoints = line.points;\r\n    let first = false;\r\n    let last = false;\r\n    for(let i = 0; i < segments.length; i++){\r\n        const segment = segments[i];\r\n        const firstValue = linePoints[segment.start][property];\r\n        const lastValue = linePoints[segment.end][property];\r\n        if (_isBetween(pointValue, firstValue, lastValue)) {\r\n            first = pointValue === firstValue;\r\n            last = pointValue === lastValue;\r\n            break;\r\n        }\r\n    }\r\n    return {\r\n        first,\r\n        last,\r\n        point\r\n    };\r\n}\r\n\r\nclass simpleArc {\r\n    constructor(opts){\r\n        this.x = opts.x;\r\n        this.y = opts.y;\r\n        this.radius = opts.radius;\r\n    }\r\n    pathSegment(ctx, bounds, opts) {\r\n        const { x , y , radius  } = this;\r\n        bounds = bounds || {\r\n            start: 0,\r\n            end: TAU\r\n        };\r\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n        return !opts.bounds;\r\n    }\r\n    interpolate(point) {\r\n        const { x , y , radius  } = this;\r\n        const angle = point.angle;\r\n        return {\r\n            x: x + Math.cos(angle) * radius,\r\n            y: y + Math.sin(angle) * radius,\r\n            angle\r\n        };\r\n    }\r\n}\r\n\r\nfunction _getTarget(source) {\r\n    const { chart , fill , line  } = source;\r\n    if (isNumberFinite(fill)) {\r\n        return getLineByIndex(chart, fill);\r\n    }\r\n    if (fill === 'stack') {\r\n        return _buildStackLine(source);\r\n    }\r\n    if (fill === 'shape') {\r\n        return true;\r\n    }\r\n    const boundary = computeBoundary(source);\r\n    if (boundary instanceof simpleArc) {\r\n        return boundary;\r\n    }\r\n    return _createBoundaryLine(boundary, line);\r\n}\r\n function getLineByIndex(chart, index) {\r\n    const meta = chart.getDatasetMeta(index);\r\n    const visible = meta && chart.isDatasetVisible(index);\r\n    return visible ? meta.dataset : null;\r\n}\r\nfunction computeBoundary(source) {\r\n    const scale = source.scale || {};\r\n    if (scale.getPointPositionForValue) {\r\n        return computeCircularBoundary(source);\r\n    }\r\n    return computeLinearBoundary(source);\r\n}\r\nfunction computeLinearBoundary(source) {\r\n    const { scale ={} , fill  } = source;\r\n    const pixel = _getTargetPixel(fill, scale);\r\n    if (isNumberFinite(pixel)) {\r\n        const horizontal = scale.isHorizontal();\r\n        return {\r\n            x: horizontal ? pixel : null,\r\n            y: horizontal ? null : pixel\r\n        };\r\n    }\r\n    return null;\r\n}\r\nfunction computeCircularBoundary(source) {\r\n    const { scale , fill  } = source;\r\n    const options = scale.options;\r\n    const length = scale.getLabels().length;\r\n    const start = options.reverse ? scale.max : scale.min;\r\n    const value = _getTargetValue(fill, scale, start);\r\n    const target = [];\r\n    if (options.grid.circular) {\r\n        const center = scale.getPointPositionForValue(0, start);\r\n        return new simpleArc({\r\n            x: center.x,\r\n            y: center.y,\r\n            radius: scale.getDistanceFromCenterForValue(value)\r\n        });\r\n    }\r\n    for(let i = 0; i < length; ++i){\r\n        target.push(scale.getPointPositionForValue(i, value));\r\n    }\r\n    return target;\r\n}\r\n\r\nfunction _drawfill(ctx, source, area) {\r\n    const target = _getTarget(source);\r\n    const { chart , index , line , scale , axis  } = source;\r\n    const lineOpts = line.options;\r\n    const fillOption = lineOpts.fill;\r\n    const color = lineOpts.backgroundColor;\r\n    const { above =color , below =color  } = fillOption || {};\r\n    const meta = chart.getDatasetMeta(index);\r\n    const clip = getDatasetClipArea(chart, meta);\r\n    if (target && line.points.length) {\r\n        clipArea(ctx, area);\r\n        doFill(ctx, {\r\n            line,\r\n            target,\r\n            above,\r\n            below,\r\n            area,\r\n            scale,\r\n            axis,\r\n            clip\r\n        });\r\n        unclipArea(ctx);\r\n    }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n    const { line , target , above , below , area , scale , clip  } = cfg;\r\n    const property = line._loop ? 'angle' : cfg.axis;\r\n    ctx.save();\r\n    let fillColor = below;\r\n    if (below !== above) {\r\n        if (property === 'x') {\r\n            clipVertical(ctx, target, area.top);\r\n            fill(ctx, {\r\n                line,\r\n                target,\r\n                color: above,\r\n                scale,\r\n                property,\r\n                clip\r\n            });\r\n            ctx.restore();\r\n            ctx.save();\r\n            clipVertical(ctx, target, area.bottom);\r\n        } else if (property === 'y') {\r\n            clipHorizontal(ctx, target, area.left);\r\n            fill(ctx, {\r\n                line,\r\n                target,\r\n                color: below,\r\n                scale,\r\n                property,\r\n                clip\r\n            });\r\n            ctx.restore();\r\n            ctx.save();\r\n            clipHorizontal(ctx, target, area.right);\r\n            fillColor = above;\r\n        }\r\n    }\r\n    fill(ctx, {\r\n        line,\r\n        target,\r\n        color: fillColor,\r\n        scale,\r\n        property,\r\n        clip\r\n    });\r\n    ctx.restore();\r\n}\r\nfunction clipVertical(ctx, target, clipY) {\r\n    const { segments , points  } = target;\r\n    let first = true;\r\n    let lineLoop = false;\r\n    ctx.beginPath();\r\n    for (const segment of segments){\r\n        const { start , end  } = segment;\r\n        const firstPoint = points[start];\r\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n        if (first) {\r\n            ctx.moveTo(firstPoint.x, firstPoint.y);\r\n            first = false;\r\n        } else {\r\n            ctx.lineTo(firstPoint.x, clipY);\r\n            ctx.lineTo(firstPoint.x, firstPoint.y);\r\n        }\r\n        lineLoop = !!target.pathSegment(ctx, segment, {\r\n            move: lineLoop\r\n        });\r\n        if (lineLoop) {\r\n            ctx.closePath();\r\n        } else {\r\n            ctx.lineTo(lastPoint.x, clipY);\r\n        }\r\n    }\r\n    ctx.lineTo(target.first().x, clipY);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n}\r\nfunction clipHorizontal(ctx, target, clipX) {\r\n    const { segments , points  } = target;\r\n    let first = true;\r\n    let lineLoop = false;\r\n    ctx.beginPath();\r\n    for (const segment of segments){\r\n        const { start , end  } = segment;\r\n        const firstPoint = points[start];\r\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n        if (first) {\r\n            ctx.moveTo(firstPoint.x, firstPoint.y);\r\n            first = false;\r\n        } else {\r\n            ctx.lineTo(clipX, firstPoint.y);\r\n            ctx.lineTo(firstPoint.x, firstPoint.y);\r\n        }\r\n        lineLoop = !!target.pathSegment(ctx, segment, {\r\n            move: lineLoop\r\n        });\r\n        if (lineLoop) {\r\n            ctx.closePath();\r\n        } else {\r\n            ctx.lineTo(clipX, lastPoint.y);\r\n        }\r\n    }\r\n    ctx.lineTo(clipX, target.first().y);\r\n    ctx.closePath();\r\n    ctx.clip();\r\n}\r\nfunction fill(ctx, cfg) {\r\n    const { line , target , property , color , scale , clip  } = cfg;\r\n    const segments = _segments(line, target, property);\r\n    for (const { source: src , target: tgt , start , end  } of segments){\r\n        const { style: { backgroundColor =color  } = {}  } = src;\r\n        const notShape = target !== true;\r\n        ctx.save();\r\n        ctx.fillStyle = backgroundColor;\r\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\r\n        ctx.beginPath();\r\n        const lineLoop = !!line.pathSegment(ctx, src);\r\n        let loop;\r\n        if (notShape) {\r\n            if (lineLoop) {\r\n                ctx.closePath();\r\n            } else {\r\n                interpolatedLineTo(ctx, target, end, property);\r\n            }\r\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\r\n                move: lineLoop,\r\n                reverse: true\r\n            });\r\n            loop = lineLoop && targetLoop;\r\n            if (!loop) {\r\n                interpolatedLineTo(ctx, target, start, property);\r\n            }\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n        ctx.restore();\r\n    }\r\n}\r\nfunction clipBounds(ctx, scale, clip, bounds) {\r\n    const chartArea = scale.chart.chartArea;\r\n    const { property , start , end  } = bounds || {};\r\n    if (property === 'x' || property === 'y') {\r\n        let left, top, right, bottom;\r\n        if (property === 'x') {\r\n            left = start;\r\n            top = chartArea.top;\r\n            right = end;\r\n            bottom = chartArea.bottom;\r\n        } else {\r\n            left = chartArea.left;\r\n            top = start;\r\n            right = chartArea.right;\r\n            bottom = end;\r\n        }\r\n        ctx.beginPath();\r\n        if (clip) {\r\n            left = Math.max(left, clip.left);\r\n            right = Math.min(right, clip.right);\r\n            top = Math.max(top, clip.top);\r\n            bottom = Math.min(bottom, clip.bottom);\r\n        }\r\n        ctx.rect(left, top, right - left, bottom - top);\r\n        ctx.clip();\r\n    }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n    const interpolatedPoint = target.interpolate(point, property);\r\n    if (interpolatedPoint) {\r\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n    }\r\n}\r\n\r\nvar index = {\r\n    id: 'filler',\r\n    afterDatasetsUpdate (chart, _args, options) {\r\n        const count = (chart.data.datasets || []).length;\r\n        const sources = [];\r\n        let meta, i, line, source;\r\n        for(i = 0; i < count; ++i){\r\n            meta = chart.getDatasetMeta(i);\r\n            line = meta.dataset;\r\n            source = null;\r\n            if (line && line.options && line instanceof LineElement) {\r\n                source = {\r\n                    visible: chart.isDatasetVisible(i),\r\n                    index: i,\r\n                    fill: _decodeFill(line, i, count),\r\n                    chart,\r\n                    axis: meta.controller.options.indexAxis,\r\n                    scale: meta.vScale,\r\n                    line\r\n                };\r\n            }\r\n            meta.$filler = source;\r\n            sources.push(source);\r\n        }\r\n        for(i = 0; i < count; ++i){\r\n            source = sources[i];\r\n            if (!source || source.fill === false) {\r\n                continue;\r\n            }\r\n            source.fill = _resolveTarget(sources, i, options.propagate);\r\n        }\r\n    },\r\n    beforeDraw (chart, _args, options) {\r\n        const draw = options.drawTime === 'beforeDraw';\r\n        const metasets = chart.getSortedVisibleDatasetMetas();\r\n        const area = chart.chartArea;\r\n        for(let i = metasets.length - 1; i >= 0; --i){\r\n            const source = metasets[i].$filler;\r\n            if (!source) {\r\n                continue;\r\n            }\r\n            source.line.updateControlPoints(area, source.axis);\r\n            if (draw && source.fill) {\r\n                _drawfill(chart.ctx, source, area);\r\n            }\r\n        }\r\n    },\r\n    beforeDatasetsDraw (chart, _args, options) {\r\n        if (options.drawTime !== 'beforeDatasetsDraw') {\r\n            return;\r\n        }\r\n        const metasets = chart.getSortedVisibleDatasetMetas();\r\n        for(let i = metasets.length - 1; i >= 0; --i){\r\n            const source = metasets[i].$filler;\r\n            if (_shouldApplyFill(source)) {\r\n                _drawfill(chart.ctx, source, chart.chartArea);\r\n            }\r\n        }\r\n    },\r\n    beforeDatasetDraw (chart, args, options) {\r\n        const source = args.meta.$filler;\r\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n            return;\r\n        }\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n    },\r\n    defaults: {\r\n        propagate: true,\r\n        drawTime: 'beforeDatasetDraw'\r\n    }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize)=>{\r\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\r\n    if (labelOpts.usePointStyle) {\r\n        boxHeight = Math.min(boxHeight, fontSize);\r\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n    }\r\n    return {\r\n        boxWidth,\r\n        boxHeight,\r\n        itemHeight: Math.max(fontSize, boxHeight)\r\n    };\r\n};\r\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n constructor(config){\r\n        super();\r\n        this._added = false;\r\n        this.legendHitBoxes = [];\r\n this._hoveredItem = null;\r\n        this.doughnutMode = false;\r\n        this.chart = config.chart;\r\n        this.options = config.options;\r\n        this.ctx = config.ctx;\r\n        this.legendItems = undefined;\r\n        this.columnSizes = undefined;\r\n        this.lineWidths = undefined;\r\n        this.maxHeight = undefined;\r\n        this.maxWidth = undefined;\r\n        this.top = undefined;\r\n        this.bottom = undefined;\r\n        this.left = undefined;\r\n        this.right = undefined;\r\n        this.height = undefined;\r\n        this.width = undefined;\r\n        this._margins = undefined;\r\n        this.position = undefined;\r\n        this.weight = undefined;\r\n        this.fullSize = undefined;\r\n    }\r\n    update(maxWidth, maxHeight, margins) {\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n        this._margins = margins;\r\n        this.setDimensions();\r\n        this.buildLabels();\r\n        this.fit();\r\n    }\r\n    setDimensions() {\r\n        if (this.isHorizontal()) {\r\n            this.width = this.maxWidth;\r\n            this.left = this._margins.left;\r\n            this.right = this.width;\r\n        } else {\r\n            this.height = this.maxHeight;\r\n            this.top = this._margins.top;\r\n            this.bottom = this.height;\r\n        }\r\n    }\r\n    buildLabels() {\r\n        const labelOpts = this.options.labels || {};\r\n        let legendItems = callback(labelOpts.generateLabels, [\r\n            this.chart\r\n        ], this) || [];\r\n        if (labelOpts.filter) {\r\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\r\n        }\r\n        if (labelOpts.sort) {\r\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\r\n        }\r\n        if (this.options.reverse) {\r\n            legendItems.reverse();\r\n        }\r\n        this.legendItems = legendItems;\r\n    }\r\n    fit() {\r\n        const { options , ctx  } = this;\r\n        if (!options.display) {\r\n            this.width = this.height = 0;\r\n            return;\r\n        }\r\n        const labelOpts = options.labels;\r\n        const labelFont = toFont(labelOpts.font);\r\n        const fontSize = labelFont.size;\r\n        const titleHeight = this._computeTitleHeight();\r\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\r\n        let width, height;\r\n        ctx.font = labelFont.string;\r\n        if (this.isHorizontal()) {\r\n            width = this.maxWidth;\r\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n        } else {\r\n            height = this.maxHeight;\r\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\r\n        }\r\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n    }\r\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\r\n        const hitboxes = this.legendHitBoxes = [];\r\n        const lineWidths = this.lineWidths = [\r\n            0\r\n        ];\r\n        const lineHeight = itemHeight + padding;\r\n        let totalHeight = titleHeight;\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'middle';\r\n        let row = -1;\r\n        let top = -lineHeight;\r\n        this.legendItems.forEach((legendItem, i)=>{\r\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\r\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n                totalHeight += lineHeight;\r\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n                top += lineHeight;\r\n                row++;\r\n            }\r\n            hitboxes[i] = {\r\n                left: 0,\r\n                top,\r\n                row,\r\n                width: itemWidth,\r\n                height: itemHeight\r\n            };\r\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n        });\r\n        return totalHeight;\r\n    }\r\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\r\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\r\n        const hitboxes = this.legendHitBoxes = [];\r\n        const columnSizes = this.columnSizes = [];\r\n        const heightLimit = maxHeight - titleHeight;\r\n        let totalWidth = padding;\r\n        let currentColWidth = 0;\r\n        let currentColHeight = 0;\r\n        let left = 0;\r\n        let col = 0;\r\n        this.legendItems.forEach((legendItem, i)=>{\r\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\r\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n                totalWidth += currentColWidth + padding;\r\n                columnSizes.push({\r\n                    width: currentColWidth,\r\n                    height: currentColHeight\r\n                });\r\n                left += currentColWidth + padding;\r\n                col++;\r\n                currentColWidth = currentColHeight = 0;\r\n            }\r\n            hitboxes[i] = {\r\n                left,\r\n                top: currentColHeight,\r\n                col,\r\n                width: itemWidth,\r\n                height: itemHeight\r\n            };\r\n            currentColWidth = Math.max(currentColWidth, itemWidth);\r\n            currentColHeight += itemHeight + padding;\r\n        });\r\n        totalWidth += currentColWidth;\r\n        columnSizes.push({\r\n            width: currentColWidth,\r\n            height: currentColHeight\r\n        });\r\n        return totalWidth;\r\n    }\r\n    adjustHitBoxes() {\r\n        if (!this.options.display) {\r\n            return;\r\n        }\r\n        const titleHeight = this._computeTitleHeight();\r\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\r\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n        if (this.isHorizontal()) {\r\n            let row = 0;\r\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n            for (const hitbox of hitboxes){\r\n                if (row !== hitbox.row) {\r\n                    row = hitbox.row;\r\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n                }\r\n                hitbox.top += this.top + titleHeight + padding;\r\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n                left += hitbox.width + padding;\r\n            }\r\n        } else {\r\n            let col = 0;\r\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n            for (const hitbox of hitboxes){\r\n                if (hitbox.col !== col) {\r\n                    col = hitbox.col;\r\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n                }\r\n                hitbox.top = top;\r\n                hitbox.left += this.left + padding;\r\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n                top += hitbox.height + padding;\r\n            }\r\n        }\r\n    }\r\n    isHorizontal() {\r\n        return this.options.position === 'top' || this.options.position === 'bottom';\r\n    }\r\n    draw() {\r\n        if (this.options.display) {\r\n            const ctx = this.ctx;\r\n            clipArea(ctx, this);\r\n            this._draw();\r\n            unclipArea(ctx);\r\n        }\r\n    }\r\n _draw() {\r\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\r\n        const { align , labels: labelOpts  } = opts;\r\n        const defaultColor = defaults.color;\r\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n        const labelFont = toFont(labelOpts.font);\r\n        const { padding  } = labelOpts;\r\n        const fontSize = labelFont.size;\r\n        const halfFontSize = fontSize / 2;\r\n        let cursor;\r\n        this.drawTitle();\r\n        ctx.textAlign = rtlHelper.textAlign('left');\r\n        ctx.textBaseline = 'middle';\r\n        ctx.lineWidth = 0.5;\r\n        ctx.font = labelFont.string;\r\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\r\n        const drawLegendBox = function(x, y, legendItem) {\r\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n            if (labelOpts.usePointStyle) {\r\n                const drawOptions = {\r\n                    radius: boxHeight * Math.SQRT2 / 2,\r\n                    pointStyle: legendItem.pointStyle,\r\n                    rotation: legendItem.rotation,\r\n                    borderWidth: lineWidth\r\n                };\r\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n                const centerY = y + halfFontSize;\r\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n            } else {\r\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n                ctx.beginPath();\r\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\r\n                    addRoundedRectPath(ctx, {\r\n                        x: xBoxLeft,\r\n                        y: yBoxTop,\r\n                        w: boxWidth,\r\n                        h: boxHeight,\r\n                        radius: borderRadius\r\n                    });\r\n                } else {\r\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n                }\r\n                ctx.fill();\r\n                if (lineWidth !== 0) {\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n            ctx.restore();\r\n        };\r\n        const fillText = function(x, y, legendItem) {\r\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\r\n                strikethrough: legendItem.hidden,\r\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n            });\r\n        };\r\n        const isHorizontal = this.isHorizontal();\r\n        const titleHeight = this._computeTitleHeight();\r\n        if (isHorizontal) {\r\n            cursor = {\r\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n                y: this.top + padding + titleHeight,\r\n                line: 0\r\n            };\r\n        } else {\r\n            cursor = {\r\n                x: this.left + padding,\r\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n                line: 0\r\n            };\r\n        }\r\n        overrideTextDirection(this.ctx, opts.textDirection);\r\n        const lineHeight = itemHeight + padding;\r\n        this.legendItems.forEach((legendItem, i)=>{\r\n            ctx.strokeStyle = legendItem.fontColor;\r\n            ctx.fillStyle = legendItem.fontColor;\r\n            const textWidth = ctx.measureText(legendItem.text).width;\r\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n            const width = boxWidth + halfFontSize + textWidth;\r\n            let x = cursor.x;\r\n            let y = cursor.y;\r\n            rtlHelper.setWidth(this.width);\r\n            if (isHorizontal) {\r\n                if (i > 0 && x + width + padding > this.right) {\r\n                    y = cursor.y += lineHeight;\r\n                    cursor.line++;\r\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n                }\r\n            } else if (i > 0 && y + lineHeight > this.bottom) {\r\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n                cursor.line++;\r\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n            }\r\n            const realX = rtlHelper.x(x);\r\n            drawLegendBox(realX, y, legendItem);\r\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n            fillText(rtlHelper.x(x), y, legendItem);\r\n            if (isHorizontal) {\r\n                cursor.x += width + padding;\r\n            } else if (typeof legendItem.text !== 'string') {\r\n                const fontLineHeight = labelFont.lineHeight;\r\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\r\n            } else {\r\n                cursor.y += lineHeight;\r\n            }\r\n        });\r\n        restoreTextDirection(this.ctx, opts.textDirection);\r\n    }\r\n drawTitle() {\r\n        const opts = this.options;\r\n        const titleOpts = opts.title;\r\n        const titleFont = toFont(titleOpts.font);\r\n        const titlePadding = toPadding(titleOpts.padding);\r\n        if (!titleOpts.display) {\r\n            return;\r\n        }\r\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n        const ctx = this.ctx;\r\n        const position = titleOpts.position;\r\n        const halfFontSize = titleFont.size / 2;\r\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n        let y;\r\n        let left = this.left;\r\n        let maxWidth = this.width;\r\n        if (this.isHorizontal()) {\r\n            maxWidth = Math.max(...this.lineWidths);\r\n            y = this.top + topPaddingPlusHalfFontSize;\r\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n        } else {\r\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\r\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n        }\r\n        const x = _alignStartEnd(position, left, left + maxWidth);\r\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n        ctx.textBaseline = 'middle';\r\n        ctx.strokeStyle = titleOpts.color;\r\n        ctx.fillStyle = titleOpts.color;\r\n        ctx.font = titleFont.string;\r\n        renderText(ctx, titleOpts.text, x, y, titleFont);\r\n    }\r\n _computeTitleHeight() {\r\n        const titleOpts = this.options.title;\r\n        const titleFont = toFont(titleOpts.font);\r\n        const titlePadding = toPadding(titleOpts.padding);\r\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n    }\r\n _getLegendItemAt(x, y) {\r\n        let i, hitBox, lh;\r\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\r\n            lh = this.legendHitBoxes;\r\n            for(i = 0; i < lh.length; ++i){\r\n                hitBox = lh[i];\r\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n                    return this.legendItems[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n handleEvent(e) {\r\n        const opts = this.options;\r\n        if (!isListened(e.type, opts)) {\r\n            return;\r\n        }\r\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n            const previous = this._hoveredItem;\r\n            const sameItem = itemsEqual(previous, hoveredItem);\r\n            if (previous && !sameItem) {\r\n                callback(opts.onLeave, [\r\n                    e,\r\n                    previous,\r\n                    this\r\n                ], this);\r\n            }\r\n            this._hoveredItem = hoveredItem;\r\n            if (hoveredItem && !sameItem) {\r\n                callback(opts.onHover, [\r\n                    e,\r\n                    hoveredItem,\r\n                    this\r\n                ], this);\r\n            }\r\n        } else if (hoveredItem) {\r\n            callback(opts.onClick, [\r\n                e,\r\n                hoveredItem,\r\n                this\r\n            ], this);\r\n        }\r\n    }\r\n}\r\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\r\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\r\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\r\n    return {\r\n        itemWidth,\r\n        itemHeight\r\n    };\r\n}\r\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\r\n    let legendItemText = legendItem.text;\r\n    if (legendItemText && typeof legendItemText !== 'string') {\r\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\r\n    }\r\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\r\n}\r\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\r\n    let itemHeight = _itemHeight;\r\n    if (typeof legendItem.text !== 'string') {\r\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\r\n    }\r\n    return itemHeight;\r\n}\r\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\r\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\r\n    return fontLineHeight * labelHeight;\r\n}\r\nfunction isListened(type, opts) {\r\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n        return true;\r\n    }\r\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nvar plugin_legend = {\r\n    id: 'legend',\r\n _element: Legend,\r\n    start (chart, _args, options) {\r\n        const legend = chart.legend = new Legend({\r\n            ctx: chart.ctx,\r\n            options,\r\n            chart\r\n        });\r\n        layouts.configure(chart, legend, options);\r\n        layouts.addBox(chart, legend);\r\n    },\r\n    stop (chart) {\r\n        layouts.removeBox(chart, chart.legend);\r\n        delete chart.legend;\r\n    },\r\n    beforeUpdate (chart, _args, options) {\r\n        const legend = chart.legend;\r\n        layouts.configure(chart, legend, options);\r\n        legend.options = options;\r\n    },\r\n    afterUpdate (chart) {\r\n        const legend = chart.legend;\r\n        legend.buildLabels();\r\n        legend.adjustHitBoxes();\r\n    },\r\n    afterEvent (chart, args) {\r\n        if (!args.replay) {\r\n            chart.legend.handleEvent(args.event);\r\n        }\r\n    },\r\n    defaults: {\r\n        display: true,\r\n        position: 'top',\r\n        align: 'center',\r\n        fullSize: true,\r\n        reverse: false,\r\n        weight: 1000,\r\n        onClick (e, legendItem, legend) {\r\n            const index = legendItem.datasetIndex;\r\n            const ci = legend.chart;\r\n            if (ci.isDatasetVisible(index)) {\r\n                ci.hide(index);\r\n                legendItem.hidden = true;\r\n            } else {\r\n                ci.show(index);\r\n                legendItem.hidden = false;\r\n            }\r\n        },\r\n        onHover: null,\r\n        onLeave: null,\r\n        labels: {\r\n            color: (ctx)=>ctx.chart.options.color,\r\n            boxWidth: 40,\r\n            padding: 10,\r\n            generateLabels (chart) {\r\n                const datasets = chart.data.datasets;\r\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\r\n                return chart._getSortedDatasetMetas().map((meta)=>{\r\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n                    const borderWidth = toPadding(style.borderWidth);\r\n                    return {\r\n                        text: datasets[meta.index].label,\r\n                        fillStyle: style.backgroundColor,\r\n                        fontColor: color,\r\n                        hidden: !meta.visible,\r\n                        lineCap: style.borderCapStyle,\r\n                        lineDash: style.borderDash,\r\n                        lineDashOffset: style.borderDashOffset,\r\n                        lineJoin: style.borderJoinStyle,\r\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n                        strokeStyle: style.borderColor,\r\n                        pointStyle: pointStyle || style.pointStyle,\r\n                        rotation: style.rotation,\r\n                        textAlign: textAlign || style.textAlign,\r\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\r\n                        datasetIndex: meta.index\r\n                    };\r\n                }, this);\r\n            }\r\n        },\r\n        title: {\r\n            color: (ctx)=>ctx.chart.options.color,\r\n            display: false,\r\n            position: 'center',\r\n            text: ''\r\n        }\r\n    },\r\n    descriptors: {\r\n        _scriptable: (name)=>!name.startsWith('on'),\r\n        labels: {\r\n            _scriptable: (name)=>![\r\n                    'generateLabels',\r\n                    'filter',\r\n                    'sort'\r\n                ].includes(name)\r\n        }\r\n    }\r\n};\r\n\r\nclass Title extends Element {\r\n constructor(config){\r\n        super();\r\n        this.chart = config.chart;\r\n        this.options = config.options;\r\n        this.ctx = config.ctx;\r\n        this._padding = undefined;\r\n        this.top = undefined;\r\n        this.bottom = undefined;\r\n        this.left = undefined;\r\n        this.right = undefined;\r\n        this.width = undefined;\r\n        this.height = undefined;\r\n        this.position = undefined;\r\n        this.weight = undefined;\r\n        this.fullSize = undefined;\r\n    }\r\n    update(maxWidth, maxHeight) {\r\n        const opts = this.options;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        if (!opts.display) {\r\n            this.width = this.height = this.right = this.bottom = 0;\r\n            return;\r\n        }\r\n        this.width = this.right = maxWidth;\r\n        this.height = this.bottom = maxHeight;\r\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n        this._padding = toPadding(opts.padding);\r\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n        if (this.isHorizontal()) {\r\n            this.height = textSize;\r\n        } else {\r\n            this.width = textSize;\r\n        }\r\n    }\r\n    isHorizontal() {\r\n        const pos = this.options.position;\r\n        return pos === 'top' || pos === 'bottom';\r\n    }\r\n    _drawArgs(offset) {\r\n        const { top , left , bottom , right , options  } = this;\r\n        const align = options.align;\r\n        let rotation = 0;\r\n        let maxWidth, titleX, titleY;\r\n        if (this.isHorizontal()) {\r\n            titleX = _alignStartEnd(align, left, right);\r\n            titleY = top + offset;\r\n            maxWidth = right - left;\r\n        } else {\r\n            if (options.position === 'left') {\r\n                titleX = left + offset;\r\n                titleY = _alignStartEnd(align, bottom, top);\r\n                rotation = PI * -0.5;\r\n            } else {\r\n                titleX = right - offset;\r\n                titleY = _alignStartEnd(align, top, bottom);\r\n                rotation = PI * 0.5;\r\n            }\r\n            maxWidth = bottom - top;\r\n        }\r\n        return {\r\n            titleX,\r\n            titleY,\r\n            maxWidth,\r\n            rotation\r\n        };\r\n    }\r\n    draw() {\r\n        const ctx = this.ctx;\r\n        const opts = this.options;\r\n        if (!opts.display) {\r\n            return;\r\n        }\r\n        const fontOpts = toFont(opts.font);\r\n        const lineHeight = fontOpts.lineHeight;\r\n        const offset = lineHeight / 2 + this._padding.top;\r\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\r\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n            color: opts.color,\r\n            maxWidth,\r\n            rotation,\r\n            textAlign: _toLeftRightCenter(opts.align),\r\n            textBaseline: 'middle',\r\n            translation: [\r\n                titleX,\r\n                titleY\r\n            ]\r\n        });\r\n    }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n    const title = new Title({\r\n        ctx: chart.ctx,\r\n        options: titleOpts,\r\n        chart\r\n    });\r\n    layouts.configure(chart, title, titleOpts);\r\n    layouts.addBox(chart, title);\r\n    chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n    id: 'title',\r\n _element: Title,\r\n    start (chart, _args, options) {\r\n        createTitle(chart, options);\r\n    },\r\n    stop (chart) {\r\n        const titleBlock = chart.titleBlock;\r\n        layouts.removeBox(chart, titleBlock);\r\n        delete chart.titleBlock;\r\n    },\r\n    beforeUpdate (chart, _args, options) {\r\n        const title = chart.titleBlock;\r\n        layouts.configure(chart, title, options);\r\n        title.options = options;\r\n    },\r\n    defaults: {\r\n        align: 'center',\r\n        display: false,\r\n        font: {\r\n            weight: 'bold'\r\n        },\r\n        fullSize: true,\r\n        padding: 10,\r\n        position: 'top',\r\n        text: '',\r\n        weight: 2000\r\n    },\r\n    defaultRoutes: {\r\n        color: 'color'\r\n    },\r\n    descriptors: {\r\n        _scriptable: true,\r\n        _indexable: false\r\n    }\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n    id: 'subtitle',\r\n    start (chart, _args, options) {\r\n        const title = new Title({\r\n            ctx: chart.ctx,\r\n            options,\r\n            chart\r\n        });\r\n        layouts.configure(chart, title, options);\r\n        layouts.addBox(chart, title);\r\n        map.set(chart, title);\r\n    },\r\n    stop (chart) {\r\n        layouts.removeBox(chart, map.get(chart));\r\n        map.delete(chart);\r\n    },\r\n    beforeUpdate (chart, _args, options) {\r\n        const title = map.get(chart);\r\n        layouts.configure(chart, title, options);\r\n        title.options = options;\r\n    },\r\n    defaults: {\r\n        align: 'center',\r\n        display: false,\r\n        font: {\r\n            weight: 'normal'\r\n        },\r\n        fullSize: true,\r\n        padding: 0,\r\n        position: 'top',\r\n        text: '',\r\n        weight: 1500\r\n    },\r\n    defaultRoutes: {\r\n        color: 'color'\r\n    },\r\n    descriptors: {\r\n        _scriptable: true,\r\n        _indexable: false\r\n    }\r\n};\r\n\r\nconst positioners = {\r\n average (items) {\r\n        if (!items.length) {\r\n            return false;\r\n        }\r\n        let i, len;\r\n        let xSet = new Set();\r\n        let y = 0;\r\n        let count = 0;\r\n        for(i = 0, len = items.length; i < len; ++i){\r\n            const el = items[i].element;\r\n            if (el && el.hasValue()) {\r\n                const pos = el.tooltipPosition();\r\n                xSet.add(pos.x);\r\n                y += pos.y;\r\n                ++count;\r\n            }\r\n        }\r\n        if (count === 0 || xSet.size === 0) {\r\n            return false;\r\n        }\r\n        const xAverage = [\r\n            ...xSet\r\n        ].reduce((a, b)=>a + b) / xSet.size;\r\n        return {\r\n            x: xAverage,\r\n            y: y / count\r\n        };\r\n    },\r\n nearest (items, eventPosition) {\r\n        if (!items.length) {\r\n            return false;\r\n        }\r\n        let x = eventPosition.x;\r\n        let y = eventPosition.y;\r\n        let minDistance = Number.POSITIVE_INFINITY;\r\n        let i, len, nearestElement;\r\n        for(i = 0, len = items.length; i < len; ++i){\r\n            const el = items[i].element;\r\n            if (el && el.hasValue()) {\r\n                const center = el.getCenterPoint();\r\n                const d = distanceBetweenPoints(eventPosition, center);\r\n                if (d < minDistance) {\r\n                    minDistance = d;\r\n                    nearestElement = el;\r\n                }\r\n            }\r\n        }\r\n        if (nearestElement) {\r\n            const tp = nearestElement.tooltipPosition();\r\n            x = tp.x;\r\n            y = tp.y;\r\n        }\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n    if (toPush) {\r\n        if (isArray(toPush)) {\r\n            Array.prototype.push.apply(base, toPush);\r\n        } else {\r\n            base.push(toPush);\r\n        }\r\n    }\r\n    return base;\r\n}\r\n function splitNewlines(str) {\r\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n        return str.split('\\n');\r\n    }\r\n    return str;\r\n}\r\n function createTooltipItem(chart, item) {\r\n    const { element , datasetIndex , index  } = item;\r\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n    const { label , value  } = controller.getLabelAndValue(index);\r\n    return {\r\n        chart,\r\n        label,\r\n        parsed: controller.getParsed(index),\r\n        raw: chart.data.datasets[datasetIndex].data[index],\r\n        formattedValue: value,\r\n        dataset: controller.getDataset(),\r\n        dataIndex: index,\r\n        datasetIndex,\r\n        element\r\n    };\r\n}\r\n function getTooltipSize(tooltip, options) {\r\n    const ctx = tooltip.chart.ctx;\r\n    const { body , footer , title  } = tooltip;\r\n    const { boxWidth , boxHeight  } = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const titleFont = toFont(options.titleFont);\r\n    const footerFont = toFont(options.footerFont);\r\n    const titleLineCount = title.length;\r\n    const footerLineCount = footer.length;\r\n    const bodyLineItemCount = body.length;\r\n    const padding = toPadding(options.padding);\r\n    let height = padding.height;\r\n    let width = 0;\r\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n    if (titleLineCount) {\r\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\r\n    }\r\n    if (combinedBodyLength) {\r\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\r\n    }\r\n    if (footerLineCount) {\r\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\r\n    }\r\n    let widthPadding = 0;\r\n    const maxLineWidth = function(line) {\r\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n    };\r\n    ctx.save();\r\n    ctx.font = titleFont.string;\r\n    each(tooltip.title, maxLineWidth);\r\n    ctx.font = bodyFont.string;\r\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\r\n    each(body, (bodyItem)=>{\r\n        each(bodyItem.before, maxLineWidth);\r\n        each(bodyItem.lines, maxLineWidth);\r\n        each(bodyItem.after, maxLineWidth);\r\n    });\r\n    widthPadding = 0;\r\n    ctx.font = footerFont.string;\r\n    each(tooltip.footer, maxLineWidth);\r\n    ctx.restore();\r\n    width += padding.width;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\nfunction determineYAlign(chart, size) {\r\n    const { y , height  } = size;\r\n    if (y < height / 2) {\r\n        return 'top';\r\n    } else if (y > chart.height - height / 2) {\r\n        return 'bottom';\r\n    }\r\n    return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n    const { x , width  } = size;\r\n    const caret = options.caretSize + options.caretPadding;\r\n    if (xAlign === 'left' && x + width + caret > chart.width) {\r\n        return true;\r\n    }\r\n    if (xAlign === 'right' && x - width - caret < 0) {\r\n        return true;\r\n    }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n    const { x , width  } = size;\r\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\r\n    let xAlign = 'center';\r\n    if (yAlign === 'center') {\r\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n    } else if (x <= width / 2) {\r\n        xAlign = 'left';\r\n    } else if (x >= chartWidth - width / 2) {\r\n        xAlign = 'right';\r\n    }\r\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n        xAlign = 'center';\r\n    }\r\n    return xAlign;\r\n}\r\n function determineAlignment(chart, options, size) {\r\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n    return {\r\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n        yAlign\r\n    };\r\n}\r\nfunction alignX(size, xAlign) {\r\n    let { x , width  } = size;\r\n    if (xAlign === 'right') {\r\n        x -= width;\r\n    } else if (xAlign === 'center') {\r\n        x -= width / 2;\r\n    }\r\n    return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n    let { y , height  } = size;\r\n    if (yAlign === 'top') {\r\n        y += paddingAndSize;\r\n    } else if (yAlign === 'bottom') {\r\n        y -= height + paddingAndSize;\r\n    } else {\r\n        y -= height / 2;\r\n    }\r\n    return y;\r\n}\r\n function getBackgroundPoint(options, size, alignment, chart) {\r\n    const { caretSize , caretPadding , cornerRadius  } = options;\r\n    const { xAlign , yAlign  } = alignment;\r\n    const paddingAndSize = caretSize + caretPadding;\r\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\r\n    let x = alignX(size, xAlign);\r\n    const y = alignY(size, yAlign, paddingAndSize);\r\n    if (yAlign === 'center') {\r\n        if (xAlign === 'left') {\r\n            x += paddingAndSize;\r\n        } else if (xAlign === 'right') {\r\n            x -= paddingAndSize;\r\n        }\r\n    } else if (xAlign === 'left') {\r\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n    } else if (xAlign === 'right') {\r\n        x += Math.max(topRight, bottomRight) + caretSize;\r\n    }\r\n    return {\r\n        x: _limitValue(x, 0, chart.width - size.width),\r\n        y: _limitValue(y, 0, chart.height - size.height)\r\n    };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n    const padding = toPadding(options.padding);\r\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\r\n}\r\n function getBeforeAfterBodyLines(callback) {\r\n    return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n    return createContext(parent, {\r\n        tooltip,\r\n        tooltipItems,\r\n        type: 'tooltip'\r\n    });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n    return override ? callbacks.override(override) : callbacks;\r\n}\r\nconst defaultCallbacks = {\r\n    beforeTitle: noop,\r\n    title (tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n            const item = tooltipItems[0];\r\n            const labels = item.chart.data.labels;\r\n            const labelCount = labels ? labels.length : 0;\r\n            if (this && this.options && this.options.mode === 'dataset') {\r\n                return item.dataset.label || '';\r\n            } else if (item.label) {\r\n                return item.label;\r\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n                return labels[item.dataIndex];\r\n            }\r\n        }\r\n        return '';\r\n    },\r\n    afterTitle: noop,\r\n    beforeBody: noop,\r\n    beforeLabel: noop,\r\n    label (tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n            label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n            label += value;\r\n        }\r\n        return label;\r\n    },\r\n    labelColor (tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n            borderColor: options.borderColor,\r\n            backgroundColor: options.backgroundColor,\r\n            borderWidth: options.borderWidth,\r\n            borderDash: options.borderDash,\r\n            borderDashOffset: options.borderDashOffset,\r\n            borderRadius: 0\r\n        };\r\n    },\r\n    labelTextColor () {\r\n        return this.options.bodyColor;\r\n    },\r\n    labelPointStyle (tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n            pointStyle: options.pointStyle,\r\n            rotation: options.rotation\r\n        };\r\n    },\r\n    afterLabel: noop,\r\n    afterBody: noop,\r\n    beforeFooter: noop,\r\n    footer: noop,\r\n    afterFooter: noop\r\n};\r\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\r\n    const result = callbacks[name].call(ctx, arg);\r\n    if (typeof result === 'undefined') {\r\n        return defaultCallbacks[name].call(ctx, arg);\r\n    }\r\n    return result;\r\n}\r\nclass Tooltip extends Element {\r\n static positioners = positioners;\r\n    constructor(config){\r\n        super();\r\n        this.opacity = 0;\r\n        this._active = [];\r\n        this._eventPosition = undefined;\r\n        this._size = undefined;\r\n        this._cachedAnimations = undefined;\r\n        this._tooltipItems = [];\r\n        this.$animations = undefined;\r\n        this.$context = undefined;\r\n        this.chart = config.chart;\r\n        this.options = config.options;\r\n        this.dataPoints = undefined;\r\n        this.title = undefined;\r\n        this.beforeBody = undefined;\r\n        this.body = undefined;\r\n        this.afterBody = undefined;\r\n        this.footer = undefined;\r\n        this.xAlign = undefined;\r\n        this.yAlign = undefined;\r\n        this.x = undefined;\r\n        this.y = undefined;\r\n        this.height = undefined;\r\n        this.width = undefined;\r\n        this.caretX = undefined;\r\n        this.caretY = undefined;\r\n        this.labelColors = undefined;\r\n        this.labelPointStyles = undefined;\r\n        this.labelTextColors = undefined;\r\n    }\r\n    initialize(options) {\r\n        this.options = options;\r\n        this._cachedAnimations = undefined;\r\n        this.$context = undefined;\r\n    }\r\n _resolveAnimations() {\r\n        const cached = this._cachedAnimations;\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        const chart = this.chart;\r\n        const options = this.options.setContext(this.getContext());\r\n        const opts = options.enabled && chart.options.animation && options.animations;\r\n        const animations = new Animations(this.chart, opts);\r\n        if (opts._cacheable) {\r\n            this._cachedAnimations = Object.freeze(animations);\r\n        }\r\n        return animations;\r\n    }\r\n getContext() {\r\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n    }\r\n    getTitle(context, options) {\r\n        const { callbacks  } = options;\r\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\r\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\r\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\r\n        let lines = [];\r\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n        lines = pushOrConcat(lines, splitNewlines(title));\r\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n        return lines;\r\n    }\r\n    getBeforeBody(tooltipItems, options) {\r\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\r\n    }\r\n    getBody(tooltipItems, options) {\r\n        const { callbacks  } = options;\r\n        const bodyItems = [];\r\n        each(tooltipItems, (context)=>{\r\n            const bodyItem = {\r\n                before: [],\r\n                lines: [],\r\n                after: []\r\n            };\r\n            const scoped = overrideCallbacks(callbacks, context);\r\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\r\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\r\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\r\n            bodyItems.push(bodyItem);\r\n        });\r\n        return bodyItems;\r\n    }\r\n    getAfterBody(tooltipItems, options) {\r\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\r\n    }\r\n    getFooter(tooltipItems, options) {\r\n        const { callbacks  } = options;\r\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\r\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\r\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\r\n        let lines = [];\r\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n        lines = pushOrConcat(lines, splitNewlines(footer));\r\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n        return lines;\r\n    }\r\n _createItems(options) {\r\n        const active = this._active;\r\n        const data = this.chart.data;\r\n        const labelColors = [];\r\n        const labelPointStyles = [];\r\n        const labelTextColors = [];\r\n        let tooltipItems = [];\r\n        let i, len;\r\n        for(i = 0, len = active.length; i < len; ++i){\r\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n        }\r\n        if (options.filter) {\r\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\r\n        }\r\n        if (options.itemSort) {\r\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\r\n        }\r\n        each(tooltipItems, (context)=>{\r\n            const scoped = overrideCallbacks(options.callbacks, context);\r\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\r\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\r\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\r\n        });\r\n        this.labelColors = labelColors;\r\n        this.labelPointStyles = labelPointStyles;\r\n        this.labelTextColors = labelTextColors;\r\n        this.dataPoints = tooltipItems;\r\n        return tooltipItems;\r\n    }\r\n    update(changed, replay) {\r\n        const options = this.options.setContext(this.getContext());\r\n        const active = this._active;\r\n        let properties;\r\n        let tooltipItems = [];\r\n        if (!active.length) {\r\n            if (this.opacity !== 0) {\r\n                properties = {\r\n                    opacity: 0\r\n                };\r\n            }\r\n        } else {\r\n            const position = positioners[options.position].call(this, active, this._eventPosition);\r\n            tooltipItems = this._createItems(options);\r\n            this.title = this.getTitle(tooltipItems, options);\r\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n            this.body = this.getBody(tooltipItems, options);\r\n            this.afterBody = this.getAfterBody(tooltipItems, options);\r\n            this.footer = this.getFooter(tooltipItems, options);\r\n            const size = this._size = getTooltipSize(this, options);\r\n            const positionAndSize = Object.assign({}, position, size);\r\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n            this.xAlign = alignment.xAlign;\r\n            this.yAlign = alignment.yAlign;\r\n            properties = {\r\n                opacity: 1,\r\n                x: backgroundPoint.x,\r\n                y: backgroundPoint.y,\r\n                width: size.width,\r\n                height: size.height,\r\n                caretX: position.x,\r\n                caretY: position.y\r\n            };\r\n        }\r\n        this._tooltipItems = tooltipItems;\r\n        this.$context = undefined;\r\n        if (properties) {\r\n            this._resolveAnimations().update(this, properties);\r\n        }\r\n        if (changed && options.external) {\r\n            options.external.call(this, {\r\n                chart: this.chart,\r\n                tooltip: this,\r\n                replay\r\n            });\r\n        }\r\n    }\r\n    drawCaret(tooltipPoint, ctx, size, options) {\r\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n    }\r\n    getCaretPosition(tooltipPoint, size, options) {\r\n        const { xAlign , yAlign  } = this;\r\n        const { caretSize , cornerRadius  } = options;\r\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\r\n        const { x: ptX , y: ptY  } = tooltipPoint;\r\n        const { width , height  } = size;\r\n        let x1, x2, x3, y1, y2, y3;\r\n        if (yAlign === 'center') {\r\n            y2 = ptY + height / 2;\r\n            if (xAlign === 'left') {\r\n                x1 = ptX;\r\n                x2 = x1 - caretSize;\r\n                y1 = y2 + caretSize;\r\n                y3 = y2 - caretSize;\r\n            } else {\r\n                x1 = ptX + width;\r\n                x2 = x1 + caretSize;\r\n                y1 = y2 - caretSize;\r\n                y3 = y2 + caretSize;\r\n            }\r\n            x3 = x1;\r\n        } else {\r\n            if (xAlign === 'left') {\r\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\r\n            } else if (xAlign === 'right') {\r\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n            } else {\r\n                x2 = this.caretX;\r\n            }\r\n            if (yAlign === 'top') {\r\n                y1 = ptY;\r\n                y2 = y1 - caretSize;\r\n                x1 = x2 - caretSize;\r\n                x3 = x2 + caretSize;\r\n            } else {\r\n                y1 = ptY + height;\r\n                y2 = y1 + caretSize;\r\n                x1 = x2 + caretSize;\r\n                x3 = x2 - caretSize;\r\n            }\r\n            y3 = y1;\r\n        }\r\n        return {\r\n            x1,\r\n            x2,\r\n            x3,\r\n            y1,\r\n            y2,\r\n            y3\r\n        };\r\n    }\r\n    drawTitle(pt, ctx, options) {\r\n        const title = this.title;\r\n        const length = title.length;\r\n        let titleFont, titleSpacing, i;\r\n        if (length) {\r\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n            pt.x = getAlignedX(this, options.titleAlign, options);\r\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n            ctx.textBaseline = 'middle';\r\n            titleFont = toFont(options.titleFont);\r\n            titleSpacing = options.titleSpacing;\r\n            ctx.fillStyle = options.titleColor;\r\n            ctx.font = titleFont.string;\r\n            for(i = 0; i < length; ++i){\r\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n                pt.y += titleFont.lineHeight + titleSpacing;\r\n                if (i + 1 === length) {\r\n                    pt.y += options.titleMarginBottom - titleSpacing;\r\n                }\r\n            }\r\n        }\r\n    }\r\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n        const labelColor = this.labelColors[i];\r\n        const labelPointStyle = this.labelPointStyles[i];\r\n        const { boxHeight , boxWidth  } = options;\r\n        const bodyFont = toFont(options.bodyFont);\r\n        const colorX = getAlignedX(this, 'left', options);\r\n        const rtlColorX = rtlHelper.x(colorX);\r\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n        const colorY = pt.y + yOffSet;\r\n        if (options.usePointStyle) {\r\n            const drawOptions = {\r\n                radius: Math.min(boxWidth, boxHeight) / 2,\r\n                pointStyle: labelPointStyle.pointStyle,\r\n                rotation: labelPointStyle.rotation,\r\n                borderWidth: 1\r\n            };\r\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n            const centerY = colorY + boxHeight / 2;\r\n            ctx.strokeStyle = options.multiKeyBackground;\r\n            ctx.fillStyle = options.multiKeyBackground;\r\n            drawPoint(ctx, drawOptions, centerX, centerY);\r\n            ctx.strokeStyle = labelColor.borderColor;\r\n            ctx.fillStyle = labelColor.backgroundColor;\r\n            drawPoint(ctx, drawOptions, centerX, centerY);\r\n        } else {\r\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\r\n            ctx.strokeStyle = labelColor.borderColor;\r\n            ctx.setLineDash(labelColor.borderDash || []);\r\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\r\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\r\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\r\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\r\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = options.multiKeyBackground;\r\n                addRoundedRectPath(ctx, {\r\n                    x: outerX,\r\n                    y: colorY,\r\n                    w: boxWidth,\r\n                    h: boxHeight,\r\n                    radius: borderRadius\r\n                });\r\n                ctx.fill();\r\n                ctx.stroke();\r\n                ctx.fillStyle = labelColor.backgroundColor;\r\n                ctx.beginPath();\r\n                addRoundedRectPath(ctx, {\r\n                    x: innerX,\r\n                    y: colorY + 1,\r\n                    w: boxWidth - 2,\r\n                    h: boxHeight - 2,\r\n                    radius: borderRadius\r\n                });\r\n                ctx.fill();\r\n            } else {\r\n                ctx.fillStyle = options.multiKeyBackground;\r\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n                ctx.fillStyle = labelColor.backgroundColor;\r\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n            }\r\n        }\r\n        ctx.fillStyle = this.labelTextColors[i];\r\n    }\r\n    drawBody(pt, ctx, options) {\r\n        const { body  } = this;\r\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\r\n        const bodyFont = toFont(options.bodyFont);\r\n        let bodyLineHeight = bodyFont.lineHeight;\r\n        let xLinePadding = 0;\r\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n        const fillLineOfText = function(line) {\r\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n            pt.y += bodyLineHeight + bodySpacing;\r\n        };\r\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n        ctx.textAlign = bodyAlign;\r\n        ctx.textBaseline = 'middle';\r\n        ctx.font = bodyFont.string;\r\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n        ctx.fillStyle = options.bodyColor;\r\n        each(this.beforeBody, fillLineOfText);\r\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\r\n        for(i = 0, ilen = body.length; i < ilen; ++i){\r\n            bodyItem = body[i];\r\n            textColor = this.labelTextColors[i];\r\n            ctx.fillStyle = textColor;\r\n            each(bodyItem.before, fillLineOfText);\r\n            lines = bodyItem.lines;\r\n            if (displayColors && lines.length) {\r\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n            }\r\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\r\n                fillLineOfText(lines[j]);\r\n                bodyLineHeight = bodyFont.lineHeight;\r\n            }\r\n            each(bodyItem.after, fillLineOfText);\r\n        }\r\n        xLinePadding = 0;\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n        each(this.afterBody, fillLineOfText);\r\n        pt.y -= bodySpacing;\r\n    }\r\n    drawFooter(pt, ctx, options) {\r\n        const footer = this.footer;\r\n        const length = footer.length;\r\n        let footerFont, i;\r\n        if (length) {\r\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n            pt.x = getAlignedX(this, options.footerAlign, options);\r\n            pt.y += options.footerMarginTop;\r\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n            ctx.textBaseline = 'middle';\r\n            footerFont = toFont(options.footerFont);\r\n            ctx.fillStyle = options.footerColor;\r\n            ctx.font = footerFont.string;\r\n            for(i = 0; i < length; ++i){\r\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n                pt.y += footerFont.lineHeight + options.footerSpacing;\r\n            }\r\n        }\r\n    }\r\n    drawBackground(pt, ctx, tooltipSize, options) {\r\n        const { xAlign , yAlign  } = this;\r\n        const { x , y  } = pt;\r\n        const { width , height  } = tooltipSize;\r\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\r\n        ctx.fillStyle = options.backgroundColor;\r\n        ctx.strokeStyle = options.borderColor;\r\n        ctx.lineWidth = options.borderWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + topLeft, y);\r\n        if (yAlign === 'top') {\r\n            this.drawCaret(pt, ctx, tooltipSize, options);\r\n        }\r\n        ctx.lineTo(x + width - topRight, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n        if (yAlign === 'center' && xAlign === 'right') {\r\n            this.drawCaret(pt, ctx, tooltipSize, options);\r\n        }\r\n        ctx.lineTo(x + width, y + height - bottomRight);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n        if (yAlign === 'bottom') {\r\n            this.drawCaret(pt, ctx, tooltipSize, options);\r\n        }\r\n        ctx.lineTo(x + bottomLeft, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n        if (yAlign === 'center' && xAlign === 'left') {\r\n            this.drawCaret(pt, ctx, tooltipSize, options);\r\n        }\r\n        ctx.lineTo(x, y + topLeft);\r\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        if (options.borderWidth > 0) {\r\n            ctx.stroke();\r\n        }\r\n    }\r\n _updateAnimationTarget(options) {\r\n        const chart = this.chart;\r\n        const anims = this.$animations;\r\n        const animX = anims && anims.x;\r\n        const animY = anims && anims.y;\r\n        if (animX || animY) {\r\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n            if (!position) {\r\n                return;\r\n            }\r\n            const size = this._size = getTooltipSize(this, options);\r\n            const positionAndSize = Object.assign({}, position, this._size);\r\n            const alignment = determineAlignment(chart, options, positionAndSize);\r\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n            if (animX._to !== point.x || animY._to !== point.y) {\r\n                this.xAlign = alignment.xAlign;\r\n                this.yAlign = alignment.yAlign;\r\n                this.width = size.width;\r\n                this.height = size.height;\r\n                this.caretX = position.x;\r\n                this.caretY = position.y;\r\n                this._resolveAnimations().update(this, point);\r\n            }\r\n        }\r\n    }\r\n _willRender() {\r\n        return !!this.opacity;\r\n    }\r\n    draw(ctx) {\r\n        const options = this.options.setContext(this.getContext());\r\n        let opacity = this.opacity;\r\n        if (!opacity) {\r\n            return;\r\n        }\r\n        this._updateAnimationTarget(options);\r\n        const tooltipSize = {\r\n            width: this.width,\r\n            height: this.height\r\n        };\r\n        const pt = {\r\n            x: this.x,\r\n            y: this.y\r\n        };\r\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n        const padding = toPadding(options.padding);\r\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n        if (options.enabled && hasTooltipContent) {\r\n            ctx.save();\r\n            ctx.globalAlpha = opacity;\r\n            this.drawBackground(pt, ctx, tooltipSize, options);\r\n            overrideTextDirection(ctx, options.textDirection);\r\n            pt.y += padding.top;\r\n            this.drawTitle(pt, ctx, options);\r\n            this.drawBody(pt, ctx, options);\r\n            this.drawFooter(pt, ctx, options);\r\n            restoreTextDirection(ctx, options.textDirection);\r\n            ctx.restore();\r\n        }\r\n    }\r\n getActiveElements() {\r\n        return this._active || [];\r\n    }\r\n setActiveElements(activeElements, eventPosition) {\r\n        const lastActive = this._active;\r\n        const active = activeElements.map(({ datasetIndex , index  })=>{\r\n            const meta = this.chart.getDatasetMeta(datasetIndex);\r\n            if (!meta) {\r\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n            }\r\n            return {\r\n                datasetIndex,\r\n                element: meta.data[index],\r\n                index\r\n            };\r\n        });\r\n        const changed = !_elementsEqual(lastActive, active);\r\n        const positionChanged = this._positionChanged(active, eventPosition);\r\n        if (changed || positionChanged) {\r\n            this._active = active;\r\n            this._eventPosition = eventPosition;\r\n            this._ignoreReplayEvents = true;\r\n            this.update(true);\r\n        }\r\n    }\r\n handleEvent(e, replay, inChartArea = true) {\r\n        if (replay && this._ignoreReplayEvents) {\r\n            return false;\r\n        }\r\n        this._ignoreReplayEvents = false;\r\n        const options = this.options;\r\n        const lastActive = this._active || [];\r\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n        const positionChanged = this._positionChanged(active, e);\r\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n        if (changed) {\r\n            this._active = active;\r\n            if (options.enabled || options.external) {\r\n                this._eventPosition = {\r\n                    x: e.x,\r\n                    y: e.y\r\n                };\r\n                this.update(true, replay);\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n _getActiveElements(e, lastActive, replay, inChartArea) {\r\n        const options = this.options;\r\n        if (e.type === 'mouseout') {\r\n            return [];\r\n        }\r\n        if (!inChartArea) {\r\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\r\n        }\r\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n        if (options.reverse) {\r\n            active.reverse();\r\n        }\r\n        return active;\r\n    }\r\n _positionChanged(active, e) {\r\n        const { caretX , caretY , options  } = this;\r\n        const position = positioners[options.position].call(this, active, e);\r\n        return position !== false && (caretX !== position.x || caretY !== position.y);\r\n    }\r\n}\r\nvar plugin_tooltip = {\r\n    id: 'tooltip',\r\n    _element: Tooltip,\r\n    positioners,\r\n    afterInit (chart, _args, options) {\r\n        if (options) {\r\n            chart.tooltip = new Tooltip({\r\n                chart,\r\n                options\r\n            });\r\n        }\r\n    },\r\n    beforeUpdate (chart, _args, options) {\r\n        if (chart.tooltip) {\r\n            chart.tooltip.initialize(options);\r\n        }\r\n    },\r\n    reset (chart, _args, options) {\r\n        if (chart.tooltip) {\r\n            chart.tooltip.initialize(options);\r\n        }\r\n    },\r\n    afterDraw (chart) {\r\n        const tooltip = chart.tooltip;\r\n        if (tooltip && tooltip._willRender()) {\r\n            const args = {\r\n                tooltip\r\n            };\r\n            if (chart.notifyPlugins('beforeTooltipDraw', {\r\n                ...args,\r\n                cancelable: true\r\n            }) === false) {\r\n                return;\r\n            }\r\n            tooltip.draw(chart.ctx);\r\n            chart.notifyPlugins('afterTooltipDraw', args);\r\n        }\r\n    },\r\n    afterEvent (chart, args) {\r\n        if (chart.tooltip) {\r\n            const useFinalPosition = args.replay;\r\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n                args.changed = true;\r\n            }\r\n        }\r\n    },\r\n    defaults: {\r\n        enabled: true,\r\n        external: null,\r\n        position: 'average',\r\n        backgroundColor: 'rgba(0,0,0,0.8)',\r\n        titleColor: '#fff',\r\n        titleFont: {\r\n            weight: 'bold'\r\n        },\r\n        titleSpacing: 2,\r\n        titleMarginBottom: 6,\r\n        titleAlign: 'left',\r\n        bodyColor: '#fff',\r\n        bodySpacing: 2,\r\n        bodyFont: {},\r\n        bodyAlign: 'left',\r\n        footerColor: '#fff',\r\n        footerSpacing: 2,\r\n        footerMarginTop: 6,\r\n        footerFont: {\r\n            weight: 'bold'\r\n        },\r\n        footerAlign: 'left',\r\n        padding: 6,\r\n        caretPadding: 2,\r\n        caretSize: 5,\r\n        cornerRadius: 6,\r\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\r\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\r\n        multiKeyBackground: '#fff',\r\n        displayColors: true,\r\n        boxPadding: 0,\r\n        borderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 0,\r\n        animation: {\r\n            duration: 400,\r\n            easing: 'easeOutQuart'\r\n        },\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: [\r\n                    'x',\r\n                    'y',\r\n                    'width',\r\n                    'height',\r\n                    'caretX',\r\n                    'caretY'\r\n                ]\r\n            },\r\n            opacity: {\r\n                easing: 'linear',\r\n                duration: 200\r\n            }\r\n        },\r\n        callbacks: defaultCallbacks\r\n    },\r\n    defaultRoutes: {\r\n        bodyFont: 'font',\r\n        footerFont: 'font',\r\n        titleFont: 'font'\r\n    },\r\n    descriptors: {\r\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n        _indexable: false,\r\n        callbacks: {\r\n            _scriptable: false,\r\n            _indexable: false\r\n        },\r\n        animation: {\r\n            _fallback: false\r\n        },\r\n        animations: {\r\n            _fallback: 'animation'\r\n        }\r\n    },\r\n    additionalOptionScopes: [\r\n        'interaction'\r\n    ]\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// Register built-ins\r\nChart.register(controllers, scales, elements, plugins);\r\nChart.helpers = {\r\n    ...helpers\r\n};\r\nChart._adapters = _adapters;\r\nChart.Animation = Animation;\r\nChart.Animations = Animations;\r\nChart.animator = animator;\r\nChart.controllers = registry.controllers.items;\r\nChart.DatasetController = DatasetController;\r\nChart.Element = Element;\r\nChart.elements = elements;\r\nChart.Interaction = Interaction;\r\nChart.layouts = layouts;\r\nChart.platforms = platforms;\r\nChart.Scale = Scale;\r\nChart.Ticks = Ticks;\r\n// Compatibility with ESM extensions\r\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\r\nChart.Chart = Chart;\r\nif (typeof window !== 'undefined') {\r\n    window.Chart = Chart;\r\n}\r\n\r\nreturn Chart;\r\n\r\n}));\r\n"],"names":["global","factory","this","plugins","Object","freeze","__proto__","Colors","plugin_colors","Decimation","plugin_decimation","Filler","index","Legend","plugin_legend","SubTitle","plugin_subtitle","Title","plugin_title","Tooltip","plugin_tooltip","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","Symbol","toPrimitive","isNonPrimitive","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","interpolate$1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","helpers","_deprecated","easingEffects","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisNumber","stackIndex","rects","_index_","_value_","BubbleController","super","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref8","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","exports","module","define","amd","globalThis","self"],"mappings":"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"}