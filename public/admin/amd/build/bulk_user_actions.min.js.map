{"version":3,"file":"bulk_user_actions.min.js","sources":["../src/bulk_user_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Add bulk actions to the users list report\r\n *\r\n * @module     core_admin/bulk_user_actions\r\n * @copyright  2024 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport * as tableEvents from 'core_table/local/dynamic/events';\r\nimport * as FormChangeChecker from 'core_form/changechecker';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport jQuery from 'jquery';\r\n\r\nconst Selectors = {\r\n    bulkActionsForm: 'form#user-bulk-action-form',\r\n    userReportWrapper: '[data-region=\"report-user-list-wrapper\"]',\r\n    checkbox: 'input[type=\"checkbox\"][data-togglegroup=\"report-select-all\"][data-toggle=\"target\"]',\r\n    togglerCheckbox: 'input[type=\"checkbox\"][data-togglegroup=\"report-select-all\"][data-toggle=\"toggler\"]',\r\n    checkedRows: '[data-togglegroup=\"report-select-all\"][data-toggle=\"target\"]:checked',\r\n};\r\n\r\n/**\r\n * Initialise module\r\n */\r\nexport const init = () => {\r\n\r\n    const userBulkForm = document.querySelector(Selectors.bulkActionsForm);\r\n    const userReport = userBulkForm?.closest(Selectors.userReportWrapper)?.querySelector(reportSelectors.regions.report);\r\n    if (!userBulkForm || !userReport) {\r\n        return;\r\n    }\r\n    const actionSelect = userBulkForm.querySelector('select');\r\n    CustomEvents.define(actionSelect, [CustomEvents.events.accessibleChange]);\r\n\r\n    jQuery(actionSelect).on(CustomEvents.events.accessibleChange, event => {\r\n        if (event.target.value && `${event.target.value}` !== \"0\") {\r\n            const e = new Event('submit', {cancelable: true});\r\n            userBulkForm.dispatchEvent(e);\r\n            if (!e.defaultPrevented) {\r\n                FormChangeChecker.markFormSubmitted(userBulkForm);\r\n                userBulkForm.submit();\r\n            }\r\n        }\r\n    });\r\n\r\n    // Every time the checkboxes in the report are changed, update the list of users in the form values\r\n    // and enable/disable the action select.\r\n    const updateUserIds = () => {\r\n        const selectedUsers = [...userReport.querySelectorAll(Selectors.checkedRows)];\r\n        const selectedUserIds = selectedUsers.map(check => parseInt(check.value));\r\n        userBulkForm.querySelector('[name=\"userids\"]').value = selectedUserIds.join(',');\r\n\r\n        // Disable the action selector if nothing selected, and reset the current selection.\r\n        actionSelect.disabled = selectedUsers.length === 0;\r\n        if (actionSelect.disabled) {\r\n            actionSelect.value = \"0\";\r\n        }\r\n\r\n        const selectedUsersNames = selectedUsers.map(check => document.querySelector(`label[for=\"${check.id}\"]`).textContent);\r\n        // Add the user ids and names to the form data attributes so they can be available from the\r\n        // other JS modules that listen to the form submit event.\r\n        userBulkForm.data = {userids: selectedUserIds, usernames: selectedUsersNames};\r\n    };\r\n\r\n    updateUserIds();\r\n\r\n    document.addEventListener('change', event => {\r\n        // When checkboxes are checked next to individual users or the toggler toggle (Select all/none).\r\n        if ((event.target.matches(Selectors.checkbox) || event.target.matches(Selectors.togglerCheckbox))\r\n                && userReport.contains(event.target)) {\r\n            updateUserIds();\r\n        }\r\n    });\r\n\r\n    document.addEventListener(tableEvents.tableContentRefreshed, event => {\r\n        // When the report contents is updated (i.e. page is changed, filters applied, etc).\r\n        if (userReport.contains(event.target)) {\r\n            updateUserIds();\r\n        }\r\n    });\r\n};\r\n"],"names":["Selectors","userBulkForm","document","querySelector","userReport","closest","_userBulkForm$closest","reportSelectors","regions","report","actionSelect","CustomEvents","define","events","accessibleChange","on","event","target","value","e","Event","cancelable","dispatchEvent","defaultPrevented","FormChangeChecker","markFormSubmitted","submit","updateUserIds","selectedUsers","querySelectorAll","selectedUserIds","map","check","parseInt","join","disabled","length","selectedUsersNames","id","textContent","data","userids","usernames","addEventListener","matches","contains","tableEvents","tableContentRefreshed"],"mappings":";;;;;;;0WA6BMA,0BACe,6BADfA,4BAEiB,2CAFjBA,mBAGQ,qFAHRA,0BAIe,sFAJfA,sBAKW,qFAMG,qCAEVC,aAAeC,SAASC,cAAcH,2BACtCI,WAAaH,MAAAA,4CAAAA,aAAcI,QAAQL,qEAAtBM,sBAAoDH,cAAcI,gBAAgBC,QAAQC,YACxGR,eAAiBG,wBAGhBM,aAAeT,aAAaE,cAAc,UAChDQ,aAAaC,OAAOF,aAAc,CAACC,aAAaE,OAAOC,uCAEhDJ,cAAcK,GAAGJ,aAAaE,OAAOC,kBAAkBE,WACtDA,MAAMC,OAAOC,OAAqC,MAA5B,UAAGF,MAAMC,OAAOC,OAAiB,OACjDC,EAAI,IAAIC,MAAM,SAAU,CAACC,YAAY,IAC3CpB,aAAaqB,cAAcH,GACtBA,EAAEI,mBACHC,kBAAkBC,kBAAkBxB,cACpCA,aAAayB,oBAOnBC,cAAgB,WACZC,cAAgB,IAAIxB,WAAWyB,iBAAiB7B,wBAChD8B,gBAAkBF,cAAcG,KAAIC,OAASC,SAASD,MAAMd,SAClEjB,aAAaE,cAAc,oBAAoBe,MAAQY,gBAAgBI,KAAK,KAG5ExB,aAAayB,SAAoC,IAAzBP,cAAcQ,OAClC1B,aAAayB,WACbzB,aAAaQ,MAAQ,WAGnBmB,mBAAqBT,cAAcG,KAAIC,OAAS9B,SAASC,mCAA4B6B,MAAMM,UAAQC,cAGzGtC,aAAauC,KAAO,CAACC,QAASX,gBAAiBY,UAAWL,qBAG9DV,gBAEAzB,SAASyC,iBAAiB,UAAU3B,SAE3BA,MAAMC,OAAO2B,QAAQ5C,qBAAuBgB,MAAMC,OAAO2B,QAAQ5C,6BAC3DI,WAAWyC,SAAS7B,MAAMC,SACjCU,mBAIRzB,SAASyC,iBAAiBG,YAAYC,uBAAuB/B,QAErDZ,WAAWyC,SAAS7B,MAAMC,SAC1BU"}