{"version":3,"file":"policy.min.js","sources":["../src/policy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {getPolicyStatus, setPolicyStatus} from \"./repository\";\r\n\r\n/**\r\n * The Javascript module to handle the policy acceptance.\r\n *\r\n * @module     core_ai/policy\r\n * @copyright  2024 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nexport default class {\r\n    static #policyAcceptedFor = {};\r\n\r\n    static preconfigurePolicyState(userid, state) {\r\n        if (!this.#policyAcceptedFor.hasOwnProperty(userid)) {\r\n            this.#policyAcceptedFor[userid] = state;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the policy status for a user.\r\n     *\r\n     * @param {Number} userid The user ID.\r\n     * @return {Promise<Object>} The policy status.\r\n     */\r\n    static async getPolicyStatus(userid) {\r\n        if (this.#policyAcceptedFor[userid]) {\r\n            return this.#policyAcceptedFor[userid];\r\n        }\r\n\r\n        const accepted = await getPolicyStatus(userid);\r\n\r\n        this.#policyAcceptedFor[userid] = accepted.status;\r\n\r\n        return accepted.status;\r\n    }\r\n\r\n    static acceptPolicy() {\r\n        this.#policyAcceptedFor[M.cfg.userId] = true;\r\n\r\n        return setPolicyStatus(M.cfg.contextid);\r\n    }\r\n}\r\n"],"names":["userid","state","_classStaticPrivateFieldSpecGet","hasOwnProperty","accepted","status","M","cfg","userId","contextid"],"mappings":";;;;;;;uJA2BmCA,OAAQC,OAC9BC,gEAAwBC,eAAeH,0EAChBA,QAAUC,oCAUbD,WACrBE,gEAAwBF,eACjBE,gEAAwBF,cAG7BI,eAAiB,+BAAgBJ,+EAEfA,QAAUI,SAASC,OAEpCD,SAASC,oGAIQC,EAAEC,IAAIC,SAAU,GAEjC,+BAAgBF,EAAEC,IAAIE,8EA7BL"}