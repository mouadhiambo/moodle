{"version":3,"file":"manipulator.min.js","sources":["../../../src/bootstrap/dom/manipulator.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap dom/manipulator.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nfunction normalizeData(value) {\r\n  if (value === 'true') {\r\n    return true\r\n  }\r\n\r\n  if (value === 'false') {\r\n    return false\r\n  }\r\n\r\n  if (value === Number(value).toString()) {\r\n    return Number(value)\r\n  }\r\n\r\n  if (value === '' || value === 'null') {\r\n    return null\r\n  }\r\n\r\n  if (typeof value !== 'string') {\r\n    return value\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(decodeURIComponent(value))\r\n  } catch {\r\n    return value\r\n  }\r\n}\r\n\r\nfunction normalizeDataKey(key) {\r\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\r\n}\r\n\r\nconst Manipulator = {\r\n  setDataAttribute(element, key, value) {\r\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\r\n  },\r\n\r\n  removeDataAttribute(element, key) {\r\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\r\n  },\r\n\r\n  getDataAttributes(element) {\r\n    if (!element) {\r\n      return {}\r\n    }\r\n\r\n    const attributes = {}\r\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\r\n\r\n    for (const key of bsKeys) {\r\n      let pureKey = key.replace(/^bs/, '')\r\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\r\n      attributes[pureKey] = normalizeData(element.dataset[key])\r\n    }\r\n\r\n    return attributes\r\n  },\r\n\r\n  getDataAttribute(element, key) {\r\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\r\n  }\r\n}\r\n\r\nexport default Manipulator\r\n"],"names":["normalizeData","value","Number","toString","JSON","parse","decodeURIComponent","normalizeDataKey","key","replace","chr","toLowerCase","setDataAttribute","element","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","bsKeys","Object","keys","dataset","filter","startsWith","pureKey","charAt","slice","length","getDataAttribute","getAttribute"],"mappings":"wFAOSA,cAAcC,UACP,SAAVA,aACK,KAGK,UAAVA,aACK,KAGLA,QAAUC,OAAOD,OAAOE,kBACnBD,OAAOD,UAGF,KAAVA,OAA0B,SAAVA,aACX,QAGY,iBAAVA,aACFA,iBAIAG,KAAKC,MAAMC,mBAAmBL,QACrC,sBACOA,gBAIFM,iBAAiBC,YACjBA,IAAIC,QAAQ,UAAUC,gBAAWA,IAAIC,8GAG1B,CAClBC,iBAAiBC,QAASL,IAAKP,OAC7BY,QAAQC,+BAAwBP,iBAAiBC,MAAQP,QAG3Dc,oBAAoBF,QAASL,KAC3BK,QAAQG,kCAA2BT,iBAAiBC,QAGtDS,kBAAkBJ,aACXA,cACI,SAGHK,WAAa,GACbC,OAASC,OAAOC,KAAKR,QAAQS,SAASC,QAAOf,KAAOA,IAAIgB,WAAW,QAAUhB,IAAIgB,WAAW,kBAE7F,MAAMhB,OAAOW,OAAQ,KACpBM,QAAUjB,IAAIC,QAAQ,MAAO,IACjCgB,QAAUA,QAAQC,OAAO,GAAGf,cAAgBc,QAAQE,MAAM,EAAGF,QAAQG,QACrEV,WAAWO,SAAWzB,cAAca,QAAQS,QAAQd,aAG/CU,YAGTW,iBAAgB,CAAChB,QAASL,MACjBR,cAAca,QAAQiB,+BAAwBvB,iBAAiBC"}