{"version":3,"file":"component-functions.min.js","sources":["../../../src/bootstrap/util/component-functions.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap util/component-functions.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport EventHandler from '../dom/event-handler'\r\nimport SelectorEngine from '../dom/selector-engine'\r\nimport { isDisabled } from './index'\r\n\r\nconst enableDismissTrigger = (component, method = 'hide') => {\r\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\r\n  const name = component.NAME\r\n\r\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\r\n    if (['A', 'AREA'].includes(this.tagName)) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    if (isDisabled(this)) {\r\n      return\r\n    }\r\n\r\n    const target = SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`)\r\n    const instance = component.getOrCreateInstance(target)\r\n\r\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\r\n    instance[method]()\r\n  })\r\n}\r\n\r\nexport {\r\n  enableDismissTrigger\r\n}\r\n"],"names":["component","method","clickEvent","EVENT_KEY","name","NAME","on","document","event","includes","this","tagName","preventDefault","target","SelectorEngine","getElementFromSelector","closest","getOrCreateInstance"],"mappings":"gfAW6B,SAACA,eAAWC,8DAAS,aAC1CC,kCAA6BF,UAAUG,WACvCC,KAAOJ,UAAUK,2BAEVC,GAAGC,SAAUL,uCAAiCE,YAAU,SAAUI,UACzE,CAAC,IAAK,QAAQC,SAASC,KAAKC,UAC9BH,MAAMI,kBAGJ,qBAAWF,mBAITG,OAASC,wBAAeC,uBAAuBL,OAASA,KAAKM,mBAAYZ,OAC9DJ,UAAUiB,oBAAoBJ,QAGtCZ"}