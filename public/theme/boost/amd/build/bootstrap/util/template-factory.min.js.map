{"version":3,"file":"template-factory.min.js","sources":["../../../src/bootstrap/util/template-factory.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap util/template-factory.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport SelectorEngine from '../dom/selector-engine'\r\nimport Config from './config'\r\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer'\r\nimport { execute, getElement, isElement } from './index'\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = 'TemplateFactory'\r\n\r\nconst Default = {\r\n  allowList: DefaultAllowlist,\r\n  content: {}, // { selector : text ,  selector2 : text2 , }\r\n  extraClass: '',\r\n  html: false,\r\n  sanitize: true,\r\n  sanitizeFn: null,\r\n  template: '<div></div>'\r\n}\r\n\r\nconst DefaultType = {\r\n  allowList: 'object',\r\n  content: 'object',\r\n  extraClass: '(string|function)',\r\n  html: 'boolean',\r\n  sanitize: 'boolean',\r\n  sanitizeFn: '(null|function)',\r\n  template: 'string'\r\n}\r\n\r\nconst DefaultContentType = {\r\n  entry: '(string|element|function|null)',\r\n  selector: '(string|element)'\r\n}\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass TemplateFactory extends Config {\r\n  constructor(config) {\r\n    super()\r\n    this._config = this._getConfig(config)\r\n  }\r\n\r\n  // Getters\r\n  static get Default() {\r\n    return Default\r\n  }\r\n\r\n  static get DefaultType() {\r\n    return DefaultType\r\n  }\r\n\r\n  static get NAME() {\r\n    return NAME\r\n  }\r\n\r\n  // Public\r\n  getContent() {\r\n    return Object.values(this._config.content)\r\n      .map(config => this._resolvePossibleFunction(config))\r\n      .filter(Boolean)\r\n  }\r\n\r\n  hasContent() {\r\n    return this.getContent().length > 0\r\n  }\r\n\r\n  changeContent(content) {\r\n    this._checkContent(content)\r\n    this._config.content = { ...this._config.content, ...content }\r\n    return this\r\n  }\r\n\r\n  toHtml() {\r\n    const templateWrapper = document.createElement('div')\r\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\r\n\r\n    for (const [selector, text] of Object.entries(this._config.content)) {\r\n      this._setContent(templateWrapper, text, selector)\r\n    }\r\n\r\n    const template = templateWrapper.children[0]\r\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\r\n\r\n    if (extraClass) {\r\n      template.classList.add(...extraClass.split(' '))\r\n    }\r\n\r\n    return template\r\n  }\r\n\r\n  // Private\r\n  _typeCheckConfig(config) {\r\n    super._typeCheckConfig(config)\r\n    this._checkContent(config.content)\r\n  }\r\n\r\n  _checkContent(arg) {\r\n    for (const [selector, content] of Object.entries(arg)) {\r\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\r\n    }\r\n  }\r\n\r\n  _setContent(template, content, selector) {\r\n    const templateElement = SelectorEngine.findOne(selector, template)\r\n\r\n    if (!templateElement) {\r\n      return\r\n    }\r\n\r\n    content = this._resolvePossibleFunction(content)\r\n\r\n    if (!content) {\r\n      templateElement.remove()\r\n      return\r\n    }\r\n\r\n    if (isElement(content)) {\r\n      this._putElementInTemplate(getElement(content), templateElement)\r\n      return\r\n    }\r\n\r\n    if (this._config.html) {\r\n      templateElement.innerHTML = this._maybeSanitize(content)\r\n      return\r\n    }\r\n\r\n    templateElement.textContent = content\r\n  }\r\n\r\n  _maybeSanitize(arg) {\r\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\r\n  }\r\n\r\n  _resolvePossibleFunction(arg) {\r\n    return execute(arg, [this])\r\n  }\r\n\r\n  _putElementInTemplate(element, templateElement) {\r\n    if (this._config.html) {\r\n      templateElement.innerHTML = ''\r\n      templateElement.append(element)\r\n      return\r\n    }\r\n\r\n    templateElement.textContent = element.textContent\r\n  }\r\n}\r\n\r\nexport default TemplateFactory\r\n"],"names":["Default","allowList","DefaultAllowlist","content","extraClass","html","sanitize","sanitizeFn","template","DefaultType","DefaultContentType","entry","selector","TemplateFactory","Config","constructor","config","_config","this","_getConfig","NAME","getContent","Object","values","map","_resolvePossibleFunction","filter","Boolean","hasContent","length","changeContent","_checkContent","toHtml","templateWrapper","document","createElement","innerHTML","_maybeSanitize","text","entries","_setContent","children","classList","add","split","_typeCheckConfig","arg","templateElement","SelectorEngine","findOne","_putElementInTemplate","textContent","remove","element","append"],"mappings":"22CAkBMA,QAAU,CACdC,UAAWC,4BACXC,QAAS,GACTC,WAAY,GACZC,MAAM,EACNC,UAAU,EACVC,WAAY,KACZC,SAAU,eAGNC,YAAc,CAClBR,UAAW,SACXE,QAAS,SACTC,WAAY,oBACZC,KAAM,UACNC,SAAU,UACVC,WAAY,kBACZC,SAAU,UAGNE,mBAAqB,CACzBC,MAAO,iCACPC,SAAU,0BAONC,wBAAwBC,gBAC5BC,YAAYC,qBAELC,QAAUC,KAAKC,WAAWH,QAItBhB,4BACFA,QAGES,gCACFA,YAGEW,wBA9CA,kBAmDXC,oBACSC,OAAOC,OAAOL,KAAKD,QAAQd,SAC/BqB,KAAIR,QAAUE,KAAKO,yBAAyBT,UAC5CU,OAAOC,SAGZC,oBACSV,KAAKG,aAAaQ,OAAS,EAGpCC,cAAc3B,qBACP4B,cAAc5B,cACdc,QAAQd,uCAAee,KAAKD,QAAQd,SAAYA,SAC9Ce,KAGTc,eACQC,gBAAkBC,SAASC,cAAc,OAC/CF,gBAAgBG,UAAYlB,KAAKmB,eAAenB,KAAKD,QAAQT,cAExD,MAAOI,SAAU0B,QAAShB,OAAOiB,QAAQrB,KAAKD,QAAQd,cACpDqC,YAAYP,gBAAiBK,KAAM1B,gBAGpCJ,SAAWyB,gBAAgBQ,SAAS,GACpCrC,WAAac,KAAKO,yBAAyBP,KAAKD,QAAQb,mBAE1DA,YACFI,SAASkC,UAAUC,OAAOvC,WAAWwC,MAAM,MAGtCpC,SAITqC,iBAAiB7B,cACT6B,iBAAiB7B,aAClBe,cAAcf,OAAOb,SAG5B4B,cAAce,SACP,MAAOlC,SAAUT,WAAYmB,OAAOiB,QAAQO,WACzCD,iBAAiB,CAAEjC,SAAAA,SAAUD,MAAOR,SAAWO,oBAIzD8B,YAAYhC,SAAUL,QAASS,gBACvBmC,gBAAkBC,wBAAeC,QAAQrC,SAAUJ,UAEpDuC,mBAIL5C,QAAUe,KAAKO,yBAAyBtB,WAOpC,oBAAUA,cACP+C,uBAAsB,qBAAW/C,SAAU4C,iBAI9C7B,KAAKD,QAAQZ,KACf0C,gBAAgBX,UAAYlB,KAAKmB,eAAelC,SAIlD4C,gBAAgBI,YAAchD,QAd5B4C,gBAAgBK,UAiBpBf,eAAeS,YACN5B,KAAKD,QAAQX,UAAW,2BAAawC,IAAK5B,KAAKD,QAAQhB,UAAWiB,KAAKD,QAAQV,YAAcuC,IAGtGrB,yBAAyBqB,YAChB,kBAAQA,IAAK,CAAC5B,OAGvBgC,sBAAsBG,QAASN,oBACzB7B,KAAKD,QAAQZ,YACf0C,gBAAgBX,UAAY,QAC5BW,gBAAgBO,OAAOD,SAIzBN,gBAAgBI,YAAcE,QAAQF,0BAI3BtC"}