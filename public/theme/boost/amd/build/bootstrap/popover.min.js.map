{"version":3,"file":"popover.min.js","sources":["../../src/bootstrap/popover.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap popover.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport Tooltip from './tooltip'\r\nimport { defineJQueryPlugin } from './util/index'\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = 'popover'\r\n\r\nconst SELECTOR_TITLE = '.popover-header'\r\nconst SELECTOR_CONTENT = '.popover-body'\r\n\r\nconst Default = {\r\n  ...Tooltip.Default,\r\n  content: '',\r\n  offset: [0, 8],\r\n  placement: 'right',\r\n  template: '<div class=\"popover\" role=\"tooltip\">' +\r\n    '<div class=\"popover-arrow\"></div>' +\r\n    '<h3 class=\"popover-header\"></h3>' +\r\n    '<div class=\"popover-body\"></div>' +\r\n    '</div>',\r\n  trigger: 'click'\r\n}\r\n\r\nconst DefaultType = {\r\n  ...Tooltip.DefaultType,\r\n  content: '(null|string|element|function)'\r\n}\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass Popover extends Tooltip {\r\n  // Getters\r\n  static get Default() {\r\n    return Default\r\n  }\r\n\r\n  static get DefaultType() {\r\n    return DefaultType\r\n  }\r\n\r\n  static get NAME() {\r\n    return NAME\r\n  }\r\n\r\n  // Overrides\r\n  _isWithContent() {\r\n    return this._getTitle() || this._getContent()\r\n  }\r\n\r\n  // Private\r\n  _getContentForTemplate() {\r\n    return {\r\n      [SELECTOR_TITLE]: this._getTitle(),\r\n      [SELECTOR_CONTENT]: this._getContent()\r\n    }\r\n  }\r\n\r\n  _getContent() {\r\n    return this._resolvePossibleFunction(this._config.content)\r\n  }\r\n\r\n  // Static\r\n  static jQueryInterface(config) {\r\n    return this.each(function () {\r\n      const data = Popover.getOrCreateInstance(this, config)\r\n\r\n      if (typeof config !== 'string') {\r\n        return\r\n      }\r\n\r\n      if (typeof data[config] === 'undefined') {\r\n        throw new TypeError(`No method named \"${config}\"`)\r\n      }\r\n\r\n      data[config]()\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * jQuery\r\n */\r\n\r\ndefineJQueryPlugin(Popover)\r\n\r\nexport default Popover\r\n"],"names":["Default","Tooltip","content","offset","placement","template","trigger","DefaultType","Popover","NAME","_isWithContent","this","_getTitle","_getContent","_getContentForTemplate","_resolvePossibleFunction","_config","config","each","data","getOrCreateInstance","TypeError"],"mappings":"krCAmBMA,uCACDC,iBAAQD,aACXE,QAAS,GACTC,OAAQ,CAAC,EAAG,GACZC,UAAW,QACXC,SAAU,8IAKVC,QAAS,UAGLC,2CACDN,iBAAQM,iBACXL,QAAS,yCAOLM,gBAAgBP,iBAETD,4BACFA,QAGEO,gCACFA,YAGEE,wBArCA,UA0CXC,wBACSC,KAAKC,aAAeD,KAAKE,cAIlCC,+BACS,mBACaH,KAAKC,4BACHD,KAAKE,eAI7BA,qBACSF,KAAKI,yBAAyBJ,KAAKK,QAAQd,gCAI7Be,eACdN,KAAKO,MAAK,iBACTC,KAAOX,QAAQY,oBAAoBT,KAAMM,WAEzB,iBAAXA,gBAIiB,IAAjBE,KAAKF,cACR,IAAII,qCAA8BJ,aAG1CE,KAAKF,6CASQT,sBAEJA"}