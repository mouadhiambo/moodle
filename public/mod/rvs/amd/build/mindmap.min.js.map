{"version":3,"file":"mindmap.min.js","sources":["../src/mindmap.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Mind map visualization module\n *\n * @module     mod_rvs/mindmap\n * @copyright  2025 RVIBS\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/log'], function(Log) {\n    const CONTAINER_ID = 'mindmap-visualization';\n\n    const decodeHtmlEntities = function(value) {\n        if (typeof document === 'undefined') {\n            return value;\n        }\n\n        var textarea = document.createElement('textarea');\n        textarea.innerHTML = value;\n        return textarea.value;\n    };\n\n    const stripCodeFences = function(value) {\n        return value\n            .replace(/^```json\\s*/i, '')\n            .replace(/^```\\s*/i, '')\n            .replace(/\\s*```\\s*$/m, '');\n    };\n\n    const parseMindMapJson = function(raw) {\n        var data = raw;\n        var parsed = null;\n\n        try {\n            parsed = JSON.parse(data);\n            if (typeof parsed === 'string') {\n                parsed = JSON.parse(parsed);\n            }\n        } catch (error) {\n            parsed = null;\n        }\n\n        if (!parsed) {\n            parsed = JSON.parse(data.trim());\n            if (typeof parsed === 'string') {\n                parsed = JSON.parse(parsed);\n            }\n        }\n\n        if (!parsed || typeof parsed !== 'object') {\n            throw new Error('Invalid mind map payload type');\n        }\n\n        return parsed;\n    };\n\n    return {\n        /**\n         * Initialize the mind map visualization\n         */\n        init: function() {\n            var container = document.getElementById(CONTAINER_ID);\n            if (!container) {\n                return;\n            }\n\n            var encoded = container.getAttribute('data-mindmap-b64');\n            var raw = encoded ? atob(encoded) : container.getAttribute('data-mindmap');\n\n            if (!raw) {\n                return;\n            }\n\n            var cleaned = stripCodeFences(decodeHtmlEntities(raw));\n            var data = null;\n\n            try {\n                data = parseMindMapJson(cleaned);\n            } catch (error) {\n                var message = 'Error parsing mind map data: ' + (error && error.message ? error.message : error);\n                Log.error(message);\n                container.innerHTML = '<div class=\"alert alert-warning\">Unable to display mind map. Invalid data format.</div>';\n                return;\n            }\n\n            this.renderMindMap(container, data);\n        },\n\n        /**\n         * Render the mind map\n         *\n         * @param {HTMLElement} container Container element\n         * @param {Object} data Mind map data\n         */\n        renderMindMap: function(container, data) {\n            var html = '<div class=\"mindmap-root\">';\n            html += '<div class=\"mindmap-central\">' + (data.central || 'Main Topic') + '</div>';\n            html += '<div class=\"mindmap-branches\">';\n\n            if (data.branches && Array.isArray(data.branches)) {\n                data.branches.forEach(function(branch) {\n                    html += '<div class=\"mindmap-branch\">';\n                    html += '<div class=\"mindmap-branch-topic\">' + (branch.topic || '') + '</div>';\n\n                    if (branch.subtopics && Array.isArray(branch.subtopics)) {\n                        html += '<ul class=\"mindmap-subtopics\">';\n                        branch.subtopics.forEach(function(subtopic) {\n                            html += '<li>' + subtopic + '</li>';\n                        });\n                        html += '</ul>';\n                    }\n\n                    html += '</div>';\n                });\n            }\n\n            html += '</div>';\n            html += '</div>';\n\n            container.innerHTML = html;\n            this.addStyles();\n        },\n\n        /**\n         * Add basic CSS styles for mind map\n         */\n        addStyles: function() {\n            var styleId = 'rvs-mindmap-styles';\n            if (document.getElementById(styleId)) {\n                return;\n            }\n\n            var style = document.createElement('style');\n            style.id = styleId;\n            style.textContent = `\n                .mindmap-root {\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    padding: 20px;\n                }\n                .mindmap-central {\n                    background: #0f6cbf;\n                    color: white;\n                    padding: 15px 30px;\n                    border-radius: 50px;\n                    font-size: 20px;\n                    font-weight: bold;\n                    margin-bottom: 30px;\n                }\n                .mindmap-branches {\n                    display: flex;\n                    flex-wrap: wrap;\n                    justify-content: center;\n                    gap: 20px;\n                }\n                .mindmap-branch {\n                    background: #f0f0f0;\n                    border: 2px solid #0f6cbf;\n                    border-radius: 10px;\n                    padding: 15px;\n                    min-width: 200px;\n                }\n                .mindmap-branch-topic {\n                    font-weight: bold;\n                    color: #0f6cbf;\n                    margin-bottom: 10px;\n                    font-size: 16px;\n                }\n                .mindmap-subtopics {\n                    list-style: none;\n                    padding-left: 0;\n                }\n                .mindmap-subtopics li {\n                    padding: 5px 0;\n                    padding-left: 15px;\n                    position: relative;\n                }\n                .mindmap-subtopics li:before {\n                    content: \"â†’\";\n                    position: absolute;\n                    left: 0;\n                }\n            `;\n            document.head.appendChild(style);\n        }\n    };\n});\n\n"],"names":["define","Log","init","container","document","getElementById","encoded","getAttribute","raw","atob","cleaned","value","textarea","createElement","innerHTML","decodeHtmlEntities","replace","data","parsed","JSON","parse","error","trim","Error","parseMindMapJson","message","renderMindMap","html","central","branches","Array","isArray","forEach","branch","topic","subtopics","subtopic","addStyles","style","id","textContent","head","appendChild"],"mappings":";;;;;;;AAuBAA,yBAAO,CAAC,aAAa,SAASC,WA+CnB,CAIHC,KAAM,eACEC,UAAYC,SAASC,eAnDZ,4BAoDRF,eAIDG,QAAUH,UAAUI,aAAa,oBACjCC,IAAMF,QAAUG,KAAKH,SAAWH,UAAUI,aAAa,mBAEtDC,SAIDE,QA7De,SAASC,UACR,oBAAbP,gBACAO,UAGPC,SAAWR,SAASS,cAAc,mBACtCD,SAASE,UAAYH,MACdC,SAASD,MAsDkBI,CAAmBP,KAjDhDQ,QAAQ,eAAgB,IACxBA,QAAQ,WAAY,IACpBA,QAAQ,cAAe,IAgDpBC,KAAO,SAGPA,KAhDa,SAAST,SAC1BS,KAAOT,IACPU,OAAS,SAIa,iBADtBA,OAASC,KAAKC,MAAMH,SAEhBC,OAASC,KAAKC,MAAMF,SAE1B,MAAOG,OACLH,OAAS,QAGRA,QAEqB,iBADtBA,OAASC,KAAKC,MAAMH,KAAKK,WAErBJ,OAASC,KAAKC,MAAMF,UAIvBA,QAA4B,iBAAXA,aACZ,IAAIK,MAAM,wCAGbL,OAwBQM,CAAiBd,SAC1B,MAAOW,WACDI,QAAU,iCAAmCJ,OAASA,MAAMI,QAAUJ,MAAMI,QAAUJ,cAC1FpB,IAAIoB,MAAMI,cACVtB,UAAUW,UAAY,gGAIrBY,cAAcvB,UAAWc,SASlCS,cAAe,SAASvB,UAAWc,UAC3BU,KAAO,6BACXA,MAAQ,iCAAmCV,KAAKW,SAAW,cAAgB,SAC3ED,MAAQ,iCAEJV,KAAKY,UAAYC,MAAMC,QAAQd,KAAKY,WACpCZ,KAAKY,SAASG,SAAQ,SAASC,QAC3BN,MAAQ,+BACRA,MAAQ,sCAAwCM,OAAOC,OAAS,IAAM,SAElED,OAAOE,WAAaL,MAAMC,QAAQE,OAAOE,aACzCR,MAAQ,iCACRM,OAAOE,UAAUH,SAAQ,SAASI,UAC9BT,MAAQ,OAASS,SAAW,WAEhCT,MAAQ,SAGZA,MAAQ,YAIhBA,MAAQ,SACRA,MAAQ,SAERxB,UAAUW,UAAYa,UACjBU,aAMTA,UAAW,eAEHjC,SAASC,eADC,2BAKViC,MAAQlC,SAASS,cAAc,SACnCyB,MAAMC,GANQ,qBAOdD,MAAME,mtDAkDNpC,SAASqC,KAAKC,YAAYJ"}