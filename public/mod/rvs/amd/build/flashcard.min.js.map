{"version":3,"file":"flashcard.min.js","sources":["../src/flashcard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Flashcard module for RVS\n *\n * @module     mod_rvs/flashcard\n * @copyright  2025 RVIBS\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    var currentCard = 0;\n    var filteredCards = [];\n    var isFlipped = false;\n\n    return {\n        /**\n         * Initialize the flashcard module\n         */\n        init: function() {\n            if (typeof window.flashcardData === 'undefined') {\n                return;\n            }\n\n            filteredCards = window.flashcardData;\n            this.renderCurrentCard();\n            this.setupEventHandlers();\n        },\n\n        /**\n         * Render the current flashcard\n         */\n        renderCurrentCard: function() {\n            var container = $('#flashcard-deck');\n\n            if (filteredCards.length === 0) {\n                container.html('<div class=\"alert alert-info\">No flashcards match the selected filter.</div>');\n                return;\n            }\n\n            var card = filteredCards[currentCard];\n\n            var html = '<div class=\"flashcard-wrapper\">';\n            html += '<div class=\"flashcard' + (isFlipped ? ' flipped' : '') + '\">';\n            html += '<div class=\"flashcard-front\">';\n            html += '<div class=\"flashcard-label\">Question</div>';\n            html += '<div class=\"flashcard-content\">' + card.question + '</div>';\n            html += '<div class=\"flashcard-difficulty badge badge-' + this.getDifficultyClass(card.difficulty) + '\">';\n            html += card.difficulty.toUpperCase();\n            html += '</div>';\n            html += '</div>';\n            html += '<div class=\"flashcard-back\">';\n            html += '<div class=\"flashcard-label\">Answer</div>';\n            html += '<div class=\"flashcard-content\">' + card.answer + '</div>';\n            html += '</div>';\n            html += '</div>';\n            html += '</div>';\n\n            container.html(html);\n\n            // Update counter\n            $('#flashcard-counter').text((currentCard + 1) + ' / ' + filteredCards.length);\n\n            // Add styles\n            this.addStyles();\n        },\n\n        /**\n         * Get Bootstrap class for difficulty level\n         *\n         * @param {String} difficulty Difficulty level\n         * @returns {String} CSS class\n         */\n        getDifficultyClass: function(difficulty) {\n            switch (difficulty) {\n                case 'easy':\n                    return 'success';\n                case 'medium':\n                    return 'warning';\n                case 'hard':\n                    return 'danger';\n                default:\n                    return 'secondary';\n            }\n        },\n\n        /**\n         * Setup event handlers\n         */\n        setupEventHandlers: function() {\n            var self = this;\n\n            // Previous button\n            $('#flashcard-prev').on('click', function() {\n                if (currentCard > 0) {\n                    currentCard--;\n                    isFlipped = false;\n                    self.renderCurrentCard();\n                }\n            });\n\n            // Next button\n            $('#flashcard-next').on('click', function() {\n                if (currentCard < filteredCards.length - 1) {\n                    currentCard++;\n                    isFlipped = false;\n                    self.renderCurrentCard();\n                }\n            });\n\n            // Flip button\n            $('#flashcard-flip').on('click', function() {\n                isFlipped = !isFlipped;\n                $('.flashcard').toggleClass('flipped');\n            });\n\n            // Difficulty filter\n            $('#flashcard-difficulty-filter').on('change', function() {\n                var difficulty = $(this).val();\n\n                if (difficulty === 'all') {\n                    filteredCards = window.flashcardData;\n                } else {\n                    filteredCards = window.flashcardData.filter(function(card) {\n                        return card.difficulty === difficulty;\n                    });\n                }\n\n                currentCard = 0;\n                isFlipped = false;\n                self.renderCurrentCard();\n            });\n        },\n\n        /**\n         * Add CSS styles for flashcards\n         */\n        addStyles: function() {\n            var styleId = 'rvs-flashcard-styles';\n            if (document.getElementById(styleId)) {\n                return;\n            }\n\n            var style = document.createElement('style');\n            style.id = styleId;\n            style.textContent = `\n                .flashcard-wrapper {\n                    perspective: 1000px;\n                    margin: 20px auto;\n                    max-width: 600px;\n                }\n                .flashcard {\n                    position: relative;\n                    width: 100%;\n                    height: 400px;\n                    transition: transform 0.6s;\n                    transform-style: preserve-3d;\n                }\n                .flashcard.flipped {\n                    transform: rotateY(180deg);\n                }\n                .flashcard-front,\n                .flashcard-back {\n                    position: absolute;\n                    width: 100%;\n                    height: 100%;\n                    backface-visibility: hidden;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    align-items: center;\n                    border: 2px solid #0f6cbf;\n                    border-radius: 10px;\n                    background: white;\n                    padding: 30px;\n                    box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n                }\n                .flashcard-back {\n                    transform: rotateY(180deg);\n                    background: #f8f9fa;\n                }\n                .flashcard-label {\n                    position: absolute;\n                    top: 15px;\n                    left: 15px;\n                    font-size: 12px;\n                    color: #666;\n                    text-transform: uppercase;\n                    font-weight: bold;\n                }\n                .flashcard-content {\n                    font-size: 18px;\n                    text-align: center;\n                    line-height: 1.6;\n                }\n                .flashcard-difficulty {\n                    position: absolute;\n                    top: 15px;\n                    right: 15px;\n                    font-size: 11px;\n                    padding: 4px 10px;\n                }\n                .flashcard-navigation {\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    gap: 10px;\n                }\n            `;\n            document.head.appendChild(style);\n        }\n    };\n});\n\n"],"names":["define","$","currentCard","filteredCards","isFlipped","init","window","flashcardData","renderCurrentCard","setupEventHandlers","container","length","card","html","question","this","getDifficultyClass","difficulty","toUpperCase","answer","text","addStyles","self","on","toggleClass","val","filter","document","getElementById","style","createElement","id","textContent","head","appendChild"],"mappings":";;;;;;;AAuBAA,2BAAO,CAAC,WAAW,SAASC,OAEpBC,YAAc,EACdC,cAAgB,GAChBC,WAAY,QAET,CAIHC,KAAM,gBACkC,IAAzBC,OAAOC,gBAIlBJ,cAAgBG,OAAOC,mBAClBC,yBACAC,uBAMTD,kBAAmB,eACXE,UAAYT,EAAE,sBAEW,IAAzBE,cAAcQ,YAKdC,KAAOT,cAAcD,aAErBW,KAAO,kCACXA,MAAQ,yBAA2BT,UAAY,WAAa,IAAM,KAClES,MAAQ,gCACRA,MAAQ,8CACRA,MAAQ,kCAAoCD,KAAKE,SAAW,SAC5DD,MAAQ,gDAAkDE,KAAKC,mBAAmBJ,KAAKK,YAAc,KACrGJ,MAAQD,KAAKK,WAAWC,cACxBL,MAAQ,SACRA,MAAQ,SACRA,MAAQ,+BACRA,MAAQ,4CACRA,MAAQ,kCAAoCD,KAAKO,OAAS,SAC1DN,MAAQ,SACRA,MAAQ,SACRA,MAAQ,SAERH,UAAUG,KAAKA,MAGfZ,EAAE,sBAAsBmB,KAAMlB,YAAc,EAAK,MAAQC,cAAcQ,aAGlEU,iBA5BDX,UAAUG,KAAK,iFAqCvBG,mBAAoB,SAASC,mBACjBA,gBACC,aACM,cACN,eACM,cACN,aACM,uBAEA,cAOnBR,mBAAoB,eACZa,KAAOP,KAGXd,EAAE,mBAAmBsB,GAAG,SAAS,WACzBrB,YAAc,IACdA,cACAE,WAAY,EACZkB,KAAKd,wBAKbP,EAAE,mBAAmBsB,GAAG,SAAS,WACzBrB,YAAcC,cAAcQ,OAAS,IACrCT,cACAE,WAAY,EACZkB,KAAKd,wBAKbP,EAAE,mBAAmBsB,GAAG,SAAS,WAC7BnB,WAAaA,UACbH,EAAE,cAAcuB,YAAY,cAIhCvB,EAAE,gCAAgCsB,GAAG,UAAU,eACvCN,WAAahB,EAAEc,MAAMU,MAGrBtB,cADe,QAAfc,WACgBX,OAAOC,cAEPD,OAAOC,cAAcmB,QAAO,SAASd,aAC1CA,KAAKK,aAAeA,cAInCf,YAAc,EACdE,WAAY,EACZkB,KAAKd,wBAOba,UAAW,eAEHM,SAASC,eADC,6BAKVC,MAAQF,SAASG,cAAc,SACnCD,MAAME,GANQ,uBAOdF,MAAMG,+wEAgENL,SAASM,KAAKC,YAAYL"}