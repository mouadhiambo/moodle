{"version":3,"file":"quiz.min.js","sources":["../src/quiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quiz module for RVS\n *\n * @module     mod_rvs/quiz\n * @copyright  2025 RVIBS\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    var userAnswers = {};\n    var filteredQuestions = [];\n\n    return {\n        /**\n         * Initialize the quiz module\n         */\n        init: function() {\n            if (typeof window.quizData === 'undefined') {\n                return;\n            }\n\n            filteredQuestions = window.quizData;\n            this.renderQuiz();\n            this.setupEventHandlers();\n        },\n\n        /**\n         * Render all quiz questions\n         */\n        renderQuiz: function() {\n            var container = $('#quiz-questions');\n\n            if (filteredQuestions.length === 0) {\n                container.html('<div class=\"alert alert-info\">No questions match the selected filter.</div>');\n                return;\n            }\n\n            var html = '';\n\n            filteredQuestions.forEach(function(question) {\n                html += '<div class=\"quiz-question card mb-3\" data-question-id=\"' + question.id + '\">';\n                html += '<div class=\"card-body\">';\n\n                // Question header\n                html += '<div class=\"d-flex justify-content-between align-items-start mb-3\">';\n                html += '<h5 class=\"mb-0\">Question ' + question.number + '</h5>';\n                html += '<span class=\"badge badge-' + this.getDifficultyClass(question.difficulty) + '\">';\n                html += question.difficulty.toUpperCase();\n                html += '</span>';\n                html += '</div>';\n\n                // Question text\n                html += '<p class=\"question-text\">' + question.question + '</p>';\n\n                // Options\n                html += '<div class=\"quiz-options\">';\n                question.options.forEach(function(option, optIndex) {\n                    html += '<div class=\"form-check\">';\n                    html += '<input class=\"form-check-input quiz-option\" type=\"radio\" ';\n                    html += 'name=\"question_' + question.id + '\" ';\n                    html += 'id=\"q' + question.id + '_opt' + optIndex + '\" ';\n                    html += 'value=\"' + optIndex + '\">';\n                    html += '<label class=\"form-check-label\" for=\"q' + question.id + '_opt' + optIndex + '\">';\n                    html += option;\n                    html += '</label>';\n                    html += '</div>';\n                });\n                html += '</div>';\n\n                // Explanation (hidden initially)\n                html += '<div class=\"quiz-explanation alert alert-info mt-3\" style=\"display: none;\">';\n                html += '<strong>Explanation:</strong> ' + question.explanation;\n                html += '</div>';\n\n                html += '</div>';\n                html += '</div>';\n            }.bind(this));\n\n            container.html(html);\n            this.addStyles();\n        },\n\n        /**\n         * Get Bootstrap class for difficulty level\n         *\n         * @param {String} difficulty Difficulty level\n         * @returns {String} CSS class\n         */\n        getDifficultyClass: function(difficulty) {\n            switch (difficulty) {\n                case 'easy':\n                    return 'success';\n                case 'medium':\n                    return 'warning';\n                case 'hard':\n                    return 'danger';\n                default:\n                    return 'secondary';\n            }\n        },\n\n        /**\n         * Setup event handlers\n         */\n        setupEventHandlers: function() {\n            var self = this;\n\n            // Store user answers\n            $('.quiz-option').on('change', function() {\n                var questionId = $(this).closest('.quiz-question').data('question-id');\n                userAnswers[questionId] = parseInt($(this).val());\n            });\n\n            // Check answers button\n            $('#check-answers').on('click', function() {\n                self.checkAnswers();\n            });\n\n            // Reset quiz button\n            $('#reset-quiz').on('click', function() {\n                self.resetQuiz();\n            });\n\n            // Difficulty filter\n            $('#quiz-difficulty-filter').on('change', function() {\n                var difficulty = $(this).val();\n\n                if (difficulty === 'all') {\n                    filteredQuestions = window.quizData;\n                } else {\n                    filteredQuestions = window.quizData.filter(function(q) {\n                        return q.difficulty === difficulty;\n                    });\n                }\n\n                userAnswers = {};\n                self.renderQuiz();\n                self.setupEventHandlers();\n            });\n        },\n\n        /**\n         * Check all answers and display results\n         */\n        checkAnswers: function() {\n            var correct = 0;\n            var total = filteredQuestions.length;\n\n            filteredQuestions.forEach(function(question) {\n                var questionCard = $('.quiz-question[data-question-id=\"' + question.id + '\"]');\n                var userAnswer = userAnswers[question.id];\n\n                // Reset previous feedback\n                questionCard.find('.quiz-options .form-check').removeClass('correct-answer incorrect-answer');\n\n                if (typeof userAnswer !== 'undefined') {\n                    if (userAnswer === question.correctanswer) {\n                        correct++;\n                        questionCard.find('.quiz-options .form-check').eq(userAnswer)\n                            .addClass('correct-answer');\n                    } else {\n                        questionCard.find('.quiz-options .form-check').eq(userAnswer)\n                            .addClass('incorrect-answer');\n                        questionCard.find('.quiz-options .form-check').eq(question.correctanswer)\n                            .addClass('correct-answer');\n                    }\n\n                    // Show explanation\n                    questionCard.find('.quiz-explanation').slideDown();\n                } else {\n                    // Show correct answer for unanswered questions\n                    questionCard.find('.quiz-options .form-check').eq(question.correctanswer)\n                        .addClass('correct-answer');\n                }\n            });\n\n            var percentage = total > 0 ? Math.round((correct / total) * 100) : 0;\n            var resultHtml = '<div class=\"alert alert-' + this.getScoreClass(percentage) + '\">';\n            resultHtml += '<h4>Your Score: ' + correct + ' / ' + total + ' (' + percentage + '%)</h4>';\n\n            if (percentage >= 80) {\n                resultHtml += '<p>Excellent work! You have a strong understanding of the material.</p>';\n            } else if (percentage >= 60) {\n                resultHtml += '<p>Good job! Review the explanations for questions you missed.</p>';\n            } else {\n                resultHtml += '<p>Keep studying! Review the material and try again.</p>';\n            }\n\n            resultHtml += '</div>';\n\n            $('#quiz-results').html(resultHtml).slideDown();\n        },\n\n        /**\n         * Get alert class based on score\n         *\n         * @param {Number} percentage Score percentage\n         * @returns {String} CSS class\n         */\n        getScoreClass: function(percentage) {\n            if (percentage >= 80) {\n                return 'success';\n            } else if (percentage >= 60) {\n                return 'warning';\n            } else {\n                return 'danger';\n            }\n        },\n\n        /**\n         * Reset the quiz\n         */\n        resetQuiz: function() {\n            userAnswers = {};\n            $('.quiz-option').prop('checked', false);\n            $('.quiz-options .form-check').removeClass('correct-answer incorrect-answer');\n            $('.quiz-explanation').slideUp();\n            $('#quiz-results').slideUp();\n        },\n\n        /**\n         * Add CSS styles for quiz\n         */\n        addStyles: function() {\n            var styleId = 'rvs-quiz-styles';\n            if (document.getElementById(styleId)) {\n                return;\n            }\n\n            var style = document.createElement('style');\n            style.id = styleId;\n            style.textContent = `\n                .quiz-question {\n                    border-left: 4px solid #0f6cbf;\n                }\n                .quiz-options .form-check {\n                    padding: 10px;\n                    margin: 5px 0;\n                    border-radius: 5px;\n                    transition: background-color 0.3s;\n                }\n                .quiz-options .form-check:hover {\n                    background-color: #f8f9fa;\n                }\n                .quiz-options .form-check.correct-answer {\n                    background-color: #d4edda;\n                    border: 1px solid #c3e6cb;\n                }\n                .quiz-options .form-check.incorrect-answer {\n                    background-color: #f8d7da;\n                    border: 1px solid #f5c6cb;\n                }\n                .quiz-options .form-check.correct-answer label {\n                    color: #155724;\n                    font-weight: bold;\n                }\n                .quiz-options .form-check.incorrect-answer label {\n                    color: #721c24;\n                }\n                .question-text {\n                    font-size: 16px;\n                    line-height: 1.6;\n                    margin-bottom: 15px;\n                }\n                .quiz-explanation {\n                    margin-top: 15px;\n                }\n            `;\n            document.head.appendChild(style);\n        }\n    };\n});\n\n"],"names":["define","$","userAnswers","filteredQuestions","init","window","quizData","renderQuiz","setupEventHandlers","container","length","html","forEach","question","id","number","this","getDifficultyClass","difficulty","toUpperCase","options","option","optIndex","explanation","bind","addStyles","self","on","questionId","closest","data","parseInt","val","checkAnswers","resetQuiz","filter","q","correct","total","questionCard","userAnswer","find","removeClass","correctanswer","eq","addClass","slideDown","percentage","Math","round","resultHtml","getScoreClass","prop","slideUp","document","getElementById","style","createElement","textContent","head","appendChild"],"mappings":"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"}